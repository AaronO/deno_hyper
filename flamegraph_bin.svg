<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>deno_hyper_bin`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="0.0000%" y="661" width="0.0102%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="671.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (2 samples, 0.02%)</title><rect x="0.0102%" y="661" width="0.0204%" height="15" fill="rgb(217,0,24)"/><text x="0.2602%" y="671.50"></text></g><g><title>deno_hyper_bin`tokio::coop::Budget::initial (1 samples, 0.01%)</title><rect x="0.0306%" y="661" width="0.0102%" height="15" fill="rgb(221,193,54)"/><text x="0.2806%" y="671.50"></text></g><g><title>deno_hyper_bin`tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="0.0408%" y="661" width="0.0102%" height="15" fill="rgb(248,212,6)"/><text x="0.2908%" y="671.50"></text></g><g><title>deno_hyper_bin`&lt;T as core::any::Any&gt;::type_id (3 samples, 0.03%)</title><rect x="0.1836%" y="629" width="0.0306%" height="15" fill="rgb(208,68,35)"/><text x="0.4336%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="0.2142%" y="629" width="0.0408%" height="15" fill="rgb(232,128,0)"/><text x="0.4642%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::handle::HandleHost as core::convert::From&lt;&amp;rusty_v8::isolate::IsolateHandle&gt;&gt;::from (1 samples, 0.01%)</title><rect x="0.2550%" y="629" width="0.0102%" height="15" fill="rgb(207,160,47)"/><text x="0.5050%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::isolate::OwnedIsolate as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="0.2652%" y="629" width="0.0102%" height="15" fill="rgb(228,23,34)"/><text x="0.5152%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::scope::EscapableHandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="0.2754%" y="629" width="0.0102%" height="15" fill="rgb(218,30,26)"/><text x="0.5254%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::scope::TryCatch&lt;rusty_v8::scope::HandleScope&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.03%)</title><rect x="0.2856%" y="629" width="0.0306%" height="15" fill="rgb(220,122,19)"/><text x="0.5356%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.3162%" y="629" width="0.0102%" height="15" fill="rgb(250,228,42)"/><text x="0.5662%" y="639.50"></text></g><g><title>deno_hyper_bin`__rust_dealloc (2 samples, 0.02%)</title><rect x="0.3264%" y="629" width="0.0204%" height="15" fill="rgb(240,193,28)"/><text x="0.5764%" y="639.50"></text></g><g><title>deno_hyper_bin`deno_core::runtime::JsRuntime::check_promise_exceptions (1 samples, 0.01%)</title><rect x="0.3468%" y="629" width="0.0102%" height="15" fill="rgb(216,20,37)"/><text x="0.5968%" y="639.50"></text></g><g><title>deno_hyper_bin`deno_core::runtime::JsRuntime::global_context (1 samples, 0.01%)</title><rect x="0.3570%" y="629" width="0.0102%" height="15" fill="rgb(206,188,39)"/><text x="0.6070%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.01%)</title><rect x="0.9079%" y="613" width="0.0102%" height="15" fill="rgb(217,207,13)"/><text x="1.1579%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.09%)</title><rect x="0.9181%" y="613" width="0.0918%" height="15" fill="rgb(231,73,38)"/><text x="1.1681%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="1.0099%" y="613" width="0.0102%" height="15" fill="rgb(225,20,46)"/><text x="1.2599%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (5 samples, 0.05%)</title><rect x="1.0201%" y="613" width="0.0510%" height="15" fill="rgb(210,31,41)"/><text x="1.2701%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::handle::HandleHost as core::convert::From&lt;&amp;rusty_v8::isolate::IsolateHandle&gt;&gt;::from (1 samples, 0.01%)</title><rect x="1.0711%" y="613" width="0.0102%" height="15" fill="rgb(221,200,47)"/><text x="1.3211%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::scope::HandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="1.0813%" y="613" width="0.0102%" height="15" fill="rgb(226,26,5)"/><text x="1.3313%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (5 samples, 0.05%)</title><rect x="1.0915%" y="613" width="0.0510%" height="15" fill="rgb(249,33,26)"/><text x="1.3415%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (1 samples, 0.01%)</title><rect x="1.1425%" y="613" width="0.0102%" height="15" fill="rgb(235,183,28)"/><text x="1.3925%" y="623.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="1.1527%" y="613" width="0.0102%" height="15" fill="rgb(221,5,38)"/><text x="1.4027%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.2139%" y="597" width="0.0102%" height="15" fill="rgb(247,18,42)"/><text x="1.4639%" y="607.50"></text></g><g><title>deno_hyper_bin`deno_core::runtime::JsRuntime::check_promise_exceptions (7 samples, 0.07%)</title><rect x="1.1629%" y="613" width="0.0714%" height="15" fill="rgb(241,131,45)"/><text x="1.4129%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="1.2241%" y="597" width="0.0102%" height="15" fill="rgb(249,31,29)"/><text x="1.4741%" y="607.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.2547%" y="597" width="0.0102%" height="15" fill="rgb(225,111,53)"/><text x="1.5047%" y="607.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.02%)</title><rect x="1.2649%" y="597" width="0.0204%" height="15" fill="rgb(238,160,17)"/><text x="1.5149%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::thread_safe_handle (2 samples, 0.02%)</title><rect x="1.2853%" y="597" width="0.0204%" height="15" fill="rgb(214,148,48)"/><text x="1.5353%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__GetData (1 samples, 0.01%)</title><rect x="1.2955%" y="581" width="0.0102%" height="15" fill="rgb(232,36,49)"/><text x="1.5455%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::V8::GlobalizeReference (9 samples, 0.09%)</title><rect x="1.3057%" y="581" width="0.0918%" height="15" fill="rgb(209,103,24)"/><text x="1.5557%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalHandles::Create (6 samples, 0.06%)</title><rect x="1.3363%" y="565" width="0.0612%" height="15" fill="rgb(229,88,8)"/><text x="1.5863%" y="575.50"></text></g><g><title>deno_hyper_bin`deno_core::runtime::JsRuntime::global_context (17 samples, 0.17%)</title><rect x="1.2343%" y="613" width="0.1734%" height="15" fill="rgb(213,181,19)"/><text x="1.4843%" y="623.50"></text></g><g><title>deno_hyper_bin`v8__Global__New (10 samples, 0.10%)</title><rect x="1.3057%" y="597" width="0.1020%" height="15" fill="rgb(254,191,54)"/><text x="1.5557%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalHandles::Create (1 samples, 0.01%)</title><rect x="1.3975%" y="581" width="0.0102%" height="15" fill="rgb(241,83,37)"/><text x="1.6475%" y="591.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::as_u32_slice (4 samples, 0.04%)</title><rect x="1.4077%" y="613" width="0.0408%" height="15" fill="rgb(233,36,39)"/><text x="1.6577%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (1 samples, 0.01%)</title><rect x="1.4383%" y="597" width="0.0102%" height="15" fill="rgb(226,3,54)"/><text x="1.6883%" y="607.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="1.5811%" y="597" width="0.0306%" height="15" fill="rgb(245,192,40)"/><text x="1.8311%" y="607.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (7 samples, 0.07%)</title><rect x="1.6118%" y="597" width="0.0714%" height="15" fill="rgb(238,167,29)"/><text x="1.8618%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (1 samples, 0.01%)</title><rect x="1.7138%" y="565" width="0.0102%" height="15" fill="rgb(232,182,51)"/><text x="1.9638%" y="575.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="1.7036%" y="581" width="0.0306%" height="15" fill="rgb(231,60,39)"/><text x="1.9536%" y="591.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__ByteLength (1 samples, 0.01%)</title><rect x="1.7240%" y="565" width="0.0102%" height="15" fill="rgb(208,69,12)"/><text x="1.9740%" y="575.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (2 samples, 0.02%)</title><rect x="1.7342%" y="581" width="0.0204%" height="15" fill="rgb(235,93,37)"/><text x="1.9842%" y="591.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__get (1 samples, 0.01%)</title><rect x="1.7546%" y="581" width="0.0102%" height="15" fill="rgb(213,116,39)"/><text x="2.0046%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (2 samples, 0.02%)</title><rect x="1.7648%" y="581" width="0.0204%" height="15" fill="rgb(222,207,29)"/><text x="2.0148%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::Data (1 samples, 0.01%)</title><rect x="1.7852%" y="581" width="0.0102%" height="15" fill="rgb(206,96,30)"/><text x="2.0352%" y="591.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__ByteLength (3 samples, 0.03%)</title><rect x="1.7954%" y="581" width="0.0306%" height="15" fill="rgb(218,138,4)"/><text x="2.0454%" y="591.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::as_u32_slice (15 samples, 0.15%)</title><rect x="1.6832%" y="597" width="0.1530%" height="15" fill="rgb(250,191,14)"/><text x="1.9332%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__Data (1 samples, 0.01%)</title><rect x="1.8260%" y="581" width="0.0102%" height="15" fill="rgb(239,60,40)"/><text x="2.0760%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (1 samples, 0.01%)</title><rect x="1.8770%" y="565" width="0.0102%" height="15" fill="rgb(206,27,48)"/><text x="2.1270%" y="575.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="1.8566%" y="581" width="0.0408%" height="15" fill="rgb(225,35,8)"/><text x="2.1066%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::Data (1 samples, 0.01%)</title><rect x="1.8872%" y="565" width="0.0102%" height="15" fill="rgb(250,213,24)"/><text x="2.1372%" y="575.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::as_u32_slice_mut (7 samples, 0.07%)</title><rect x="1.8362%" y="597" width="0.0714%" height="15" fill="rgb(247,123,22)"/><text x="2.0862%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__ByteLength (1 samples, 0.01%)</title><rect x="1.8974%" y="581" width="0.0102%" height="15" fill="rgb(231,138,38)"/><text x="2.1474%" y="591.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::BackingStore::byte_length (8 samples, 0.08%)</title><rect x="1.9076%" y="597" width="0.0816%" height="15" fill="rgb(231,145,46)"/><text x="2.1576%" y="607.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__get (13 samples, 0.13%)</title><rect x="1.9892%" y="597" width="0.1326%" height="15" fill="rgb(251,118,11)"/><text x="2.2392%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (7 samples, 0.07%)</title><rect x="2.1218%" y="597" width="0.0714%" height="15" fill="rgb(217,147,25)"/><text x="2.3718%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__ByteLength (6 samples, 0.06%)</title><rect x="2.1932%" y="597" width="0.0612%" height="15" fill="rgb(247,81,37)"/><text x="2.4432%" y="607.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::push (80 samples, 0.82%)</title><rect x="1.4485%" y="613" width="0.8161%" height="15" fill="rgb(209,12,38)"/><text x="1.6985%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="2.2544%" y="597" width="0.0102%" height="15" fill="rgb(227,1,9)"/><text x="2.5044%" y="607.50"></text></g><g><title>deno_hyper_bin`futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.01%)</title><rect x="2.2646%" y="613" width="0.0102%" height="15" fill="rgb(248,47,43)"/><text x="2.5146%" y="623.50"></text></g><g><title>deno_hyper_bin`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="2.8971%" y="581" width="0.0306%" height="15" fill="rgb(221,10,30)"/><text x="3.1471%" y="591.50"></text></g><g><title>deno_hyper_bin`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="3.1623%" y="565" width="0.0102%" height="15" fill="rgb(210,229,1)"/><text x="3.4123%" y="575.50"></text></g><g><title>deno_hyper_bin`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="3.1725%" y="565" width="0.0102%" height="15" fill="rgb(222,148,37)"/><text x="3.4225%" y="575.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.4479%" y="533" width="0.0102%" height="15" fill="rgb(234,67,33)"/><text x="3.6979%" y="543.50"></text></g><g><title>deno_hyper_bin`&lt;deno_core::ops_bin::ResponseHeader as core::convert::Into&lt;[u8 (1 samples, 0.01%)</title><rect x="3.4581%" y="533" width="0.0102%" height="15" fill="rgb(247,98,35)"/><text x="3.7081%" y="543.50"></text></g><g><title> 16]&gt;&gt;::into (1 samples, 0.01%)</title><rect x="3.4581%" y="517" width="0.0102%" height="15" fill="rgb(247,138,52)"/><text x="3.7081%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="3.4989%" y="501" width="0.0102%" height="15" fill="rgb(213,79,30)"/><text x="3.7489%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (38 samples, 0.39%)</title><rect x="3.4071%" y="549" width="0.3876%" height="15" fill="rgb(246,177,23)"/><text x="3.6571%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`malloc (32 samples, 0.33%)</title><rect x="3.4683%" y="533" width="0.3264%" height="15" fill="rgb(230,62,27)"/><text x="3.7183%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (31 samples, 0.32%)</title><rect x="3.4785%" y="517" width="0.3162%" height="15" fill="rgb(216,154,8)"/><text x="3.7285%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.29%)</title><rect x="3.5091%" y="501" width="0.2856%" height="15" fill="rgb(244,35,45)"/><text x="3.7591%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.28%)</title><rect x="3.5193%" y="485" width="0.2754%" height="15" fill="rgb(251,115,12)"/><text x="3.7693%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.06%)</title><rect x="3.7336%" y="469" width="0.0612%" height="15" fill="rgb(240,54,50)"/><text x="3.9836%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="3.7642%" y="453" width="0.0306%" height="15" fill="rgb(233,84,52)"/><text x="4.0142%" y="463.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="3.7948%" y="549" width="0.0510%" height="15" fill="rgb(207,117,47)"/><text x="4.0448%" y="559.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="4.0804%" y="533" width="0.0204%" height="15" fill="rgb(249,43,39)"/><text x="4.3304%" y="543.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;T as core::fmt::Display&gt;::fmt (7 samples, 0.07%)</title><rect x="4.8761%" y="517" width="0.0714%" height="15" fill="rgb(209,38,44)"/><text x="5.1261%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="4.9475%" y="517" width="0.0408%" height="15" fill="rgb(236,212,23)"/><text x="5.1975%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;http::header::name::HeaderName as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="4.9883%" y="517" width="0.0204%" height="15" fill="rgb(242,79,21)"/><text x="5.2383%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.01%)</title><rect x="5.0087%" y="517" width="0.0102%" height="15" fill="rgb(211,96,35)"/><text x="5.2587%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (6 samples, 0.06%)</title><rect x="5.0189%" y="517" width="0.0612%" height="15" fill="rgb(253,215,40)"/><text x="5.2689%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="5.0801%" y="517" width="0.0204%" height="15" fill="rgb(211,81,21)"/><text x="5.3301%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;str as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="5.1005%" y="517" width="0.0306%" height="15" fill="rgb(208,190,38)"/><text x="5.3505%" y="527.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$memmove (1 samples, 0.01%)</title><rect x="5.1311%" y="517" width="0.0102%" height="15" fill="rgb(235,213,38)"/><text x="5.3811%" y="527.50"></text></g><g><title>deno_hyper_bin`__rdl_dealloc (2 samples, 0.02%)</title><rect x="5.1413%" y="517" width="0.0204%" height="15" fill="rgb(237,122,38)"/><text x="5.3913%" y="527.50"></text></g><g><title>deno_hyper_bin`__rust_alloc (1 samples, 0.01%)</title><rect x="5.1617%" y="517" width="0.0102%" height="15" fill="rgb(244,218,35)"/><text x="5.4117%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.05%)</title><rect x="5.2433%" y="501" width="0.0510%" height="15" fill="rgb(240,68,47)"/><text x="5.4933%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.06%)</title><rect x="5.2943%" y="501" width="0.0612%" height="15" fill="rgb(210,16,53)"/><text x="5.5443%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;http::uri::path::PathAndQuery as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="5.3555%" y="501" width="0.0204%" height="15" fill="rgb(235,124,12)"/><text x="5.6055%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="5.3759%" y="501" width="0.0102%" height="15" fill="rgb(224,169,11)"/><text x="5.6259%" y="511.50"></text></g><g><title>deno_hyper_bin`__rdl_realloc (3 samples, 0.03%)</title><rect x="5.4881%" y="469" width="0.0306%" height="15" fill="rgb(250,166,2)"/><text x="5.7381%" y="479.50"></text></g><g><title>deno_hyper_bin`__rust_realloc (2 samples, 0.02%)</title><rect x="5.5187%" y="469" width="0.0204%" height="15" fill="rgb(242,216,29)"/><text x="5.7687%" y="479.50"></text></g><g><title>deno_hyper_bin`__rdl_realloc (2 samples, 0.02%)</title><rect x="5.5697%" y="453" width="0.0204%" height="15" fill="rgb(230,116,27)"/><text x="5.8197%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="5.5901%" y="453" width="0.0102%" height="15" fill="rgb(228,99,48)"/><text x="5.8401%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.02%)</title><rect x="5.6309%" y="437" width="0.0204%" height="15" fill="rgb(253,11,6)"/><text x="5.8809%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.03%)</title><rect x="5.7023%" y="421" width="0.0306%" height="15" fill="rgb(247,143,39)"/><text x="5.9523%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (3 samples, 0.03%)</title><rect x="5.7329%" y="421" width="0.0306%" height="15" fill="rgb(236,97,10)"/><text x="5.9829%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (1 samples, 0.01%)</title><rect x="5.7635%" y="421" width="0.0102%" height="15" fill="rgb(233,208,19)"/><text x="6.0135%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="5.7941%" y="405" width="0.0102%" height="15" fill="rgb(216,164,2)"/><text x="6.0441%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.08%)</title><rect x="5.8043%" y="405" width="0.0816%" height="15" fill="rgb(220,129,5)"/><text x="6.0543%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="5.8860%" y="405" width="0.0102%" height="15" fill="rgb(242,17,10)"/><text x="6.1360%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="5.9370%" y="373" width="0.0102%" height="15" fill="rgb(242,107,0)"/><text x="6.1870%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.12%)</title><rect x="5.8962%" y="405" width="0.1224%" height="15" fill="rgb(251,28,31)"/><text x="6.1462%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.12%)</title><rect x="5.8962%" y="389" width="0.1224%" height="15" fill="rgb(233,223,10)"/><text x="6.1462%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="5.9472%" y="373" width="0.0714%" height="15" fill="rgb(215,21,27)"/><text x="6.1972%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.05%)</title><rect x="6.0186%" y="405" width="0.0510%" height="15" fill="rgb(232,23,21)"/><text x="6.2686%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="6.0186%" y="389" width="0.0510%" height="15" fill="rgb(244,5,23)"/><text x="6.2686%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="6.2430%" y="389" width="0.0102%" height="15" fill="rgb(226,81,46)"/><text x="6.4930%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (49 samples, 0.50%)</title><rect x="5.7737%" y="421" width="0.4998%" height="15" fill="rgb(247,70,30)"/><text x="6.0237%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (20 samples, 0.20%)</title><rect x="6.0696%" y="405" width="0.2040%" height="15" fill="rgb(212,68,19)"/><text x="6.3196%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="6.2532%" y="389" width="0.0204%" height="15" fill="rgb(240,187,13)"/><text x="6.5032%" y="399.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="6.2736%" y="421" width="0.0102%" height="15" fill="rgb(223,113,26)"/><text x="6.5236%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (66 samples, 0.67%)</title><rect x="5.6513%" y="437" width="0.6733%" height="15" fill="rgb(206,192,2)"/><text x="5.9013%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="6.2838%" y="421" width="0.0408%" height="15" fill="rgb(241,108,4)"/><text x="6.5338%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (81 samples, 0.83%)</title><rect x="5.6003%" y="453" width="0.8263%" height="15" fill="rgb(247,173,49)"/><text x="5.8503%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.10%)</title><rect x="6.3246%" y="437" width="0.1020%" height="15" fill="rgb(224,114,35)"/><text x="6.5746%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.09%)</title><rect x="6.3348%" y="421" width="0.0918%" height="15" fill="rgb(245,159,27)"/><text x="6.5848%" y="431.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::finish_grow (88 samples, 0.90%)</title><rect x="5.5391%" y="469" width="0.8977%" height="15" fill="rgb(245,172,44)"/><text x="5.7891%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="6.4266%" y="453" width="0.0102%" height="15" fill="rgb(236,23,11)"/><text x="6.6766%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="6.4368%" y="469" width="0.0102%" height="15" fill="rgb(205,117,38)"/><text x="6.6868%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (101 samples, 1.03%)</title><rect x="5.4473%" y="485" width="1.0303%" height="15" fill="rgb(237,72,25)"/><text x="5.6973%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="6.4470%" y="469" width="0.0306%" height="15" fill="rgb(244,70,9)"/><text x="6.6970%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="6.5490%" y="453" width="0.0102%" height="15" fill="rgb(217,125,39)"/><text x="6.7990%" y="463.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.05%)</title><rect x="6.5898%" y="437" width="0.0510%" height="15" fill="rgb(235,36,10)"/><text x="6.8398%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="6.6204%" y="421" width="0.0204%" height="15" fill="rgb(251,123,47)"/><text x="6.8704%" y="431.50"></text></g><g><title>deno_hyper_bin`&lt;http::uri::path::PathAndQuery as core::fmt::Display&gt;::fmt (17 samples, 0.17%)</title><rect x="6.4776%" y="485" width="0.1734%" height="15" fill="rgb(221,13,13)"/><text x="6.7276%" y="495.50"></text></g><g><title>deno_hyper_bin`core::fmt::Formatter::write_fmt (10 samples, 0.10%)</title><rect x="6.5490%" y="469" width="0.1020%" height="15" fill="rgb(238,131,9)"/><text x="6.7990%" y="479.50"></text></g><g><title>deno_hyper_bin`core::fmt::write (9 samples, 0.09%)</title><rect x="6.5592%" y="453" width="0.0918%" height="15" fill="rgb(211,50,8)"/><text x="6.8092%" y="463.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="6.6408%" y="437" width="0.0102%" height="15" fill="rgb(245,182,24)"/><text x="6.8908%" y="447.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="6.6510%" y="485" width="0.0102%" height="15" fill="rgb(242,14,37)"/><text x="6.9010%" y="495.50"></text></g><g><title>deno_hyper_bin`core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="6.6612%" y="485" width="0.0102%" height="15" fill="rgb(246,228,12)"/><text x="6.9112%" y="495.50"></text></g><g><title>deno_hyper_bin`core::fmt::write (127 samples, 1.30%)</title><rect x="5.3861%" y="501" width="1.2955%" height="15" fill="rgb(213,55,15)"/><text x="5.6361%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="6.6714%" y="485" width="0.0102%" height="15" fill="rgb(209,9,3)"/><text x="6.9214%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="6.7428%" y="469" width="0.0102%" height="15" fill="rgb(230,59,30)"/><text x="6.9928%" y="479.50"></text></g><g><title>deno_hyper_bin`alloc::fmt::format (170 samples, 1.73%)</title><rect x="5.1719%" y="517" width="1.7342%" height="15" fill="rgb(209,121,21)"/><text x="5.4219%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.22%)</title><rect x="6.6816%" y="501" width="0.2244%" height="15" fill="rgb(220,109,13)"/><text x="6.9316%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.18%)</title><rect x="6.7224%" y="485" width="0.1836%" height="15" fill="rgb(232,18,1)"/><text x="6.9724%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.15%)</title><rect x="6.7530%" y="469" width="0.1530%" height="15" fill="rgb(215,41,42)"/><text x="7.0030%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.13%)</title><rect x="6.7734%" y="453" width="0.1326%" height="15" fill="rgb(224,123,36)"/><text x="7.0234%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="6.8346%" y="437" width="0.0714%" height="15" fill="rgb(240,125,3)"/><text x="7.0846%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="6.8958%" y="421" width="0.0102%" height="15" fill="rgb(205,98,50)"/><text x="7.1458%" y="431.50"></text></g><g><title>deno_hyper_bin`core::fmt::Formatter::pad (2 samples, 0.02%)</title><rect x="6.9060%" y="517" width="0.0204%" height="15" fill="rgb(205,185,37)"/><text x="7.1560%" y="527.50"></text></g><g><title>deno_hyper_bin`core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="6.9265%" y="517" width="0.0204%" height="15" fill="rgb(238,207,15)"/><text x="7.1765%" y="527.50"></text></g><g><title>deno_hyper_bin`__rdl_alloc (2 samples, 0.02%)</title><rect x="7.2325%" y="469" width="0.0204%" height="15" fill="rgb(213,199,42)"/><text x="7.4825%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="7.2937%" y="437" width="0.0102%" height="15" fill="rgb(235,201,11)"/><text x="7.5437%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.05%)</title><rect x="7.3855%" y="421" width="0.0510%" height="15" fill="rgb(207,46,11)"/><text x="7.6355%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="7.4671%" y="405" width="0.0102%" height="15" fill="rgb(241,35,35)"/><text x="7.7171%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="7.8037%" y="389" width="0.0102%" height="15" fill="rgb(243,32,47)"/><text x="8.0537%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (66 samples, 0.67%)</title><rect x="7.3039%" y="437" width="0.6733%" height="15" fill="rgb(247,202,23)"/><text x="7.5539%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (53 samples, 0.54%)</title><rect x="7.4365%" y="421" width="0.5407%" height="15" fill="rgb(219,102,11)"/><text x="7.6865%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.50%)</title><rect x="7.4773%" y="405" width="0.4998%" height="15" fill="rgb(243,110,44)"/><text x="7.7273%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.16%)</title><rect x="7.8139%" y="389" width="0.1632%" height="15" fill="rgb(222,74,54)"/><text x="8.0639%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.05%)</title><rect x="7.9261%" y="373" width="0.0510%" height="15" fill="rgb(216,99,12)"/><text x="8.1761%" y="383.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (81 samples, 0.83%)</title><rect x="7.1611%" y="485" width="0.8263%" height="15" fill="rgb(226,22,26)"/><text x="7.4111%" y="495.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::finish_grow (72 samples, 0.73%)</title><rect x="7.2529%" y="469" width="0.7345%" height="15" fill="rgb(217,163,10)"/><text x="7.5029%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (71 samples, 0.72%)</title><rect x="7.2631%" y="453" width="0.7243%" height="15" fill="rgb(213,25,53)"/><text x="7.5131%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="7.9771%" y="437" width="0.0102%" height="15" fill="rgb(252,105,26)"/><text x="8.2271%" y="447.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="7.9874%" y="485" width="0.0102%" height="15" fill="rgb(220,39,43)"/><text x="8.2374%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (95 samples, 0.97%)</title><rect x="7.0795%" y="501" width="0.9691%" height="15" fill="rgb(229,68,48)"/><text x="7.3295%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.05%)</title><rect x="7.9976%" y="485" width="0.0510%" height="15" fill="rgb(252,8,32)"/><text x="8.2476%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;http::header::name::HeaderName as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="8.0486%" y="501" width="0.0204%" height="15" fill="rgb(223,20,43)"/><text x="8.2986%" y="511.50"></text></g><g><title>deno_hyper_bin`http::header::name::HeaderName::as_str (2 samples, 0.02%)</title><rect x="8.0486%" y="485" width="0.0204%" height="15" fill="rgb(229,81,49)"/><text x="8.2986%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;http::method::Method as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="8.0690%" y="501" width="0.0102%" height="15" fill="rgb(236,28,36)"/><text x="8.3190%" y="511.50"></text></g><g><title>deno_hyper_bin`core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="8.0792%" y="501" width="0.0102%" height="15" fill="rgb(249,185,26)"/><text x="8.3292%" y="511.50"></text></g><g><title>deno_hyper_bin`http::header::name::HeaderName::as_str (1 samples, 0.01%)</title><rect x="8.0894%" y="501" width="0.0102%" height="15" fill="rgb(249,174,33)"/><text x="8.3394%" y="511.50"></text></g><g><title>deno_hyper_bin`core::fmt::write (116 samples, 1.18%)</title><rect x="6.9469%" y="517" width="1.1833%" height="15" fill="rgb(233,201,37)"/><text x="7.1969%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="8.0996%" y="501" width="0.0306%" height="15" fill="rgb(221,78,26)"/><text x="8.3496%" y="511.50"></text></g><g><title>deno_hyper_bin`__rdl_dealloc (1 samples, 0.01%)</title><rect x="8.2220%" y="501" width="0.0102%" height="15" fill="rgb(250,127,30)"/><text x="8.4720%" y="511.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="8.2322%" y="501" width="0.0102%" height="15" fill="rgb(230,49,44)"/><text x="8.4822%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.06%)</title><rect x="8.3648%" y="453" width="0.0612%" height="15" fill="rgb(229,67,23)"/><text x="8.6148%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.14%)</title><rect x="8.4260%" y="453" width="0.1428%" height="15" fill="rgb(249,83,47)"/><text x="8.6760%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.08%)</title><rect x="8.4872%" y="437" width="0.0816%" height="15" fill="rgb(215,43,3)"/><text x="8.7372%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="8.5178%" y="421" width="0.0510%" height="15" fill="rgb(238,154,13)"/><text x="8.7678%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="8.7014%" y="437" width="0.0102%" height="15" fill="rgb(219,56,2)"/><text x="8.9514%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="8.7116%" y="437" width="0.0102%" height="15" fill="rgb(233,0,4)"/><text x="8.9616%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.14%)</title><rect x="8.9564%" y="421" width="0.1428%" height="15" fill="rgb(235,30,7)"/><text x="9.2064%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (61 samples, 0.62%)</title><rect x="8.5688%" y="453" width="0.6223%" height="15" fill="rgb(250,79,13)"/><text x="8.8188%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (46 samples, 0.47%)</title><rect x="8.7218%" y="437" width="0.4692%" height="15" fill="rgb(211,146,34)"/><text x="8.9718%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.09%)</title><rect x="9.0993%" y="421" width="0.0918%" height="15" fill="rgb(228,22,38)"/><text x="9.3493%" y="431.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.89%)</title><rect x="8.3240%" y="469" width="0.8875%" height="15" fill="rgb(235,168,5)"/><text x="8.5740%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="9.1911%" y="453" width="0.0204%" height="15" fill="rgb(221,155,16)"/><text x="9.4411%" y="463.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="9.2115%" y="469" width="0.0102%" height="15" fill="rgb(215,215,53)"/><text x="9.4615%" y="479.50"></text></g><g><title>deno_hyper_bin`__rdl_dealloc (2 samples, 0.02%)</title><rect x="9.2217%" y="469" width="0.0204%" height="15" fill="rgb(223,4,10)"/><text x="9.4717%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.08%)</title><rect x="9.2421%" y="469" width="0.0816%" height="15" fill="rgb(234,103,6)"/><text x="9.4921%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="9.2931%" y="453" width="0.0306%" height="15" fill="rgb(227,97,0)"/><text x="9.5431%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.03%)</title><rect x="9.2931%" y="437" width="0.0306%" height="15" fill="rgb(234,150,53)"/><text x="9.5431%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.07%)</title><rect x="9.4665%" y="437" width="0.0714%" height="15" fill="rgb(228,201,54)"/><text x="9.7165%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.27%)</title><rect x="9.3237%" y="469" width="0.2652%" height="15" fill="rgb(222,22,37)"/><text x="9.5737%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.18%)</title><rect x="9.4053%" y="453" width="0.1836%" height="15" fill="rgb(237,53,32)"/><text x="9.6553%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.05%)</title><rect x="9.5379%" y="437" width="0.0510%" height="15" fill="rgb(233,25,53)"/><text x="9.7879%" y="447.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 1.35%)</title><rect x="8.2526%" y="485" width="1.3465%" height="15" fill="rgb(210,40,34)"/><text x="8.5026%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.01%)</title><rect x="9.5889%" y="469" width="0.0102%" height="15" fill="rgb(241,220,44)"/><text x="9.8389%" y="479.50"></text></g><g><title>deno_hyper_bin`__rdl_dealloc (1 samples, 0.01%)</title><rect x="9.5991%" y="485" width="0.0102%" height="15" fill="rgb(235,28,35)"/><text x="9.8491%" y="495.50"></text></g><g><title>deno_hyper_bin`__rust_dealloc (1 samples, 0.01%)</title><rect x="9.6093%" y="485" width="0.0102%" height="15" fill="rgb(210,56,17)"/><text x="9.8593%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.01%)</title><rect x="9.6603%" y="469" width="0.0102%" height="15" fill="rgb(224,130,29)"/><text x="9.9103%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_size (17 samples, 0.17%)</title><rect x="9.6807%" y="453" width="0.1734%" height="15" fill="rgb(235,212,8)"/><text x="9.9307%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.22%)</title><rect x="9.6705%" y="469" width="0.2244%" height="15" fill="rgb(223,33,50)"/><text x="9.9205%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.04%)</title><rect x="9.8541%" y="453" width="0.0408%" height="15" fill="rgb(219,149,13)"/><text x="10.1041%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.04%)</title><rect x="9.8541%" y="437" width="0.0408%" height="15" fill="rgb(250,156,29)"/><text x="10.1041%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (4 samples, 0.04%)</title><rect x="10.1092%" y="453" width="0.0408%" height="15" fill="rgb(216,193,19)"/><text x="10.3592%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (27 samples, 0.28%)</title><rect x="9.8949%" y="469" width="0.2754%" height="15" fill="rgb(216,135,14)"/><text x="10.1449%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.02%)</title><rect x="10.1500%" y="453" width="0.0204%" height="15" fill="rgb(241,47,5)"/><text x="10.4000%" y="463.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::shared_v_drop (55 samples, 0.56%)</title><rect x="9.6195%" y="485" width="0.5611%" height="15" fill="rgb(233,42,35)"/><text x="9.8695%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="10.1704%" y="469" width="0.0102%" height="15" fill="rgb(231,13,6)"/><text x="10.4204%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.01%)</title><rect x="10.1806%" y="485" width="0.0102%" height="15" fill="rgb(207,181,40)"/><text x="10.4306%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.19%)</title><rect x="10.1908%" y="485" width="0.1938%" height="15" fill="rgb(254,173,49)"/><text x="10.4408%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.11%)</title><rect x="10.2724%" y="469" width="0.1122%" height="15" fill="rgb(221,1,38)"/><text x="10.5224%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.10%)</title><rect x="10.2826%" y="453" width="0.1020%" height="15" fill="rgb(206,124,46)"/><text x="10.5326%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="10.3846%" y="485" width="0.0204%" height="15" fill="rgb(249,21,11)"/><text x="10.6346%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.02%)</title><rect x="10.5784%" y="469" width="0.0204%" height="15" fill="rgb(222,201,40)"/><text x="10.8284%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="10.5988%" y="469" width="0.0102%" height="15" fill="rgb(235,61,29)"/><text x="10.8488%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.15%)</title><rect x="10.7416%" y="453" width="0.1530%" height="15" fill="rgb(219,207,3)"/><text x="10.9916%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (49 samples, 0.50%)</title><rect x="10.4050%" y="485" width="0.4998%" height="15" fill="rgb(222,56,46)"/><text x="10.6550%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.30%)</title><rect x="10.6090%" y="469" width="0.2958%" height="15" fill="rgb(239,76,54)"/><text x="10.8590%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="10.8946%" y="453" width="0.0102%" height="15" fill="rgb(231,124,27)"/><text x="11.1446%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.05%)</title><rect x="10.9048%" y="485" width="0.0510%" height="15" fill="rgb(249,195,6)"/><text x="11.1548%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="10.9558%" y="485" width="0.0102%" height="15" fill="rgb(237,174,47)"/><text x="11.2058%" y="495.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (268 samples, 2.73%)</title><rect x="8.2424%" y="501" width="2.7339%" height="15" fill="rgb(206,201,31)"/><text x="8.4924%" y="511.50">de..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="10.9660%" y="485" width="0.0102%" height="15" fill="rgb(231,57,52)"/><text x="11.2160%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="10.9762%" y="501" width="0.0102%" height="15" fill="rgb(248,177,22)"/><text x="11.2262%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.05%)</title><rect x="10.9864%" y="501" width="0.0510%" height="15" fill="rgb(215,211,37)"/><text x="11.2364%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.19%)</title><rect x="11.2415%" y="485" width="0.1938%" height="15" fill="rgb(241,128,51)"/><text x="11.4915%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.18%)</title><rect x="11.2517%" y="469" width="0.1836%" height="15" fill="rgb(227,165,31)"/><text x="11.5017%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.41%)</title><rect x="11.0374%" y="501" width="0.4080%" height="15" fill="rgb(228,167,24)"/><text x="11.2874%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="11.4353%" y="485" width="0.0102%" height="15" fill="rgb(228,143,12)"/><text x="11.6853%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.02%)</title><rect x="12.0269%" y="485" width="0.0204%" height="15" fill="rgb(249,149,8)"/><text x="12.2769%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="12.0473%" y="485" width="0.0102%" height="15" fill="rgb(243,35,44)"/><text x="12.2973%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="12.0575%" y="485" width="0.0204%" height="15" fill="rgb(246,89,9)"/><text x="12.3075%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (37 samples, 0.38%)</title><rect x="12.7920%" y="469" width="0.3774%" height="15" fill="rgb(233,213,13)"/><text x="13.0420%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (118 samples, 1.20%)</title><rect x="12.0779%" y="485" width="1.2037%" height="15" fill="rgb(233,141,41)"/><text x="12.3279%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.11%)</title><rect x="13.1694%" y="469" width="0.1122%" height="15" fill="rgb(239,167,4)"/><text x="13.4194%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (181 samples, 1.85%)</title><rect x="11.4455%" y="501" width="1.8464%" height="15" fill="rgb(209,217,16)"/><text x="11.6955%" y="511.50">l..</text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.01%)</title><rect x="13.2816%" y="485" width="0.0102%" height="15" fill="rgb(219,88,35)"/><text x="13.5316%" y="495.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (508 samples, 5.18%)</title><rect x="8.1302%" y="517" width="5.1821%" height="15" fill="rgb(220,193,23)"/><text x="8.3802%" y="527.50">deno_h..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="13.2918%" y="501" width="0.0204%" height="15" fill="rgb(230,90,52)"/><text x="13.5418%" y="511.50"></text></g><g><title>deno_hyper_bin`http::header::map::HeaderMap&lt;T&gt;::get (13 samples, 0.13%)</title><rect x="13.3633%" y="501" width="0.1326%" height="15" fill="rgb(252,106,19)"/><text x="13.6133%" y="511.50"></text></g><g><title>deno_hyper_bin`http::header::map::hash_elem_using (4 samples, 0.04%)</title><rect x="13.4551%" y="485" width="0.0408%" height="15" fill="rgb(206,74,20)"/><text x="13.7051%" y="495.50"></text></g><g><title>deno_hyper_bin`http::header::map::hash_elem_using (1 samples, 0.01%)</title><rect x="13.4959%" y="501" width="0.0102%" height="15" fill="rgb(230,138,44)"/><text x="13.7459%" y="511.50"></text></g><g><title>deno_hyper_bin`http::header::value::HeaderValue::to_str (8 samples, 0.08%)</title><rect x="13.5061%" y="501" width="0.0816%" height="15" fill="rgb(235,182,43)"/><text x="13.7561%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="13.7407%" y="437" width="0.0102%" height="15" fill="rgb(242,16,51)"/><text x="13.9907%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.23%)</title><rect x="13.6489%" y="469" width="0.2346%" height="15" fill="rgb(248,9,4)"/><text x="13.8989%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.22%)</title><rect x="13.6591%" y="453" width="0.2244%" height="15" fill="rgb(210,31,22)"/><text x="13.9091%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.13%)</title><rect x="13.7509%" y="437" width="0.1326%" height="15" fill="rgb(239,54,39)"/><text x="14.0009%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="13.8529%" y="421" width="0.0306%" height="15" fill="rgb(230,99,41)"/><text x="14.1029%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.29%)</title><rect x="13.6081%" y="485" width="0.2856%" height="15" fill="rgb(253,106,12)"/><text x="13.8581%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="13.8835%" y="469" width="0.0102%" height="15" fill="rgb(213,46,41)"/><text x="14.1335%" y="479.50"></text></g><g><title>deno_hyper_bin`deno_hyper_bin::extract_host (58 samples, 0.59%)</title><rect x="13.3123%" y="517" width="0.5917%" height="15" fill="rgb(215,133,35)"/><text x="13.5623%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc (31 samples, 0.32%)</title><rect x="13.5877%" y="501" width="0.3162%" height="15" fill="rgb(213,28,5)"/><text x="13.8377%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="13.8937%" y="485" width="0.0102%" height="15" fill="rgb(215,77,49)"/><text x="14.1437%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="14.0671%" y="501" width="0.0408%" height="15" fill="rgb(248,100,22)"/><text x="14.3171%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1 samples, 0.01%)</title><rect x="14.1079%" y="501" width="0.0102%" height="15" fill="rgb(208,67,9)"/><text x="14.3579%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (3 samples, 0.03%)</title><rect x="14.1181%" y="501" width="0.0306%" height="15" fill="rgb(219,133,21)"/><text x="14.3681%" y="511.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="14.1487%" y="501" width="0.0102%" height="15" fill="rgb(246,46,29)"/><text x="14.3987%" y="511.50"></text></g><g><title>deno_hyper_bin`__rust_dealloc (1 samples, 0.01%)</title><rect x="14.1589%" y="501" width="0.0102%" height="15" fill="rgb(246,185,52)"/><text x="14.4089%" y="511.50"></text></g><g><title>deno_hyper_bin`__rust_probestack (3 samples, 0.03%)</title><rect x="14.1691%" y="501" width="0.0306%" height="15" fill="rgb(252,136,11)"/><text x="14.4191%" y="511.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (9 samples, 0.09%)</title><rect x="14.1997%" y="501" width="0.0918%" height="15" fill="rgb(219,138,53)"/><text x="14.4497%" y="511.50"></text></g><g><title>deno_hyper_bin`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (3 samples, 0.03%)</title><rect x="14.2915%" y="501" width="0.0306%" height="15" fill="rgb(211,51,23)"/><text x="14.5415%" y="511.50"></text></g><g><title>deno_hyper_bin`hyper::body::body::Body::new (1 samples, 0.01%)</title><rect x="14.3221%" y="501" width="0.0102%" height="15" fill="rgb(247,221,28)"/><text x="14.5721%" y="511.50"></text></g><g><title>deno_hyper_bin`hyper::body::body::Body::take_full_data (4 samples, 0.04%)</title><rect x="14.3323%" y="501" width="0.0408%" height="15" fill="rgb(251,222,45)"/><text x="14.5823%" y="511.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::Wants::contains (3 samples, 0.03%)</title><rect x="14.3732%" y="501" width="0.0306%" height="15" fill="rgb(217,162,53)"/><text x="14.6232%" y="511.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (3 samples, 0.03%)</title><rect x="14.4038%" y="501" width="0.0306%" height="15" fill="rgb(229,93,14)"/><text x="14.6538%" y="511.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (2 samples, 0.02%)</title><rect x="14.4344%" y="501" width="0.0204%" height="15" fill="rgb(209,67,49)"/><text x="14.6844%" y="511.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1 samples, 0.01%)</title><rect x="14.4548%" y="501" width="0.0102%" height="15" fill="rgb(213,87,29)"/><text x="14.7048%" y="511.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (1 samples, 0.01%)</title><rect x="14.4650%" y="501" width="0.0102%" height="15" fill="rgb(205,151,52)"/><text x="14.7150%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (6 samples, 0.06%)</title><rect x="15.7095%" y="485" width="0.0612%" height="15" fill="rgb(253,215,39)"/><text x="15.9595%" y="495.50"></text></g><g><title>deno_hyper_bin`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.02%)</title><rect x="15.9135%" y="469" width="0.0204%" height="15" fill="rgb(221,220,41)"/><text x="16.1635%" y="479.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::clone_arc_raw (1 samples, 0.01%)</title><rect x="15.9339%" y="469" width="0.0102%" height="15" fill="rgb(218,133,21)"/><text x="16.1839%" y="479.50"></text></g><g><title>deno_hyper_bin`alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.08%)</title><rect x="15.9441%" y="453" width="0.0816%" height="15" fill="rgb(221,193,43)"/><text x="16.1941%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="16.0257%" y="453" width="0.0204%" height="15" fill="rgb(240,128,52)"/><text x="16.2757%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.16%)</title><rect x="16.0461%" y="453" width="0.1632%" height="15" fill="rgb(253,114,12)"/><text x="16.2961%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.10%)</title><rect x="16.1073%" y="437" width="0.1020%" height="15" fill="rgb(215,223,47)"/><text x="16.3573%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.09%)</title><rect x="16.1175%" y="421" width="0.0918%" height="15" fill="rgb(248,225,23)"/><text x="16.3675%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.05%)</title><rect x="16.2705%" y="437" width="0.0510%" height="15" fill="rgb(250,108,0)"/><text x="16.5205%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="16.3215%" y="437" width="0.0102%" height="15" fill="rgb(228,208,7)"/><text x="16.5715%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="16.4031%" y="421" width="0.0306%" height="15" fill="rgb(244,45,10)"/><text x="16.6531%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.26%)</title><rect x="16.2093%" y="453" width="0.2550%" height="15" fill="rgb(207,125,25)"/><text x="16.4593%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.13%)</title><rect x="16.3317%" y="437" width="0.1326%" height="15" fill="rgb(210,195,18)"/><text x="16.5817%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.03%)</title><rect x="16.4337%" y="421" width="0.0306%" height="15" fill="rgb(249,80,12)"/><text x="16.6837%" y="431.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::drop_arc_raw (53 samples, 0.54%)</title><rect x="15.9441%" y="469" width="0.5407%" height="15" fill="rgb(221,65,9)"/><text x="16.1941%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="16.4643%" y="453" width="0.0204%" height="15" fill="rgb(235,49,36)"/><text x="16.7143%" y="463.50"></text></g><g><title>deno_hyper_bin`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (73 samples, 0.74%)</title><rect x="15.7707%" y="485" width="0.7447%" height="15" fill="rgb(225,32,20)"/><text x="16.0207%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="16.4847%" y="469" width="0.0306%" height="15" fill="rgb(215,141,46)"/><text x="16.7347%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (1 samples, 0.01%)</title><rect x="16.5154%" y="485" width="0.0102%" height="15" fill="rgb(250,160,47)"/><text x="16.7654%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="17.0152%" y="389" width="0.0408%" height="15" fill="rgb(216,222,40)"/><text x="17.2652%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc (16 samples, 0.16%)</title><rect x="16.9132%" y="453" width="0.1632%" height="15" fill="rgb(234,217,39)"/><text x="17.1632%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (16 samples, 0.16%)</title><rect x="16.9132%" y="437" width="0.1632%" height="15" fill="rgb(207,178,40)"/><text x="17.1632%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.14%)</title><rect x="16.9336%" y="421" width="0.1428%" height="15" fill="rgb(221,136,13)"/><text x="17.1836%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.14%)</title><rect x="16.9336%" y="405" width="0.1428%" height="15" fill="rgb(249,199,10)"/><text x="17.1836%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="17.0560%" y="389" width="0.0204%" height="15" fill="rgb(249,222,13)"/><text x="17.3060%" y="399.50"></text></g><g><title>deno_hyper_bin`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (34 samples, 0.35%)</title><rect x="16.7602%" y="469" width="0.3468%" height="15" fill="rgb(244,185,38)"/><text x="17.0102%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="17.0764%" y="453" width="0.0306%" height="15" fill="rgb(236,202,9)"/><text x="17.3264%" y="463.50"></text></g><g><title>deno_hyper_bin`bytes::bytes::static_drop (2 samples, 0.02%)</title><rect x="17.1070%" y="469" width="0.0204%" height="15" fill="rgb(250,229,37)"/><text x="17.3570%" y="479.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (7 samples, 0.07%)</title><rect x="17.1274%" y="469" width="0.0714%" height="15" fill="rgb(206,174,23)"/><text x="17.3774%" y="479.50"></text></g><g><title>deno_hyper_bin`http::request::Parts::new (3 samples, 0.03%)</title><rect x="17.1988%" y="469" width="0.0306%" height="15" fill="rgb(211,33,43)"/><text x="17.4488%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.15%)</title><rect x="17.2294%" y="469" width="0.1530%" height="15" fill="rgb(245,58,50)"/><text x="17.4794%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (10 samples, 0.10%)</title><rect x="17.3824%" y="469" width="0.1020%" height="15" fill="rgb(244,68,36)"/><text x="17.6324%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (102 samples, 1.04%)</title><rect x="16.5256%" y="485" width="1.0405%" height="15" fill="rgb(232,229,15)"/><text x="16.7756%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (8 samples, 0.08%)</title><rect x="17.4844%" y="469" width="0.0816%" height="15" fill="rgb(254,30,23)"/><text x="17.7344%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (3 samples, 0.03%)</title><rect x="17.5661%" y="485" width="0.0306%" height="15" fill="rgb(235,160,14)"/><text x="17.8161%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="17.6273%" y="469" width="0.0204%" height="15" fill="rgb(212,155,44)"/><text x="17.8773%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::common::date::CACHED::__getit (3 samples, 0.03%)</title><rect x="17.6477%" y="469" width="0.0306%" height="15" fill="rgb(226,2,50)"/><text x="17.8977%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (28 samples, 0.29%)</title><rect x="17.7293%" y="421" width="0.2856%" height="15" fill="rgb(234,177,6)"/><text x="17.9793%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (17 samples, 0.17%)</title><rect x="17.8415%" y="405" width="0.1734%" height="15" fill="rgb(217,24,9)"/><text x="18.0915%" y="415.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (32 samples, 0.33%)</title><rect x="17.6987%" y="437" width="0.3264%" height="15" fill="rgb(220,13,46)"/><text x="17.9487%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.01%)</title><rect x="18.0149%" y="421" width="0.0102%" height="15" fill="rgb(239,221,27)"/><text x="18.2649%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (11 samples, 0.11%)</title><rect x="18.0251%" y="437" width="0.1122%" height="15" fill="rgb(222,198,25)"/><text x="18.2751%" y="447.50"></text></g><g><title>deno_hyper_bin`std::time::SystemTime::now (45 samples, 0.46%)</title><rect x="17.6885%" y="453" width="0.4590%" height="15" fill="rgb(211,99,13)"/><text x="17.9385%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.01%)</title><rect x="18.1373%" y="437" width="0.0102%" height="15" fill="rgb(232,111,31)"/><text x="18.3873%" y="447.50"></text></g><g><title>deno_hyper_bin`hyper::common::date::CachedDate::check (53 samples, 0.54%)</title><rect x="17.6783%" y="469" width="0.5407%" height="15" fill="rgb(245,82,37)"/><text x="17.9283%" y="479.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (7 samples, 0.07%)</title><rect x="18.1475%" y="453" width="0.0714%" height="15" fill="rgb(227,149,46)"/><text x="18.3975%" y="463.50"></text></g><g><title>deno_hyper_bin`std::time::SystemTime::now (3 samples, 0.03%)</title><rect x="18.2189%" y="469" width="0.0306%" height="15" fill="rgb(218,36,50)"/><text x="18.4689%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (66 samples, 0.67%)</title><rect x="17.5967%" y="485" width="0.6733%" height="15" fill="rgb(226,80,48)"/><text x="17.8467%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="18.2495%" y="469" width="0.0204%" height="15" fill="rgb(238,224,15)"/><text x="18.4995%" y="479.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (10 samples, 0.10%)</title><rect x="18.2699%" y="485" width="0.1020%" height="15" fill="rgb(241,136,10)"/><text x="18.5199%" y="495.50"></text></g><g><title>deno_hyper_bin`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (4 samples, 0.04%)</title><rect x="18.3719%" y="485" width="0.0408%" height="15" fill="rgb(208,32,45)"/><text x="18.6219%" y="495.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::clone_arc_raw (1 samples, 0.01%)</title><rect x="18.4127%" y="485" width="0.0102%" height="15" fill="rgb(207,135,9)"/><text x="18.6627%" y="495.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::drop_arc_raw (1 samples, 0.01%)</title><rect x="18.4229%" y="485" width="0.0102%" height="15" fill="rgb(206,86,44)"/><text x="18.6729%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::body::body::Body::new (1 samples, 0.01%)</title><rect x="18.4331%" y="485" width="0.0102%" height="15" fill="rgb(245,177,15)"/><text x="18.6831%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::body::body::Body::take_full_data (2 samples, 0.02%)</title><rect x="18.4433%" y="485" width="0.0204%" height="15" fill="rgb(206,64,50)"/><text x="18.6933%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::common::date::CACHED::__getit (4 samples, 0.04%)</title><rect x="18.4637%" y="485" width="0.0408%" height="15" fill="rgb(234,36,40)"/><text x="18.7137%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::common::date::CachedDate::check (3 samples, 0.03%)</title><rect x="18.5045%" y="485" width="0.0306%" height="15" fill="rgb(213,64,8)"/><text x="18.7545%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (4 samples, 0.04%)</title><rect x="18.5351%" y="485" width="0.0408%" height="15" fill="rgb(210,75,36)"/><text x="18.7851%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.04%)</title><rect x="18.6780%" y="469" width="0.0408%" height="15" fill="rgb(229,88,21)"/><text x="18.9280%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (1 samples, 0.01%)</title><rect x="18.7188%" y="469" width="0.0102%" height="15" fill="rgb(252,204,47)"/><text x="18.9688%" y="479.50"></text></g><g><title>deno_hyper_bin`bytes::bytes::static_drop (3 samples, 0.03%)</title><rect x="18.7290%" y="469" width="0.0306%" height="15" fill="rgb(208,77,27)"/><text x="18.9790%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (5 samples, 0.05%)</title><rect x="18.7596%" y="469" width="0.0510%" height="15" fill="rgb(221,76,26)"/><text x="19.0096%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::KA::status (1 samples, 0.01%)</title><rect x="18.8106%" y="469" width="0.0102%" height="15" fill="rgb(225,139,18)"/><text x="19.0606%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::State::is_idle (3 samples, 0.03%)</title><rect x="18.8208%" y="469" width="0.0306%" height="15" fill="rgb(230,137,11)"/><text x="19.0708%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="19.4634%" y="453" width="0.0714%" height="15" fill="rgb(212,28,1)"/><text x="19.7134%" y="463.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="19.5858%" y="437" width="0.0102%" height="15" fill="rgb(248,164,17)"/><text x="19.8358%" y="447.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (6 samples, 0.06%)</title><rect x="19.6981%" y="405" width="0.0612%" height="15" fill="rgb(222,171,42)"/><text x="19.9481%" y="415.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$writev (2 samples, 0.02%)</title><rect x="19.7593%" y="405" width="0.0204%" height="15" fill="rgb(243,84,45)"/><text x="20.0093%" y="415.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1,674 samples, 17.08%)</title><rect x="19.6266%" y="421" width="17.0764%" height="15" fill="rgb(252,49,23)"/><text x="19.8766%" y="431.50">deno_hyper_bin`&lt;&amp;mio::net:..</text></g><g><title>libsystem_kernel.dylib`writev (1,659 samples, 16.92%)</title><rect x="19.7797%" y="405" width="16.9234%" height="15" fill="rgb(215,19,7)"/><text x="20.0297%" y="415.50">libsystem_kernel.dylib`wri..</text></g><g><title>deno_hyper_bin`&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (5 samples, 0.05%)</title><rect x="36.7031%" y="421" width="0.0510%" height="15" fill="rgb(238,81,41)"/><text x="36.9531%" y="431.50"></text></g><g><title>deno_hyper_bin`tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="36.8357%" y="405" width="0.0102%" height="15" fill="rgb(210,199,37)"/><text x="37.0857%" y="415.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (3 samples, 0.03%)</title><rect x="36.8459%" y="405" width="0.0306%" height="15" fill="rgb(244,192,49)"/><text x="37.0959%" y="415.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,702 samples, 17.36%)</title><rect x="19.5348%" y="453" width="17.3620%" height="15" fill="rgb(226,211,11)"/><text x="19.7848%" y="463.50">deno_hyper_bin`&lt;tokio::net:..</text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_write_io (1,696 samples, 17.30%)</title><rect x="19.5960%" y="437" width="17.3008%" height="15" fill="rgb(236,162,54)"/><text x="19.8460%" y="447.50">deno_hyper_bin`tokio::io::d..</text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_ready (14 samples, 0.14%)</title><rect x="36.7541%" y="421" width="0.1428%" height="15" fill="rgb(220,229,9)"/><text x="37.0041%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="36.8765%" y="405" width="0.0204%" height="15" fill="rgb(250,87,22)"/><text x="37.1265%" y="415.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1,798 samples, 18.34%)</title><rect x="18.5759%" y="485" width="18.3413%" height="15" fill="rgb(239,43,17)"/><text x="18.8259%" y="495.50">deno_hyper_bin`hyper::proto::..</text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1,771 samples, 18.07%)</title><rect x="18.8514%" y="469" width="18.0659%" height="15" fill="rgb(231,177,25)"/><text x="19.1014%" y="479.50">deno_hyper_bin`hyper::proto:..</text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_write_io (2 samples, 0.02%)</title><rect x="36.8969%" y="453" width="0.0204%" height="15" fill="rgb(219,179,1)"/><text x="37.1469%" y="463.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::State::busy (1 samples, 0.01%)</title><rect x="37.0703%" y="469" width="0.0102%" height="15" fill="rgb(238,219,53)"/><text x="37.3203%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (2 samples, 0.02%)</title><rect x="37.2335%" y="453" width="0.0204%" height="15" fill="rgb(232,167,36)"/><text x="37.4835%" y="463.50"></text></g><g><title>deno_hyper_bin`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="37.2539%" y="453" width="0.0102%" height="15" fill="rgb(244,19,51)"/><text x="37.5039%" y="463.50"></text></g><g><title>deno_hyper_bin`bytes::buf::uninit_slice::UninitSlice::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="37.2641%" y="453" width="0.0102%" height="15" fill="rgb(224,6,22)"/><text x="37.5141%" y="463.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.04%)</title><rect x="37.5905%" y="389" width="0.0408%" height="15" fill="rgb(224,145,5)"/><text x="37.8405%" y="399.50"></text></g><g><title>libsystem_c.dylib`recv (3 samples, 0.03%)</title><rect x="37.6313%" y="389" width="0.0306%" height="15" fill="rgb(234,130,49)"/><text x="37.8813%" y="399.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (645 samples, 6.58%)</title><rect x="37.5395%" y="405" width="6.5796%" height="15" fill="rgb(254,6,2)"/><text x="37.7895%" y="415.50">deno_hype..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (633 samples, 6.46%)</title><rect x="37.6619%" y="389" width="6.4572%" height="15" fill="rgb(208,96,46)"/><text x="37.9119%" y="399.50">libsyste..</text></g><g><title>deno_hyper_bin`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.04%)</title><rect x="44.1191%" y="405" width="0.0408%" height="15" fill="rgb(239,3,39)"/><text x="44.3691%" y="415.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="44.2416%" y="389" width="0.0102%" height="15" fill="rgb(233,210,1)"/><text x="44.4916%" y="399.50"></text></g><g><title>deno_hyper_bin`tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="44.2518%" y="389" width="0.0102%" height="15" fill="rgb(244,137,37)"/><text x="44.5018%" y="399.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (8 samples, 0.08%)</title><rect x="44.2620%" y="389" width="0.0816%" height="15" fill="rgb(240,136,2)"/><text x="44.5120%" y="399.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (683 samples, 6.97%)</title><rect x="37.3865%" y="437" width="6.9673%" height="15" fill="rgb(239,18,37)"/><text x="37.6365%" y="447.50">deno_hype..</text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_read_io (678 samples, 6.92%)</title><rect x="37.4375%" y="421" width="6.9163%" height="15" fill="rgb(218,185,22)"/><text x="37.6875%" y="431.50">deno_hype..</text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_ready (19 samples, 0.19%)</title><rect x="44.1600%" y="405" width="0.1938%" height="15" fill="rgb(225,218,4)"/><text x="44.4100%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="44.3436%" y="389" width="0.0102%" height="15" fill="rgb(230,182,32)"/><text x="44.5936%" y="399.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (696 samples, 7.10%)</title><rect x="37.2743%" y="453" width="7.0999%" height="15" fill="rgb(242,56,43)"/><text x="37.5243%" y="463.50">deno_hyper..</text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::ReadStrategy::record (2 samples, 0.02%)</title><rect x="44.3538%" y="437" width="0.0204%" height="15" fill="rgb(233,99,24)"/><text x="44.6038%" y="447.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::ReadStrategy::record (1 samples, 0.01%)</title><rect x="44.3742%" y="453" width="0.0102%" height="15" fill="rgb(234,209,42)"/><text x="44.6242%" y="463.50"></text></g><g><title>deno_hyper_bin`&lt;T as alloc::vec::SpecFromElem&gt;::from_elem (1 samples, 0.01%)</title><rect x="44.9556%" y="421" width="0.0102%" height="15" fill="rgb(227,7,12)"/><text x="45.2056%" y="431.50"></text></g><g><title>deno_hyper_bin`__rdl_alloc (1 samples, 0.01%)</title><rect x="44.9658%" y="421" width="0.0102%" height="15" fill="rgb(245,203,43)"/><text x="45.2158%" y="431.50"></text></g><g><title>deno_hyper_bin`__rust_probestack (3 samples, 0.03%)</title><rect x="44.9760%" y="421" width="0.0306%" height="15" fill="rgb(238,205,33)"/><text x="45.2260%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.04%)</title><rect x="45.0372%" y="389" width="0.0408%" height="15" fill="rgb(231,56,7)"/><text x="45.2872%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.06%)</title><rect x="45.0780%" y="373" width="0.0612%" height="15" fill="rgb(244,186,29)"/><text x="45.3280%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.02%)</title><rect x="45.2413%" y="341" width="0.0204%" height="15" fill="rgb(234,111,31)"/><text x="45.4913%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (37 samples, 0.38%)</title><rect x="45.0168%" y="405" width="0.3774%" height="15" fill="rgb(241,149,10)"/><text x="45.2668%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (31 samples, 0.32%)</title><rect x="45.0780%" y="389" width="0.3162%" height="15" fill="rgb(249,206,44)"/><text x="45.3280%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.26%)</title><rect x="45.1392%" y="373" width="0.2550%" height="15" fill="rgb(251,153,30)"/><text x="45.3892%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.23%)</title><rect x="45.1596%" y="357" width="0.2346%" height="15" fill="rgb(239,152,38)"/><text x="45.4096%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.13%)</title><rect x="45.2617%" y="341" width="0.1326%" height="15" fill="rgb(249,139,47)"/><text x="45.5117%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.05%)</title><rect x="45.3433%" y="325" width="0.0510%" height="15" fill="rgb(244,64,35)"/><text x="45.5933%" y="335.50"></text></g><g><title>deno_hyper_bin`bytes::bytes::Bytes::copy_from_slice (39 samples, 0.40%)</title><rect x="45.0066%" y="421" width="0.3978%" height="15" fill="rgb(216,46,15)"/><text x="45.2566%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.01%)</title><rect x="45.3943%" y="405" width="0.0102%" height="15" fill="rgb(250,74,19)"/><text x="45.6443%" y="415.50"></text></g><g><title>deno_hyper_bin`bytes::bytes::Bytes::slice (2 samples, 0.02%)</title><rect x="45.4045%" y="421" width="0.0204%" height="15" fill="rgb(249,42,33)"/><text x="45.6545%" y="431.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::shared_v_clone (2 samples, 0.02%)</title><rect x="45.4045%" y="405" width="0.0204%" height="15" fill="rgb(242,149,17)"/><text x="45.6545%" y="415.50"></text></g><g><title>deno_hyper_bin`bytes::bytes::promotable_even_drop (5 samples, 0.05%)</title><rect x="45.4249%" y="421" width="0.0510%" height="15" fill="rgb(244,29,21)"/><text x="45.6749%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="45.7003%" y="341" width="0.0102%" height="15" fill="rgb(220,130,37)"/><text x="45.9503%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="45.7105%" y="341" width="0.0204%" height="15" fill="rgb(211,67,2)"/><text x="45.9605%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.24%)</title><rect x="45.5473%" y="389" width="0.2448%" height="15" fill="rgb(235,68,52)"/><text x="45.7973%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.24%)</title><rect x="45.5473%" y="373" width="0.2448%" height="15" fill="rgb(246,142,3)"/><text x="45.7973%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.23%)</title><rect x="45.5575%" y="357" width="0.2346%" height="15" fill="rgb(241,25,7)"/><text x="45.8075%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.06%)</title><rect x="45.7309%" y="341" width="0.0612%" height="15" fill="rgb(242,119,39)"/><text x="45.9809%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="45.7717%" y="325" width="0.0204%" height="15" fill="rgb(241,98,45)"/><text x="46.0217%" y="335.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::BytesMut::split_to (33 samples, 0.34%)</title><rect x="45.4759%" y="421" width="0.3366%" height="15" fill="rgb(254,28,30)"/><text x="45.7259%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.27%)</title><rect x="45.5473%" y="405" width="0.2652%" height="15" fill="rgb(241,142,54)"/><text x="45.7973%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="45.7921%" y="389" width="0.0204%" height="15" fill="rgb(222,85,15)"/><text x="46.0421%" y="399.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::shared_v_clone (1 samples, 0.01%)</title><rect x="45.8125%" y="421" width="0.0102%" height="15" fill="rgb(210,85,47)"/><text x="46.0625%" y="431.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::shared_v_drop (3 samples, 0.03%)</title><rect x="45.8227%" y="421" width="0.0306%" height="15" fill="rgb(224,206,25)"/><text x="46.0727%" y="431.50"></text></g><g><title>deno_hyper_bin`http::header::map::Danger::is_yellow (2 samples, 0.02%)</title><rect x="45.9247%" y="405" width="0.0204%" height="15" fill="rgb(243,201,19)"/><text x="46.1747%" y="415.50"></text></g><g><title>deno_hyper_bin`http::header::map::HeaderMap&lt;T&gt;::reserve_one (4 samples, 0.04%)</title><rect x="45.9451%" y="405" width="0.0408%" height="15" fill="rgb(236,59,4)"/><text x="46.1951%" y="415.50"></text></g><g><title>deno_hyper_bin`http::header::map::hash_elem_using (3 samples, 0.03%)</title><rect x="45.9859%" y="405" width="0.0306%" height="15" fill="rgb(254,179,45)"/><text x="46.2359%" y="415.50"></text></g><g><title>deno_hyper_bin`http::header::map::HeaderMap&lt;T&gt;::append (21 samples, 0.21%)</title><rect x="45.8533%" y="421" width="0.2142%" height="15" fill="rgb(226,14,10)"/><text x="46.1033%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.05%)</title><rect x="46.0165%" y="405" width="0.0510%" height="15" fill="rgb(244,27,41)"/><text x="46.2665%" y="415.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="46.1389%" y="389" width="0.0102%" height="15" fill="rgb(235,35,32)"/><text x="46.3889%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="46.1695%" y="357" width="0.0102%" height="15" fill="rgb(218,68,31)"/><text x="46.4195%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (16 samples, 0.16%)</title><rect x="46.1491%" y="373" width="0.1632%" height="15" fill="rgb(207,120,37)"/><text x="46.3991%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.13%)</title><rect x="46.1797%" y="357" width="0.1326%" height="15" fill="rgb(227,98,0)"/><text x="46.4297%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.11%)</title><rect x="46.2001%" y="341" width="0.1122%" height="15" fill="rgb(207,7,3)"/><text x="46.4501%" y="351.50"></text></g><g><title>deno_hyper_bin`&lt;T as alloc::vec::SpecFromElem&gt;::from_elem (21 samples, 0.21%)</title><rect x="46.1083%" y="405" width="0.2142%" height="15" fill="rgb(206,98,19)"/><text x="46.3583%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (17 samples, 0.17%)</title><rect x="46.1491%" y="389" width="0.1734%" height="15" fill="rgb(217,5,26)"/><text x="46.3991%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="46.3124%" y="373" width="0.0102%" height="15" fill="rgb(235,190,38)"/><text x="46.5624%" y="383.50"></text></g><g><title>deno_hyper_bin`__rdl_alloc (1 samples, 0.01%)</title><rect x="46.3226%" y="405" width="0.0102%" height="15" fill="rgb(247,86,24)"/><text x="46.5726%" y="415.50"></text></g><g><title>deno_hyper_bin`__rust_alloc (1 samples, 0.01%)</title><rect x="46.3328%" y="405" width="0.0102%" height="15" fill="rgb(205,101,16)"/><text x="46.5828%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="46.3634%" y="373" width="0.0204%" height="15" fill="rgb(246,168,33)"/><text x="46.6134%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="46.6082%" y="341" width="0.0204%" height="15" fill="rgb(231,114,1)"/><text x="46.8582%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="46.6286%" y="341" width="0.0204%" height="15" fill="rgb(207,184,53)"/><text x="46.8786%" y="351.50"></text></g><g><title>deno_hyper_bin`http::header::map::HeaderMap&lt;T&gt;::reserve (68 samples, 0.69%)</title><rect x="46.0675%" y="421" width="0.6937%" height="15" fill="rgb(224,95,51)"/><text x="46.3175%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (41 samples, 0.42%)</title><rect x="46.3430%" y="405" width="0.4182%" height="15" fill="rgb(212,188,45)"/><text x="46.5930%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (39 samples, 0.40%)</title><rect x="46.3634%" y="389" width="0.3978%" height="15" fill="rgb(223,154,38)"/><text x="46.6134%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.38%)</title><rect x="46.3838%" y="373" width="0.3774%" height="15" fill="rgb(251,22,52)"/><text x="46.6338%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.37%)</title><rect x="46.3940%" y="357" width="0.3672%" height="15" fill="rgb(229,209,22)"/><text x="46.6440%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.11%)</title><rect x="46.6490%" y="341" width="0.1122%" height="15" fill="rgb(234,138,34)"/><text x="46.8990%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="46.7306%" y="325" width="0.0306%" height="15" fill="rgb(212,95,11)"/><text x="46.9806%" y="335.50"></text></g><g><title>deno_hyper_bin`http::header::map::hash_elem_using (1 samples, 0.01%)</title><rect x="46.7612%" y="421" width="0.0102%" height="15" fill="rgb(240,179,47)"/><text x="47.0112%" y="431.50"></text></g><g><title>deno_hyper_bin`http::header::name::HeaderName::from_bytes (19 samples, 0.19%)</title><rect x="46.7714%" y="421" width="0.1938%" height="15" fill="rgb(240,163,11)"/><text x="47.0214%" y="431.50"></text></g><g><title>deno_hyper_bin`http::header::name::parse_hdr (12 samples, 0.12%)</title><rect x="46.8428%" y="405" width="0.1224%" height="15" fill="rgb(236,37,12)"/><text x="47.0928%" y="415.50"></text></g><g><title>deno_hyper_bin`http::header::name::parse_hdr (3 samples, 0.03%)</title><rect x="46.9652%" y="421" width="0.0306%" height="15" fill="rgb(232,164,16)"/><text x="47.2152%" y="431.50"></text></g><g><title>deno_hyper_bin`http::method::Method::from_bytes (5 samples, 0.05%)</title><rect x="46.9958%" y="421" width="0.0510%" height="15" fill="rgb(244,205,15)"/><text x="47.2458%" y="431.50"></text></g><g><title>deno_hyper_bin`bytes::bytes::promotable_even_drop (1 samples, 0.01%)</title><rect x="47.1182%" y="405" width="0.0102%" height="15" fill="rgb(223,117,47)"/><text x="47.3682%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="47.1284%" y="405" width="0.0102%" height="15" fill="rgb(244,107,35)"/><text x="47.3784%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.01%)</title><rect x="47.1386%" y="405" width="0.0102%" height="15" fill="rgb(205,140,8)"/><text x="47.3886%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.07%)</title><rect x="47.1692%" y="389" width="0.0714%" height="15" fill="rgb(228,84,46)"/><text x="47.4192%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="47.1896%" y="373" width="0.0510%" height="15" fill="rgb(254,188,9)"/><text x="47.4396%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.10%)</title><rect x="47.1488%" y="405" width="0.1020%" height="15" fill="rgb(206,112,54)"/><text x="47.3988%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="47.2406%" y="389" width="0.0102%" height="15" fill="rgb(216,84,49)"/><text x="47.4906%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="47.2916%" y="373" width="0.0204%" height="15" fill="rgb(214,194,35)"/><text x="47.5416%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.07%)</title><rect x="47.2508%" y="405" width="0.0714%" height="15" fill="rgb(249,28,3)"/><text x="47.5008%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.03%)</title><rect x="47.2916%" y="389" width="0.0306%" height="15" fill="rgb(222,56,52)"/><text x="47.5416%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="47.3120%" y="373" width="0.0102%" height="15" fill="rgb(245,217,50)"/><text x="47.5620%" y="383.50"></text></g><g><title>deno_hyper_bin`http::uri::Uri::from_shared (28 samples, 0.29%)</title><rect x="47.0468%" y="421" width="0.2856%" height="15" fill="rgb(213,201,24)"/><text x="47.2968%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="47.3222%" y="405" width="0.0102%" height="15" fill="rgb(248,116,28)"/><text x="47.5722%" y="415.50"></text></g><g><title>deno_hyper_bin`httparse::simd::runtime::match_header_value_vectored (5 samples, 0.05%)</title><rect x="47.6181%" y="389" width="0.0510%" height="15" fill="rgb(219,72,43)"/><text x="47.8681%" y="399.50"></text></g><g><title>deno_hyper_bin`httparse::simd::sse42::match_header_value_char_16_sse (2 samples, 0.02%)</title><rect x="47.6487%" y="373" width="0.0204%" height="15" fill="rgb(209,138,14)"/><text x="47.8987%" y="383.50"></text></g><g><title>deno_hyper_bin`httparse::parse_headers_iter (23 samples, 0.23%)</title><rect x="47.4549%" y="405" width="0.2346%" height="15" fill="rgb(222,18,33)"/><text x="47.7049%" y="415.50"></text></g><g><title>deno_hyper_bin`httparse::simd::sse42::match_header_value_char_16_sse (2 samples, 0.02%)</title><rect x="47.6691%" y="389" width="0.0204%" height="15" fill="rgb(213,199,7)"/><text x="47.9191%" y="399.50"></text></g><g><title>deno_hyper_bin`httparse::parse_version (1 samples, 0.01%)</title><rect x="47.6895%" y="405" width="0.0102%" height="15" fill="rgb(250,110,10)"/><text x="47.9395%" y="415.50"></text></g><g><title>deno_hyper_bin`httparse::simd::avx2::match_url_char_32_avx (1 samples, 0.01%)</title><rect x="47.6997%" y="405" width="0.0102%" height="15" fill="rgb(248,123,6)"/><text x="47.9497%" y="415.50"></text></g><g><title>deno_hyper_bin`httparse::Request::parse (42 samples, 0.43%)</title><rect x="47.3324%" y="421" width="0.4284%" height="15" fill="rgb(206,91,31)"/><text x="47.5824%" y="431.50"></text></g><g><title>deno_hyper_bin`httparse::simd::runtime::match_uri_vectored (5 samples, 0.05%)</title><rect x="47.7099%" y="405" width="0.0510%" height="15" fill="rgb(211,154,13)"/><text x="47.9599%" y="415.50"></text></g><g><title>deno_hyper_bin`httparse::simd::avx2::match_url_char_32_avx (4 samples, 0.04%)</title><rect x="47.7201%" y="389" width="0.0408%" height="15" fill="rgb(225,148,7)"/><text x="47.9701%" y="399.50"></text></g><g><title>deno_hyper_bin`httparse::parse_headers_iter (1 samples, 0.01%)</title><rect x="47.7609%" y="421" width="0.0102%" height="15" fill="rgb(220,160,43)"/><text x="48.0109%" y="431.50"></text></g><g><title>deno_hyper_bin`httparse::simd::runtime::match_uri_vectored (2 samples, 0.02%)</title><rect x="47.7711%" y="421" width="0.0204%" height="15" fill="rgb(213,52,39)"/><text x="48.0211%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.05%)</title><rect x="47.7915%" y="421" width="0.0510%" height="15" fill="rgb(243,137,7)"/><text x="48.0415%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.05%)</title><rect x="47.8425%" y="421" width="0.0510%" height="15" fill="rgb(230,79,13)"/><text x="48.0925%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.08%)</title><rect x="47.8935%" y="421" width="0.0816%" height="15" fill="rgb(247,105,23)"/><text x="48.1435%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.02%)</title><rect x="47.9751%" y="421" width="0.0204%" height="15" fill="rgb(223,179,41)"/><text x="48.2251%" y="431.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (358 samples, 3.65%)</title><rect x="44.4660%" y="437" width="3.6519%" height="15" fill="rgb(218,9,34)"/><text x="44.7160%" y="447.50">deno..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.12%)</title><rect x="47.9955%" y="421" width="0.1224%" height="15" fill="rgb(222,106,8)"/><text x="48.2455%" y="431.50"></text></g><g><title>deno_hyper_bin`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="48.1179%" y="437" width="0.0102%" height="15" fill="rgb(211,220,0)"/><text x="48.3679%" y="447.50"></text></g><g><title>deno_hyper_bin`bytes::bytes::Bytes::slice (1 samples, 0.01%)</title><rect x="48.1281%" y="437" width="0.0102%" height="15" fill="rgb(229,52,16)"/><text x="48.3781%" y="447.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::BytesMut::split_to (2 samples, 0.02%)</title><rect x="48.1383%" y="437" width="0.0204%" height="15" fill="rgb(212,155,18)"/><text x="48.3883%" y="447.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="48.1587%" y="437" width="0.0102%" height="15" fill="rgb(242,21,14)"/><text x="48.4087%" y="447.50"></text></g><g><title>deno_hyper_bin`http::header::map::HeaderMap&lt;T&gt;::append (2 samples, 0.02%)</title><rect x="48.1689%" y="437" width="0.0204%" height="15" fill="rgb(222,19,48)"/><text x="48.4189%" y="447.50"></text></g><g><title>deno_hyper_bin`http::header::map::HeaderMap&lt;T&gt;::reserve (2 samples, 0.02%)</title><rect x="48.1893%" y="437" width="0.0204%" height="15" fill="rgb(232,45,27)"/><text x="48.4393%" y="447.50"></text></g><g><title>deno_hyper_bin`http::header::name::HeaderName::from_bytes (1 samples, 0.01%)</title><rect x="48.2097%" y="437" width="0.0102%" height="15" fill="rgb(249,103,42)"/><text x="48.4597%" y="447.50"></text></g><g><title>deno_hyper_bin`http::method::Method::from_bytes (2 samples, 0.02%)</title><rect x="48.2199%" y="437" width="0.0204%" height="15" fill="rgb(246,81,33)"/><text x="48.4699%" y="447.50"></text></g><g><title>deno_hyper_bin`http::uri::Uri::from_shared (1 samples, 0.01%)</title><rect x="48.2403%" y="437" width="0.0102%" height="15" fill="rgb(252,33,42)"/><text x="48.4903%" y="447.50"></text></g><g><title>deno_hyper_bin`httparse::Request::parse (4 samples, 0.04%)</title><rect x="48.2505%" y="437" width="0.0408%" height="15" fill="rgb(209,212,41)"/><text x="48.5005%" y="447.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::role::parse_headers (385 samples, 3.93%)</title><rect x="44.3844%" y="453" width="3.9274%" height="15" fill="rgb(207,154,6)"/><text x="44.6344%" y="463.50">deno..</text></g><g><title>deno_hyper_bin`tracing::span::Span::enter (2 samples, 0.02%)</title><rect x="48.2913%" y="437" width="0.0204%" height="15" fill="rgb(223,64,47)"/><text x="48.5413%" y="447.50"></text></g><g><title>deno_hyper_bin`tracing::span::Span::enter (2 samples, 0.02%)</title><rect x="48.3117%" y="453" width="0.0204%" height="15" fill="rgb(211,161,38)"/><text x="48.5617%" y="463.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1,119 samples, 11.41%)</title><rect x="37.0805%" y="469" width="11.4149%" height="15" fill="rgb(219,138,40)"/><text x="37.3305%" y="479.50">deno_hyper_bin`hy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.16%)</title><rect x="48.3321%" y="453" width="0.1632%" height="15" fill="rgb(241,228,46)"/><text x="48.5821%" y="463.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::role::parse_headers (1 samples, 0.01%)</title><rect x="48.4954%" y="469" width="0.0102%" height="15" fill="rgb(223,209,38)"/><text x="48.7454%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1,156 samples, 11.79%)</title><rect x="36.9173%" y="485" width="11.7923%" height="15" fill="rgb(236,164,45)"/><text x="37.1673%" y="495.50">deno_hyper_bin`hy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.20%)</title><rect x="48.5056%" y="469" width="0.2040%" height="15" fill="rgb(231,15,5)"/><text x="48.7556%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.03%)</title><rect x="49.0258%" y="453" width="0.0306%" height="15" fill="rgb(252,35,15)"/><text x="49.2758%" y="463.50"></text></g><g><title>deno_hyper_bin`bytes::buf::uninit_slice::UninitSlice::from_raw_parts_mut (2 samples, 0.02%)</title><rect x="49.0564%" y="453" width="0.0204%" height="15" fill="rgb(248,181,18)"/><text x="49.3064%" y="463.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.01%)</title><rect x="49.0768%" y="453" width="0.0102%" height="15" fill="rgb(233,39,42)"/><text x="49.3268%" y="463.50"></text></g><g><title>deno_hyper_bin`std::io::error::Error::kind (3 samples, 0.03%)</title><rect x="49.2706%" y="421" width="0.0306%" height="15" fill="rgb(238,110,33)"/><text x="49.5206%" y="431.50"></text></g><g><title>deno_hyper_bin`std::sys::unix::decode_error_kind (1 samples, 0.01%)</title><rect x="49.3012%" y="421" width="0.0102%" height="15" fill="rgb(233,195,10)"/><text x="49.5512%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`_pthread_exit_if_canceled (5 samples, 0.05%)</title><rect x="49.4849%" y="373" width="0.0510%" height="15" fill="rgb(254,105,3)"/><text x="49.7349%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`cerror (2 samples, 0.02%)</title><rect x="49.5359%" y="373" width="0.0204%" height="15" fill="rgb(221,225,9)"/><text x="49.7859%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (1 samples, 0.01%)</title><rect x="49.5563%" y="373" width="0.0102%" height="15" fill="rgb(224,227,45)"/><text x="49.8063%" y="383.50"></text></g><g><title>deno_hyper_bin`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 0.19%)</title><rect x="49.4644%" y="389" width="0.1938%" height="15" fill="rgb(229,198,43)"/><text x="49.7144%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (9 samples, 0.09%)</title><rect x="49.5665%" y="373" width="0.0918%" height="15" fill="rgb(206,209,35)"/><text x="49.8165%" y="383.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$__error (6 samples, 0.06%)</title><rect x="49.6583%" y="389" width="0.0612%" height="15" fill="rgb(245,195,53)"/><text x="49.9083%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__error (3 samples, 0.03%)</title><rect x="49.7195%" y="389" width="0.0306%" height="15" fill="rgb(240,92,26)"/><text x="49.9695%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (316 samples, 3.22%)</title><rect x="49.7501%" y="389" width="3.2235%" height="15" fill="rgb(207,40,23)"/><text x="50.0001%" y="399.50">lib..</text></g><g><title>deno_hyper_bin`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (351 samples, 3.58%)</title><rect x="49.4236%" y="405" width="3.5805%" height="15" fill="rgb(223,111,35)"/><text x="49.6736%" y="415.50">deno..</text></g><g><title>libsystem_kernel.dylib`cerror (3 samples, 0.03%)</title><rect x="52.9736%" y="389" width="0.0306%" height="15" fill="rgb(229,147,28)"/><text x="53.2236%" y="399.50"></text></g><g><title>deno_hyper_bin`std::sys::unix::decode_error_kind (5 samples, 0.05%)</title><rect x="53.0042%" y="405" width="0.0510%" height="15" fill="rgb(211,29,28)"/><text x="53.2542%" y="415.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::clone_arc_raw (2 samples, 0.02%)</title><rect x="53.1878%" y="389" width="0.0204%" height="15" fill="rgb(228,72,33)"/><text x="53.4378%" y="399.50"></text></g><g><title>deno_hyper_bin`tokio::coop::CURRENT::__getit (7 samples, 0.07%)</title><rect x="53.2082%" y="389" width="0.0714%" height="15" fill="rgb(205,214,31)"/><text x="53.4582%" y="399.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::clone_arc_raw (10 samples, 0.10%)</title><rect x="53.4428%" y="373" width="0.1020%" height="15" fill="rgb(224,111,15)"/><text x="53.6928%" y="383.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (30 samples, 0.31%)</title><rect x="53.2796%" y="389" width="0.3060%" height="15" fill="rgb(253,21,26)"/><text x="53.5296%" y="399.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::drop_arc_raw (4 samples, 0.04%)</title><rect x="53.5448%" y="373" width="0.0408%" height="15" fill="rgb(245,139,43)"/><text x="53.7948%" y="383.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (434 samples, 4.43%)</title><rect x="49.2400%" y="437" width="4.4272%" height="15" fill="rgb(252,170,7)"/><text x="49.4900%" y="447.50">deno_..</text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_read_io (427 samples, 4.36%)</title><rect x="49.3114%" y="421" width="4.3558%" height="15" fill="rgb(231,118,14)"/><text x="49.5614%" y="431.50">deno_..</text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_ready (60 samples, 0.61%)</title><rect x="53.0552%" y="405" width="0.6121%" height="15" fill="rgb(238,83,0)"/><text x="53.3052%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.08%)</title><rect x="53.5856%" y="389" width="0.0816%" height="15" fill="rgb(221,39,39)"/><text x="53.8356%" y="399.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="53.6672%" y="437" width="0.0102%" height="15" fill="rgb(222,119,46)"/><text x="53.9172%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="53.7897%" y="389" width="0.0204%" height="15" fill="rgb(222,165,49)"/><text x="54.0397%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="54.0651%" y="357" width="0.0102%" height="15" fill="rgb(219,113,52)"/><text x="54.3151%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.03%)</title><rect x="54.1773%" y="341" width="0.0306%" height="15" fill="rgb(214,7,15)"/><text x="54.4273%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="54.2079%" y="341" width="0.0102%" height="15" fill="rgb(235,32,4)"/><text x="54.4579%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (45 samples, 0.46%)</title><rect x="53.7693%" y="405" width="0.4590%" height="15" fill="rgb(238,90,54)"/><text x="54.0193%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.42%)</title><rect x="53.8101%" y="389" width="0.4182%" height="15" fill="rgb(213,208,19)"/><text x="54.0601%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (39 samples, 0.40%)</title><rect x="53.8305%" y="373" width="0.3978%" height="15" fill="rgb(233,156,4)"/><text x="54.0805%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (15 samples, 0.15%)</title><rect x="54.0753%" y="357" width="0.1530%" height="15" fill="rgb(207,194,5)"/><text x="54.3253%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="54.2181%" y="341" width="0.0102%" height="15" fill="rgb(206,111,30)"/><text x="54.4681%" y="351.50"></text></g><g><title>deno_hyper_bin`bytes::bytes_mut::BytesMut::reserve_inner (55 samples, 0.56%)</title><rect x="53.6774%" y="437" width="0.5611%" height="15" fill="rgb(243,70,54)"/><text x="53.9274%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (47 samples, 0.48%)</title><rect x="53.7591%" y="421" width="0.4794%" height="15" fill="rgb(242,28,8)"/><text x="54.0091%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="54.2283%" y="405" width="0.0102%" height="15" fill="rgb(219,106,18)"/><text x="54.4783%" y="415.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::ReadStrategy::next (1 samples, 0.01%)</title><rect x="54.2385%" y="437" width="0.0102%" height="15" fill="rgb(244,222,10)"/><text x="54.4885%" y="447.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.01%)</title><rect x="54.2487%" y="437" width="0.0102%" height="15" fill="rgb(236,179,52)"/><text x="54.4987%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="54.2589%" y="437" width="0.0204%" height="15" fill="rgb(213,23,39)"/><text x="54.5089%" y="447.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (528 samples, 5.39%)</title><rect x="48.9034%" y="469" width="5.3861%" height="15" fill="rgb(238,48,10)"/><text x="49.1534%" y="479.50">deno_hy..</text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (510 samples, 5.20%)</title><rect x="49.0870%" y="453" width="5.2025%" height="15" fill="rgb(251,196,23)"/><text x="49.3370%" y="463.50">deno_h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="54.2793%" y="437" width="0.0102%" height="15" fill="rgb(250,152,24)"/><text x="54.5293%" y="447.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (551 samples, 5.62%)</title><rect x="48.7096%" y="485" width="5.6207%" height="15" fill="rgb(209,150,17)"/><text x="48.9596%" y="495.50">deno_hy..</text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (4 samples, 0.04%)</title><rect x="54.2895%" y="469" width="0.0408%" height="15" fill="rgb(234,202,34)"/><text x="54.5395%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_shutdown (1 samples, 0.01%)</title><rect x="54.3303%" y="485" width="0.0102%" height="15" fill="rgb(253,148,53)"/><text x="54.5803%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (1 samples, 0.01%)</title><rect x="54.3303%" y="469" width="0.0102%" height="15" fill="rgb(218,129,16)"/><text x="54.5803%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`shutdown (1 samples, 0.01%)</title><rect x="54.3303%" y="453" width="0.0102%" height="15" fill="rgb(216,85,19)"/><text x="54.5803%" y="463.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (1 samples, 0.01%)</title><rect x="54.4323%" y="469" width="0.0102%" height="15" fill="rgb(235,228,7)"/><text x="54.6823%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (2 samples, 0.02%)</title><rect x="54.5139%" y="453" width="0.0204%" height="15" fill="rgb(245,175,0)"/><text x="54.7639%" y="463.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="55.0444%" y="421" width="0.0408%" height="15" fill="rgb(208,168,36)"/><text x="55.2944%" y="431.50"></text></g><g><title>deno_hyper_bin`hyper::common::date::extend (2 samples, 0.02%)</title><rect x="55.0852%" y="421" width="0.0204%" height="15" fill="rgb(246,171,24)"/><text x="55.3352%" y="431.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="55.0954%" y="405" width="0.0102%" height="15" fill="rgb(215,142,24)"/><text x="55.3454%" y="415.50"></text></g><g><title>deno_hyper_bin`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (53 samples, 0.54%)</title><rect x="54.5751%" y="437" width="0.5407%" height="15" fill="rgb(250,187,7)"/><text x="54.8251%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="55.1056%" y="421" width="0.0102%" height="15" fill="rgb(228,66,33)"/><text x="55.3556%" y="431.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (71 samples, 0.72%)</title><rect x="54.4425%" y="469" width="0.7243%" height="15" fill="rgb(234,215,21)"/><text x="54.6925%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::role::encode_headers (62 samples, 0.63%)</title><rect x="54.5343%" y="453" width="0.6325%" height="15" fill="rgb(222,191,20)"/><text x="54.7843%" y="463.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.05%)</title><rect x="55.1158%" y="437" width="0.0510%" height="15" fill="rgb(245,79,54)"/><text x="55.3658%" y="447.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::encode::Encoder::danger_full_buf (2 samples, 0.02%)</title><rect x="55.1668%" y="469" width="0.0204%" height="15" fill="rgb(240,10,37)"/><text x="55.4168%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="55.1770%" y="453" width="0.0102%" height="15" fill="rgb(214,192,32)"/><text x="55.4270%" y="463.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (2 samples, 0.02%)</title><rect x="55.1872%" y="469" width="0.0204%" height="15" fill="rgb(209,36,54)"/><text x="55.4372%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (87 samples, 0.89%)</title><rect x="54.3405%" y="485" width="0.8875%" height="15" fill="rgb(220,10,11)"/><text x="54.5905%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::role::encode_headers (2 samples, 0.02%)</title><rect x="55.2076%" y="469" width="0.0204%" height="15" fill="rgb(221,106,17)"/><text x="55.4576%" y="479.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::conn::State::is_read_closed (4 samples, 0.04%)</title><rect x="55.2280%" y="485" width="0.0408%" height="15" fill="rgb(251,142,44)"/><text x="55.4780%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::encode::Encoder::danger_full_buf (2 samples, 0.02%)</title><rect x="55.2688%" y="485" width="0.0204%" height="15" fill="rgb(238,13,15)"/><text x="55.5188%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::encode::Encoder::is_last (2 samples, 0.02%)</title><rect x="55.2892%" y="485" width="0.0204%" height="15" fill="rgb(208,107,27)"/><text x="55.5392%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (2 samples, 0.02%)</title><rect x="55.3096%" y="485" width="0.0204%" height="15" fill="rgb(205,136,37)"/><text x="55.5596%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (4 samples, 0.04%)</title><rect x="55.3300%" y="485" width="0.0408%" height="15" fill="rgb(250,205,27)"/><text x="55.5800%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="55.3708%" y="485" width="0.0102%" height="15" fill="rgb(210,80,43)"/><text x="55.6208%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.03%)</title><rect x="55.3810%" y="485" width="0.0306%" height="15" fill="rgb(247,160,36)"/><text x="55.6310%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.09%)</title><rect x="55.4116%" y="485" width="0.0918%" height="15" fill="rgb(234,13,49)"/><text x="55.6616%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.06%)</title><rect x="55.4422%" y="469" width="0.0612%" height="15" fill="rgb(234,122,0)"/><text x="55.6922%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="55.4524%" y="453" width="0.0510%" height="15" fill="rgb(207,146,38)"/><text x="55.7024%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="55.5340%" y="469" width="0.0102%" height="15" fill="rgb(207,177,25)"/><text x="55.7840%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.28%)</title><rect x="55.5034%" y="485" width="0.2754%" height="15" fill="rgb(211,178,42)"/><text x="55.7534%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.23%)</title><rect x="55.5442%" y="469" width="0.2346%" height="15" fill="rgb(230,69,54)"/><text x="55.7942%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.09%)</title><rect x="55.6870%" y="453" width="0.0918%" height="15" fill="rgb(214,135,41)"/><text x="55.9370%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.01%)</title><rect x="55.7788%" y="485" width="0.0102%" height="15" fill="rgb(237,67,25)"/><text x="56.0288%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.41%)</title><rect x="55.7890%" y="485" width="0.4080%" height="15" fill="rgb(222,189,50)"/><text x="56.0390%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.05%)</title><rect x="56.1971%" y="485" width="0.0510%" height="15" fill="rgb(245,148,34)"/><text x="56.4471%" y="495.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (4,101 samples, 41.83%)</title><rect x="14.4752%" y="501" width="41.8341%" height="15" fill="rgb(222,29,6)"/><text x="14.7252%" y="511.50">deno_hyper_bin`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::pol..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (6 samples, 0.06%)</title><rect x="56.2481%" y="485" width="0.0612%" height="15" fill="rgb(221,189,43)"/><text x="56.4981%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="56.3093%" y="501" width="0.0102%" height="15" fill="rgb(207,36,27)"/><text x="56.5593%" y="511.50"></text></g><g><title>deno_hyper_bin`futures_util::future::future::FutureExt::poll_unpin (4,166 samples, 42.50%)</title><rect x="13.9039%" y="517" width="42.4972%" height="15" fill="rgb(217,90,24)"/><text x="14.1539%" y="527.50">deno_hyper_bin`futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.08%)</title><rect x="56.3195%" y="501" width="0.0816%" height="15" fill="rgb(224,66,35)"/><text x="56.5695%" y="511.50"></text></g><g><title>deno_hyper_bin`http::header::map::HeaderMap&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="56.4011%" y="517" width="0.0204%" height="15" fill="rgb(221,13,50)"/><text x="56.6511%" y="527.50"></text></g><g><title>deno_hyper_bin`http::header::value::HeaderValue::to_str (9 samples, 0.09%)</title><rect x="56.4215%" y="517" width="0.0918%" height="15" fill="rgb(236,68,49)"/><text x="56.6715%" y="527.50"></text></g><g><title>deno_hyper_bin`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.03%)</title><rect x="56.5133%" y="517" width="0.0306%" height="15" fill="rgb(229,146,28)"/><text x="56.7633%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.12%)</title><rect x="57.0132%" y="501" width="0.1224%" height="15" fill="rgb(225,31,38)"/><text x="57.2632%" y="511.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (9 samples, 0.09%)</title><rect x="57.1356%" y="501" width="0.0918%" height="15" fill="rgb(250,208,3)"/><text x="57.3856%" y="511.50"></text></g><g><title>deno_hyper_bin`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (3 samples, 0.03%)</title><rect x="57.2274%" y="501" width="0.0306%" height="15" fill="rgb(246,54,23)"/><text x="57.4774%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="57.5640%" y="437" width="0.0102%" height="15" fill="rgb(243,76,11)"/><text x="57.8140%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="57.7476%" y="389" width="0.0102%" height="15" fill="rgb(245,21,50)"/><text x="57.9976%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="57.7578%" y="389" width="0.0204%" height="15" fill="rgb(228,9,43)"/><text x="58.0078%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.35%)</title><rect x="57.5742%" y="437" width="0.3468%" height="15" fill="rgb(208,100,47)"/><text x="57.8242%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.35%)</title><rect x="57.5742%" y="421" width="0.3468%" height="15" fill="rgb(232,26,8)"/><text x="57.8242%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.33%)</title><rect x="57.5946%" y="405" width="0.3264%" height="15" fill="rgb(216,166,38)"/><text x="57.8446%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.14%)</title><rect x="57.7782%" y="389" width="0.1428%" height="15" fill="rgb(251,202,51)"/><text x="58.0282%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="57.9108%" y="373" width="0.0102%" height="15" fill="rgb(254,216,34)"/><text x="58.1608%" y="383.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (43 samples, 0.44%)</title><rect x="57.4926%" y="485" width="0.4386%" height="15" fill="rgb(251,32,27)"/><text x="57.7426%" y="495.50"></text></g><g><title>deno_hyper_bin`alloc::raw_vec::finish_grow (38 samples, 0.39%)</title><rect x="57.5436%" y="469" width="0.3876%" height="15" fill="rgb(208,127,28)"/><text x="57.7936%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (36 samples, 0.37%)</title><rect x="57.5640%" y="453" width="0.3672%" height="15" fill="rgb(224,137,22)"/><text x="57.8140%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="57.9210%" y="437" width="0.0102%" height="15" fill="rgb(254,70,32)"/><text x="58.1710%" y="447.50"></text></g><g><title>deno_hyper_bin`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="58.1047%" y="469" width="0.0102%" height="15" fill="rgb(229,75,37)"/><text x="58.3547%" y="479.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="58.1557%" y="453" width="0.0102%" height="15" fill="rgb(252,64,23)"/><text x="58.4057%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="58.2271%" y="421" width="0.0102%" height="15" fill="rgb(232,162,48)"/><text x="58.4771%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="58.2475%" y="405" width="0.0102%" height="15" fill="rgb(246,160,12)"/><text x="58.4975%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="58.3087%" y="373" width="0.0102%" height="15" fill="rgb(247,166,0)"/><text x="58.5587%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="58.3189%" y="373" width="0.0102%" height="15" fill="rgb(249,219,21)"/><text x="58.5689%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="58.3291%" y="373" width="0.0102%" height="15" fill="rgb(205,209,3)"/><text x="58.5791%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.19%)</title><rect x="58.2271%" y="437" width="0.1938%" height="15" fill="rgb(243,44,1)"/><text x="58.4771%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.18%)</title><rect x="58.2373%" y="421" width="0.1836%" height="15" fill="rgb(206,159,16)"/><text x="58.4873%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.16%)</title><rect x="58.2577%" y="405" width="0.1632%" height="15" fill="rgb(244,77,30)"/><text x="58.5077%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.14%)</title><rect x="58.2781%" y="389" width="0.1428%" height="15" fill="rgb(218,69,12)"/><text x="58.5281%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.08%)</title><rect x="58.3393%" y="373" width="0.0816%" height="15" fill="rgb(212,87,7)"/><text x="58.5893%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="58.3903%" y="357" width="0.0306%" height="15" fill="rgb(245,114,25)"/><text x="58.6403%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="58.4209%" y="437" width="0.0204%" height="15" fill="rgb(210,61,42)"/><text x="58.6709%" y="447.50"></text></g><g><title>deno_hyper_bin`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (51 samples, 0.52%)</title><rect x="57.9312%" y="485" width="0.5202%" height="15" fill="rgb(211,52,33)"/><text x="58.1812%" y="495.50"></text></g><g><title>deno_hyper_bin`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (33 samples, 0.34%)</title><rect x="58.1149%" y="469" width="0.3366%" height="15" fill="rgb(234,58,33)"/><text x="58.3649%" y="479.50"></text></g><g><title>deno_hyper_bin`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (28 samples, 0.29%)</title><rect x="58.1659%" y="453" width="0.2856%" height="15" fill="rgb(220,115,36)"/><text x="58.4159%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="58.4413%" y="437" width="0.0102%" height="15" fill="rgb(243,153,54)"/><text x="58.6913%" y="447.50"></text></g><g><title>deno_hyper_bin`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="58.4515%" y="485" width="0.0306%" height="15" fill="rgb(251,47,18)"/><text x="58.7015%" y="495.50"></text></g><g><title>deno_hyper_bin`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (125 samples, 1.28%)</title><rect x="57.2580%" y="501" width="1.2751%" height="15" fill="rgb(242,102,42)"/><text x="57.5080%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.05%)</title><rect x="58.4821%" y="485" width="0.0510%" height="15" fill="rgb(234,31,38)"/><text x="58.7321%" y="495.50"></text></g><g><title>deno_hyper_bin`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (196 samples, 2.00%)</title><rect x="56.5439%" y="517" width="1.9994%" height="15" fill="rgb(221,117,51)"/><text x="56.7939%" y="527.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="58.5331%" y="501" width="0.0102%" height="15" fill="rgb(212,20,18)"/><text x="58.7831%" y="511.50"></text></g><g><title>deno_hyper_bin`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (6 samples, 0.06%)</title><rect x="58.5433%" y="517" width="0.0612%" height="15" fill="rgb(245,133,36)"/><text x="58.7933%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.01%)</title><rect x="58.6555%" y="501" width="0.0102%" height="15" fill="rgb(212,6,19)"/><text x="58.9055%" y="511.50"></text></g><g><title>deno_hyper_bin`&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeTuple&gt;::end (6 samples, 0.06%)</title><rect x="58.6657%" y="501" width="0.0612%" height="15" fill="rgb(218,1,36)"/><text x="58.9157%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.03%)</title><rect x="58.8289%" y="421" width="0.0306%" height="15" fill="rgb(246,84,54)"/><text x="59.0789%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="58.8595%" y="421" width="0.0204%" height="15" fill="rgb(242,110,6)"/><text x="59.1095%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (16 samples, 0.16%)</title><rect x="58.7677%" y="469" width="0.1632%" height="15" fill="rgb(214,47,5)"/><text x="59.0177%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.15%)</title><rect x="58.7779%" y="453" width="0.1530%" height="15" fill="rgb(218,159,25)"/><text x="59.0279%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.14%)</title><rect x="58.7881%" y="437" width="0.1428%" height="15" fill="rgb(215,211,28)"/><text x="59.0381%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="58.8799%" y="421" width="0.0510%" height="15" fill="rgb(238,59,32)"/><text x="59.1299%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="58.9105%" y="405" width="0.0204%" height="15" fill="rgb(226,82,3)"/><text x="59.1605%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (17 samples, 0.17%)</title><rect x="58.7677%" y="485" width="0.1734%" height="15" fill="rgb(240,164,32)"/><text x="59.0177%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="58.9309%" y="469" width="0.0102%" height="15" fill="rgb(232,46,7)"/><text x="59.1809%" y="479.50"></text></g><g><title>deno_hyper_bin`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (22 samples, 0.22%)</title><rect x="58.7269%" y="501" width="0.2244%" height="15" fill="rgb(229,129,53)"/><text x="58.9769%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.01%)</title><rect x="58.9411%" y="485" width="0.0102%" height="15" fill="rgb(234,188,29)"/><text x="59.1911%" y="495.50"></text></g><g><title>deno_hyper_bin`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_tuple (1 samples, 0.01%)</title><rect x="58.9513%" y="501" width="0.0102%" height="15" fill="rgb(246,141,4)"/><text x="59.2013%" y="511.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="58.9615%" y="501" width="0.0102%" height="15" fill="rgb(229,23,39)"/><text x="59.2115%" y="511.50"></text></g><g><title>deno_hyper_bin`__rdl_alloc (1 samples, 0.01%)</title><rect x="58.9717%" y="501" width="0.0102%" height="15" fill="rgb(206,12,3)"/><text x="59.2217%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.03%)</title><rect x="59.1962%" y="405" width="0.0306%" height="15" fill="rgb(252,226,20)"/><text x="59.4462%" y="415.50"></text></g><g><title>deno_hyper_bin`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_tuple (27 samples, 0.28%)</title><rect x="59.0023%" y="485" width="0.2754%" height="15" fill="rgb(216,123,35)"/><text x="59.2523%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc (25 samples, 0.26%)</title><rect x="59.0227%" y="469" width="0.2550%" height="15" fill="rgb(212,68,40)"/><text x="59.2727%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.23%)</title><rect x="59.0432%" y="453" width="0.2346%" height="15" fill="rgb(254,125,32)"/><text x="59.2932%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.21%)</title><rect x="59.0636%" y="437" width="0.2142%" height="15" fill="rgb(253,97,22)"/><text x="59.3136%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.17%)</title><rect x="59.1044%" y="421" width="0.1734%" height="15" fill="rgb(241,101,14)"/><text x="59.3544%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="59.2268%" y="405" width="0.0510%" height="15" fill="rgb(238,103,29)"/><text x="59.4768%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="59.2676%" y="389" width="0.0102%" height="15" fill="rgb(233,195,47)"/><text x="59.5176%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="59.3492%" y="453" width="0.0204%" height="15" fill="rgb(246,218,30)"/><text x="59.5992%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (53 samples, 0.54%)</title><rect x="59.3084%" y="469" width="0.5407%" height="15" fill="rgb(219,145,47)"/><text x="59.5584%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.48%)</title><rect x="59.3696%" y="453" width="0.4794%" height="15" fill="rgb(243,12,26)"/><text x="59.6196%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (46 samples, 0.47%)</title><rect x="59.3798%" y="437" width="0.4692%" height="15" fill="rgb(214,87,16)"/><text x="59.6298%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.27%)</title><rect x="59.5838%" y="421" width="0.2652%" height="15" fill="rgb(208,99,42)"/><text x="59.8338%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.10%)</title><rect x="59.7470%" y="405" width="0.1020%" height="15" fill="rgb(253,99,2)"/><text x="59.9970%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (57 samples, 0.58%)</title><rect x="59.2778%" y="485" width="0.5815%" height="15" fill="rgb(220,168,23)"/><text x="59.5278%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="59.8490%" y="469" width="0.0102%" height="15" fill="rgb(242,38,24)"/><text x="60.0990%" y="479.50"></text></g><g><title>deno_hyper_bin`serde_json::value::to_value (100 samples, 1.02%)</title><rect x="58.9819%" y="501" width="1.0201%" height="15" fill="rgb(225,182,9)"/><text x="59.2319%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.14%)</title><rect x="59.8592%" y="485" width="0.1428%" height="15" fill="rgb(243,178,37)"/><text x="60.1092%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="60.0020%" y="501" width="0.0102%" height="15" fill="rgb(232,139,19)"/><text x="60.2520%" y="511.50"></text></g><g><title>deno_hyper_bin`serde::ser::Serializer::collect_seq (143 samples, 1.46%)</title><rect x="58.6045%" y="517" width="1.4587%" height="15" fill="rgb(225,201,24)"/><text x="58.8545%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.05%)</title><rect x="60.0122%" y="501" width="0.0510%" height="15" fill="rgb(221,47,46)"/><text x="60.2622%" y="511.50"></text></g><g><title>deno_hyper_bin`serde_json::value::to_value (1 samples, 0.01%)</title><rect x="60.0632%" y="517" width="0.0102%" height="15" fill="rgb(249,23,13)"/><text x="60.3132%" y="527.50"></text></g><g><title>deno_hyper_bin`std::collections::hash::map::RandomState::new::KEYS::__getit (2 samples, 0.02%)</title><rect x="60.0734%" y="517" width="0.0204%" height="15" fill="rgb(219,9,5)"/><text x="60.3234%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="60.0938%" y="517" width="0.0612%" height="15" fill="rgb(254,171,16)"/><text x="60.3438%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (4 samples, 0.04%)</title><rect x="60.1551%" y="517" width="0.0408%" height="15" fill="rgb(230,171,20)"/><text x="60.4051%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.04%)</title><rect x="60.1959%" y="517" width="0.0408%" height="15" fill="rgb(210,71,41)"/><text x="60.4459%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.42%)</title><rect x="60.2367%" y="517" width="0.4182%" height="15" fill="rgb(206,173,20)"/><text x="60.4867%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.27%)</title><rect x="60.3897%" y="501" width="0.2652%" height="15" fill="rgb(233,88,34)"/><text x="60.6397%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.23%)</title><rect x="60.4203%" y="485" width="0.2346%" height="15" fill="rgb(223,209,46)"/><text x="60.6703%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.03%)</title><rect x="61.1956%" y="501" width="0.0306%" height="15" fill="rgb(250,43,18)"/><text x="61.4456%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="61.2262%" y="501" width="0.0102%" height="15" fill="rgb(208,13,10)"/><text x="61.4762%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (33 samples, 0.34%)</title><rect x="61.8994%" y="485" width="0.3366%" height="15" fill="rgb(212,200,36)"/><text x="62.1494%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (173 samples, 1.76%)</title><rect x="60.6549%" y="517" width="1.7648%" height="15" fill="rgb(225,90,30)"/><text x="60.9049%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (116 samples, 1.18%)</title><rect x="61.2364%" y="501" width="1.1833%" height="15" fill="rgb(236,182,39)"/><text x="61.4864%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (18 samples, 0.18%)</title><rect x="62.2361%" y="485" width="0.1836%" height="15" fill="rgb(212,144,35)"/><text x="62.4861%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="62.4401%" y="501" width="0.0204%" height="15" fill="rgb(228,63,44)"/><text x="62.6901%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.03%)</title><rect x="62.5523%" y="485" width="0.0306%" height="15" fill="rgb(228,109,6)"/><text x="62.8023%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="62.6441%" y="469" width="0.0102%" height="15" fill="rgb(238,117,24)"/><text x="62.8941%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.02%)</title><rect x="63.3582%" y="453" width="0.0204%" height="15" fill="rgb(242,26,26)"/><text x="63.6082%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.02%)</title><rect x="63.3786%" y="453" width="0.0204%" height="15" fill="rgb(221,92,48)"/><text x="63.6286%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="63.3990%" y="453" width="0.0204%" height="15" fill="rgb(209,209,32)"/><text x="63.6490%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="63.4194%" y="453" width="0.0102%" height="15" fill="rgb(221,70,22)"/><text x="63.6694%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (58 samples, 0.59%)</title><rect x="63.4296%" y="453" width="0.5917%" height="15" fill="rgb(248,145,5)"/><text x="63.6796%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.19%)</title><rect x="63.8274%" y="437" width="0.1938%" height="15" fill="rgb(226,116,26)"/><text x="64.0774%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (158 samples, 1.61%)</title><rect x="62.4197%" y="517" width="1.6118%" height="15" fill="rgb(244,5,17)"/><text x="62.6697%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (154 samples, 1.57%)</title><rect x="62.4605%" y="501" width="1.5709%" height="15" fill="rgb(252,159,33)"/><text x="62.7105%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (142 samples, 1.45%)</title><rect x="62.5829%" y="485" width="1.4485%" height="15" fill="rgb(206,71,0)"/><text x="62.8329%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (135 samples, 1.38%)</title><rect x="62.6543%" y="469" width="1.3771%" height="15" fill="rgb(233,118,54)"/><text x="62.9043%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.01%)</title><rect x="64.0212%" y="453" width="0.0102%" height="15" fill="rgb(234,83,48)"/><text x="64.2712%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.01%)</title><rect x="64.0314%" y="517" width="0.0102%" height="15" fill="rgb(228,3,54)"/><text x="64.2814%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.05%)</title><rect x="64.0416%" y="517" width="0.0510%" height="15" fill="rgb(226,155,13)"/><text x="64.2916%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="64.0926%" y="517" width="0.0306%" height="15" fill="rgb(241,28,37)"/><text x="64.3426%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="64.1232%" y="517" width="0.0102%" height="15" fill="rgb(233,93,10)"/><text x="64.3732%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5,888 samples, 60.06%)</title><rect x="4.1008%" y="533" width="60.0632%" height="15" fill="rgb(225,113,19)"/><text x="4.3508%" y="543.50">deno_hyper_bin`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="64.1334%" y="517" width="0.0306%" height="15" fill="rgb(241,2,18)"/><text x="64.3834%" y="527.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="64.1640%" y="533" width="0.0510%" height="15" fill="rgb(228,207,21)"/><text x="64.4140%" y="543.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="64.2150%" y="533" width="0.0102%" height="15" fill="rgb(213,211,35)"/><text x="64.4650%" y="543.50"></text></g><g><title>deno_hyper_bin`__rdl_alloc (3 samples, 0.03%)</title><rect x="64.2252%" y="533" width="0.0306%" height="15" fill="rgb(209,83,10)"/><text x="64.4752%" y="543.50"></text></g><g><title>deno_hyper_bin`__rdl_dealloc (3 samples, 0.03%)</title><rect x="64.2558%" y="533" width="0.0306%" height="15" fill="rgb(209,164,1)"/><text x="64.5058%" y="543.50"></text></g><g><title>deno_hyper_bin`alloc::fmt::format (2 samples, 0.02%)</title><rect x="64.2864%" y="533" width="0.0204%" height="15" fill="rgb(213,184,43)"/><text x="64.5364%" y="543.50"></text></g><g><title>deno_hyper_bin`core::fmt::write (3 samples, 0.03%)</title><rect x="64.3068%" y="533" width="0.0306%" height="15" fill="rgb(231,61,34)"/><text x="64.5568%" y="543.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (3 samples, 0.03%)</title><rect x="64.3374%" y="533" width="0.0306%" height="15" fill="rgb(235,75,3)"/><text x="64.5874%" y="543.50"></text></g><g><title>deno_hyper_bin`deno_hyper_bin::extract_host (4 samples, 0.04%)</title><rect x="64.3681%" y="533" width="0.0408%" height="15" fill="rgb(220,106,47)"/><text x="64.6181%" y="543.50"></text></g><g><title>deno_hyper_bin`futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.01%)</title><rect x="64.4089%" y="533" width="0.0102%" height="15" fill="rgb(210,196,33)"/><text x="64.6589%" y="543.50"></text></g><g><title>deno_hyper_bin`hashbrown::raw::inner::sse2::Group::static_empty (1 samples, 0.01%)</title><rect x="64.4191%" y="533" width="0.0102%" height="15" fill="rgb(229,154,42)"/><text x="64.6691%" y="543.50"></text></g><g><title>deno_hyper_bin`http::header::value::HeaderValue::to_str (2 samples, 0.02%)</title><rect x="64.4293%" y="533" width="0.0204%" height="15" fill="rgb(228,114,26)"/><text x="64.6793%" y="543.50"></text></g><g><title>deno_hyper_bin`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (3 samples, 0.03%)</title><rect x="64.4497%" y="533" width="0.0306%" height="15" fill="rgb(208,144,1)"/><text x="64.6997%" y="543.50"></text></g><g><title>deno_hyper_bin`serde::ser::Serializer::collect_seq (3 samples, 0.03%)</title><rect x="64.4803%" y="533" width="0.0306%" height="15" fill="rgb(239,112,37)"/><text x="64.7303%" y="543.50"></text></g><g><title>deno_hyper_bin`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.15%)</title><rect x="64.5109%" y="533" width="0.1530%" height="15" fill="rgb(210,96,50)"/><text x="64.7609%" y="543.50"></text></g><g><title>deno_hyper_bin`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="64.6537%" y="517" width="0.0102%" height="15" fill="rgb(222,178,2)"/><text x="64.9037%" y="527.50"></text></g><g><title>deno_hyper_bin`std::collections::hash::map::RandomState::new::KEYS::__getit (4 samples, 0.04%)</title><rect x="64.6639%" y="533" width="0.0408%" height="15" fill="rgb(226,74,18)"/><text x="64.9139%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="64.7047%" y="533" width="0.0102%" height="15" fill="rgb(225,67,54)"/><text x="64.9547%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="64.7149%" y="533" width="0.0204%" height="15" fill="rgb(251,92,32)"/><text x="64.9649%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.01%)</title><rect x="64.7353%" y="533" width="0.0102%" height="15" fill="rgb(228,149,22)"/><text x="64.9853%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="64.7455%" y="533" width="0.0204%" height="15" fill="rgb(243,54,13)"/><text x="64.9955%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (8 samples, 0.08%)</title><rect x="64.7659%" y="533" width="0.0816%" height="15" fill="rgb(243,180,28)"/><text x="65.0159%" y="543.50"></text></g><g><title>deno_hyper_bin`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,986 samples, 61.06%)</title><rect x="3.8458%" y="549" width="61.0629%" height="15" fill="rgb(208,167,24)"/><text x="4.0958%" y="559.50">deno_hyper_bin`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (6 samples, 0.06%)</title><rect x="64.8475%" y="533" width="0.0612%" height="15" fill="rgb(245,73,45)"/><text x="65.0975%" y="543.50"></text></g><g><title>deno_hyper_bin`&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.9087%" y="549" width="0.0102%" height="15" fill="rgb(237,203,48)"/><text x="65.1587%" y="559.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.9189%" y="549" width="0.0102%" height="15" fill="rgb(211,197,16)"/><text x="65.1689%" y="559.50"></text></g><g><title>deno_hyper_bin`&lt;u32 as deno_core::ops_bin::ValueOrVector&gt;::value (2 samples, 0.02%)</title><rect x="64.9291%" y="549" width="0.0204%" height="15" fill="rgb(243,99,51)"/><text x="65.1791%" y="559.50"></text></g><g><title>deno_hyper_bin`__rdl_alloc (2 samples, 0.02%)</title><rect x="64.9495%" y="549" width="0.0204%" height="15" fill="rgb(215,123,29)"/><text x="65.1995%" y="559.50"></text></g><g><title>deno_hyper_bin`__rust_alloc (1 samples, 0.01%)</title><rect x="64.9699%" y="549" width="0.0102%" height="15" fill="rgb(239,186,37)"/><text x="65.2199%" y="559.50"></text></g><g><title>deno_hyper_bin`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="64.9801%" y="549" width="0.0102%" height="15" fill="rgb(252,136,39)"/><text x="65.2301%" y="559.50"></text></g><g><title>deno_hyper_bin`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6,068 samples, 61.90%)</title><rect x="3.1827%" y="565" width="61.8994%" height="15" fill="rgb(223,213,32)"/><text x="3.4327%" y="575.50">deno_hyper_bin`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.09%)</title><rect x="64.9903%" y="549" width="0.0918%" height="15" fill="rgb(233,115,5)"/><text x="65.2403%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.10%)</title><rect x="65.0821%" y="565" width="0.1020%" height="15" fill="rgb(207,226,44)"/><text x="65.3321%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.08%)</title><rect x="65.1025%" y="549" width="0.0816%" height="15" fill="rgb(208,126,0)"/><text x="65.3525%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.08%)</title><rect x="65.1025%" y="533" width="0.0816%" height="15" fill="rgb(244,66,21)"/><text x="65.3525%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.08%)</title><rect x="65.3065%" y="533" width="0.0816%" height="15" fill="rgb(222,97,12)"/><text x="65.5565%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.28%)</title><rect x="65.1841%" y="565" width="0.2754%" height="15" fill="rgb(219,213,19)"/><text x="65.4341%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.22%)</title><rect x="65.2351%" y="549" width="0.2244%" height="15" fill="rgb(252,169,30)"/><text x="65.4851%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.07%)</title><rect x="65.3881%" y="533" width="0.0714%" height="15" fill="rgb(206,32,51)"/><text x="65.6381%" y="543.50"></text></g><g><title>deno_hyper_bin`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6,131 samples, 62.54%)</title><rect x="2.9277%" y="581" width="62.5421%" height="15" fill="rgb(250,172,42)"/><text x="3.1777%" y="591.50">deno_hyper_bin`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="65.4596%" y="565" width="0.0102%" height="15" fill="rgb(209,34,43)"/><text x="65.7096%" y="575.50"></text></g><g><title>deno_hyper_bin`__rdl_dealloc (1 samples, 0.01%)</title><rect x="65.4698%" y="581" width="0.0102%" height="15" fill="rgb(223,11,35)"/><text x="65.7198%" y="591.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (4 samples, 0.04%)</title><rect x="65.4800%" y="581" width="0.0408%" height="15" fill="rgb(251,219,26)"/><text x="65.7300%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="65.5208%" y="581" width="0.0102%" height="15" fill="rgb(231,119,3)"/><text x="65.7708%" y="591.50"></text></g><g><title>deno_hyper_bin`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6,153 samples, 62.77%)</title><rect x="2.7747%" y="597" width="62.7665%" height="15" fill="rgb(216,97,11)"/><text x="3.0247%" y="607.50">deno_hyper_bin`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.01%)</title><rect x="65.5310%" y="581" width="0.0102%" height="15" fill="rgb(223,59,9)"/><text x="65.7810%" y="591.50"></text></g><g><title>deno_hyper_bin`__rdl_dealloc (1 samples, 0.01%)</title><rect x="65.5412%" y="597" width="0.0102%" height="15" fill="rgb(233,93,31)"/><text x="65.7912%" y="607.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="65.6432%" y="581" width="0.0204%" height="15" fill="rgb(239,81,33)"/><text x="65.8932%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.02%)</title><rect x="65.6636%" y="581" width="0.0204%" height="15" fill="rgb(213,120,34)"/><text x="65.9136%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.01%)</title><rect x="65.6840%" y="581" width="0.0102%" height="15" fill="rgb(243,49,53)"/><text x="65.9340%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="65.7044%" y="565" width="0.0204%" height="15" fill="rgb(247,216,33)"/><text x="65.9544%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="65.7044%" y="549" width="0.0204%" height="15" fill="rgb(226,26,14)"/><text x="65.9544%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.04%)</title><rect x="65.6942%" y="581" width="0.0408%" height="15" fill="rgb(215,49,53)"/><text x="65.9442%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="65.7248%" y="565" width="0.0102%" height="15" fill="rgb(245,162,40)"/><text x="65.9748%" y="575.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (34 samples, 0.35%)</title><rect x="65.5514%" y="597" width="0.3468%" height="15" fill="rgb(229,68,17)"/><text x="65.8014%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.16%)</title><rect x="65.7350%" y="581" width="0.1632%" height="15" fill="rgb(213,182,10)"/><text x="65.9850%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.14%)</title><rect x="65.7554%" y="565" width="0.1428%" height="15" fill="rgb(245,125,30)"/><text x="66.0054%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="65.8370%" y="549" width="0.0612%" height="15" fill="rgb(232,202,2)"/><text x="66.0870%" y="559.50"></text></g><g><title>deno_hyper_bin`tokio::util::wake::clone_arc_raw (7 samples, 0.07%)</title><rect x="65.9492%" y="581" width="0.0714%" height="15" fill="rgb(237,140,51)"/><text x="66.1992%" y="591.50"></text></g><g><title>deno_hyper_bin`futures_core::task::__internal::atomic_waker::AtomicWaker::register (16 samples, 0.16%)</title><rect x="65.8982%" y="597" width="0.1632%" height="15" fill="rgb(236,157,25)"/><text x="66.1482%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::util::wake::drop_arc_raw (4 samples, 0.04%)</title><rect x="66.0206%" y="581" width="0.0408%" height="15" fill="rgb(219,209,0)"/><text x="66.2706%" y="591.50"></text></g><g><title>deno_hyper_bin`futures_task::waker_ref::WakerRef::new_unowned (1 samples, 0.01%)</title><rect x="66.0614%" y="597" width="0.0102%" height="15" fill="rgb(240,116,54)"/><text x="66.3114%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::util::wake::clone_arc_raw (2 samples, 0.02%)</title><rect x="66.0716%" y="597" width="0.0204%" height="15" fill="rgb(216,10,36)"/><text x="66.3216%" y="607.50"></text></g><g><title>deno_hyper_bin`futures_util::stream::stream::StreamExt::poll_next_unpin (6,257 samples, 63.83%)</title><rect x="2.2748%" y="613" width="63.8274%" height="15" fill="rgb(222,72,44)"/><text x="2.5248%" y="623.50">deno_hyper_bin`futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>deno_hyper_bin`tokio::util::wake::drop_arc_raw (1 samples, 0.01%)</title><rect x="66.0920%" y="597" width="0.0102%" height="15" fill="rgb(232,159,9)"/><text x="66.3420%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::Context::global_object (1 samples, 0.01%)</title><rect x="66.1124%" y="581" width="0.0102%" height="15" fill="rgb(210,39,32)"/><text x="66.3624%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::Context::global_proxy (7 samples, 0.07%)</title><rect x="66.1226%" y="581" width="0.0714%" height="15" fill="rgb(216,194,45)"/><text x="66.3726%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::Context::Global (14 samples, 0.14%)</title><rect x="66.1022%" y="597" width="0.1428%" height="15" fill="rgb(218,18,35)"/><text x="66.3522%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::PrototypeIterator::Advance (5 samples, 0.05%)</title><rect x="66.1940%" y="581" width="0.0510%" height="15" fill="rgb(207,83,51)"/><text x="66.4440%" y="591.50"></text></g><g><title>deno_hyper_bin`rusty_v8::context::_&lt;impl rusty_v8::data::Context&gt;::global (16 samples, 0.16%)</title><rect x="66.1022%" y="613" width="0.1632%" height="15" fill="rgb(225,63,43)"/><text x="66.3522%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::Context::global_proxy (2 samples, 0.02%)</title><rect x="66.2450%" y="597" width="0.0204%" height="15" fill="rgb(207,57,36)"/><text x="66.4950%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::HandleScope&lt;()&gt;::cast_local (1 samples, 0.01%)</title><rect x="66.2756%" y="597" width="0.0102%" height="15" fill="rgb(216,99,33)"/><text x="66.5256%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (2 samples, 0.02%)</title><rect x="66.2858%" y="597" width="0.0204%" height="15" fill="rgb(225,42,16)"/><text x="66.5358%" y="607.50"></text></g><g><title>deno_hyper_bin`Builtins_JSEntry (1 samples, 0.01%)</title><rect x="66.4286%" y="565" width="0.0102%" height="15" fill="rgb(220,201,45)"/><text x="66.6786%" y="575.50"></text></g><g><title>0x137200088e80 (1 samples, 0.01%)</title><rect x="66.5817%" y="533" width="0.0102%" height="15" fill="rgb(225,33,4)"/><text x="66.8317%" y="543.50"></text></g><g><title>0x137200088e8a (1 samples, 0.01%)</title><rect x="66.5919%" y="533" width="0.0102%" height="15" fill="rgb(224,33,50)"/><text x="66.8419%" y="543.50"></text></g><g><title>deno_hyper_bin`Builtins_CallFunction_ReceiverIsAny (6 samples, 0.06%)</title><rect x="66.6021%" y="533" width="0.0612%" height="15" fill="rgb(246,198,51)"/><text x="66.8521%" y="543.50"></text></g><g><title>deno_hyper_bin`Builtins_Call_ReceiverIsAny (1 samples, 0.01%)</title><rect x="66.6633%" y="533" width="0.0102%" height="15" fill="rgb(205,22,4)"/><text x="66.9133%" y="543.50"></text></g><g><title>0x1372000871c0 (1 samples, 0.01%)</title><rect x="66.6837%" y="517" width="0.0102%" height="15" fill="rgb(206,3,8)"/><text x="66.9337%" y="527.50"></text></g><g><title>0x1372000871c3 (1 samples, 0.01%)</title><rect x="66.6939%" y="517" width="0.0102%" height="15" fill="rgb(251,23,15)"/><text x="66.9439%" y="527.50"></text></g><g><title>0x1372000871ca (2 samples, 0.02%)</title><rect x="66.7041%" y="517" width="0.0204%" height="15" fill="rgb(252,88,28)"/><text x="66.9541%" y="527.50"></text></g><g><title>0x137200088ec0 (1 samples, 0.01%)</title><rect x="66.7245%" y="517" width="0.0102%" height="15" fill="rgb(212,127,14)"/><text x="66.9745%" y="527.50"></text></g><g><title>0x137200088edf (1 samples, 0.01%)</title><rect x="66.7347%" y="517" width="0.0102%" height="15" fill="rgb(247,145,37)"/><text x="66.9847%" y="527.50"></text></g><g><title>0x137200088f12 (1 samples, 0.01%)</title><rect x="66.7449%" y="517" width="0.0102%" height="15" fill="rgb(209,117,53)"/><text x="66.9949%" y="527.50"></text></g><g><title>0x137200088f1f (1 samples, 0.01%)</title><rect x="66.7551%" y="517" width="0.0102%" height="15" fill="rgb(212,90,42)"/><text x="67.0051%" y="527.50"></text></g><g><title>0x137200088f36 (1 samples, 0.01%)</title><rect x="66.7653%" y="517" width="0.0102%" height="15" fill="rgb(218,164,37)"/><text x="67.0153%" y="527.50"></text></g><g><title>0x137200088f86 (1 samples, 0.01%)</title><rect x="66.7755%" y="517" width="0.0102%" height="15" fill="rgb(246,65,34)"/><text x="67.0255%" y="527.50"></text></g><g><title>0x137200089008 (1 samples, 0.01%)</title><rect x="66.7857%" y="517" width="0.0102%" height="15" fill="rgb(231,100,33)"/><text x="67.0357%" y="527.50"></text></g><g><title>0x13720008907b (1 samples, 0.01%)</title><rect x="66.7959%" y="517" width="0.0102%" height="15" fill="rgb(228,126,14)"/><text x="67.0459%" y="527.50"></text></g><g><title>0x137200089082 (1 samples, 0.01%)</title><rect x="66.8061%" y="517" width="0.0102%" height="15" fill="rgb(215,173,21)"/><text x="67.0561%" y="527.50"></text></g><g><title>0x1372000890c3 (1 samples, 0.01%)</title><rect x="66.8163%" y="517" width="0.0102%" height="15" fill="rgb(210,6,40)"/><text x="67.0663%" y="527.50"></text></g><g><title>0x1372000890d0 (1 samples, 0.01%)</title><rect x="66.8265%" y="517" width="0.0102%" height="15" fill="rgb(212,48,18)"/><text x="67.0765%" y="527.50"></text></g><g><title>0x1372000891ff (1 samples, 0.01%)</title><rect x="66.8367%" y="517" width="0.0102%" height="15" fill="rgb(230,214,11)"/><text x="67.0867%" y="527.50"></text></g><g><title>0x13720008920e (1 samples, 0.01%)</title><rect x="66.8469%" y="517" width="0.0102%" height="15" fill="rgb(254,105,39)"/><text x="67.0969%" y="527.50"></text></g><g><title>0x137200089296 (1 samples, 0.01%)</title><rect x="66.8571%" y="517" width="0.0102%" height="15" fill="rgb(245,158,5)"/><text x="67.1071%" y="527.50"></text></g><g><title>0x1372000892c2 (1 samples, 0.01%)</title><rect x="66.8673%" y="517" width="0.0102%" height="15" fill="rgb(249,208,11)"/><text x="67.1173%" y="527.50"></text></g><g><title>0x137200089305 (2 samples, 0.02%)</title><rect x="66.8775%" y="517" width="0.0204%" height="15" fill="rgb(210,39,28)"/><text x="67.1275%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (1 samples, 0.01%)</title><rect x="67.3263%" y="389" width="0.0102%" height="15" fill="rgb(211,56,53)"/><text x="67.5763%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::AllocateRawSlow (1 samples, 0.01%)</title><rect x="67.3263%" y="373" width="0.0102%" height="15" fill="rgb(226,201,30)"/><text x="67.5763%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::EnsureAllocation (1 samples, 0.01%)</title><rect x="67.3263%" y="357" width="0.0102%" height="15" fill="rgb(239,101,34)"/><text x="67.5763%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::UpdateInlineAllocationLimit (1 samples, 0.01%)</title><rect x="67.3263%" y="341" width="0.0102%" height="15" fill="rgb(226,209,5)"/><text x="67.5763%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::SupportsAllocationObserver (1 samples, 0.01%)</title><rect x="67.3263%" y="325" width="0.0102%" height="15" fill="rgb(250,105,47)"/><text x="67.5763%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionPrologue (1 samples, 0.01%)</title><rect x="67.3365%" y="373" width="0.0102%" height="15" fill="rgb(230,72,3)"/><text x="67.5865%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Scope::~Scope (1 samples, 0.01%)</title><rect x="67.3365%" y="357" width="0.0102%" height="15" fill="rgb(232,218,39)"/><text x="67.5865%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (1 samples, 0.01%)</title><rect x="67.3467%" y="357" width="0.0102%" height="15" fill="rgb(248,166,6)"/><text x="67.5967%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::RequestSweep (1 samples, 0.01%)</title><rect x="67.3569%" y="325" width="0.0102%" height="15" fill="rgb(247,89,20)"/><text x="67.6069%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::MakeCancelableTask(v8::internal::Isolate*, std::__1::function&lt;void  (1 samples, 0.01%)</title><rect x="67.3569%" y="309" width="0.0102%" height="15" fill="rgb(248,130,54)"/><text x="67.6069%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::CancelableTask::CancelableTask (1 samples, 0.01%)</title><rect x="67.3569%" y="293" width="0.0102%" height="15" fill="rgb(234,196,4)"/><text x="67.6069%" y="303.50"></text></g><g><title>deno_hyper_bin`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned long long, v8::internal::Cancelable*&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned long long, v8::internal::Cancelable*&gt;, std::__1::__unordered_map_hasher&lt;unsigned long long, std::__1::__hash_value_type&lt;unsigned long long, v8::internal::Cancelable*&gt;, std::__1::hash&lt;unsigned long long&gt;, std::__1::equal_to&lt;unsigned long long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned long long, std::__1::__hash_value_type&lt;unsigned long long, v8::internal::Cancelable*&gt;, std::__1::equal_to&lt;unsigned long long&gt;, std::__1::hash&lt;unsigned long long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned long long, v8::internal::Cancelable*&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned long long, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;unsigned long long const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(unsigned long long const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple (1 samples, 0.01%)</title><rect x="67.3569%" y="277" width="0.0102%" height="15" fill="rgb(250,143,31)"/><text x="67.6069%" y="287.50"></text></g><g><title>0x137200089333 (47 samples, 0.48%)</title><rect x="66.8979%" y="517" width="0.4794%" height="15" fill="rgb(211,110,34)"/><text x="67.1479%" y="527.50"></text></g><g><title>deno_hyper_bin`Builtins_TypedArrayPrototypeSubArray (45 samples, 0.46%)</title><rect x="66.9183%" y="501" width="0.4590%" height="15" fill="rgb(215,124,48)"/><text x="67.1683%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_CreateTypedArray (21 samples, 0.21%)</title><rect x="67.1631%" y="485" width="0.2142%" height="15" fill="rgb(216,46,13)"/><text x="67.4131%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (5 samples, 0.05%)</title><rect x="67.3263%" y="469" width="0.0510%" height="15" fill="rgb(205,184,25)"/><text x="67.5763%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (5 samples, 0.05%)</title><rect x="67.3263%" y="453" width="0.0510%" height="15" fill="rgb(228,1,10)"/><text x="67.5763%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (5 samples, 0.05%)</title><rect x="67.3263%" y="437" width="0.0510%" height="15" fill="rgb(213,116,27)"/><text x="67.5763%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.05%)</title><rect x="67.3263%" y="421" width="0.0510%" height="15" fill="rgb(241,95,50)"/><text x="67.5763%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.05%)</title><rect x="67.3263%" y="405" width="0.0510%" height="15" fill="rgb(238,48,32)"/><text x="67.5763%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (4 samples, 0.04%)</title><rect x="67.3365%" y="389" width="0.0408%" height="15" fill="rgb(235,113,49)"/><text x="67.5865%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="67.3467%" y="373" width="0.0306%" height="15" fill="rgb(205,127,43)"/><text x="67.5967%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="67.3569%" y="357" width="0.0204%" height="15" fill="rgb(250,162,2)"/><text x="67.6069%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.02%)</title><rect x="67.3569%" y="341" width="0.0204%" height="15" fill="rgb(220,13,41)"/><text x="67.6069%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Scope::Scope (1 samples, 0.01%)</title><rect x="67.3671%" y="325" width="0.0102%" height="15" fill="rgb(249,221,25)"/><text x="67.6171%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::base::TimeTicks::Now (1 samples, 0.01%)</title><rect x="67.3671%" y="309" width="0.0102%" height="15" fill="rgb(215,208,19)"/><text x="67.6171%" y="319.50"></text></g><g><title>0x137200089370 (1 samples, 0.01%)</title><rect x="67.3773%" y="517" width="0.0102%" height="15" fill="rgb(236,175,2)"/><text x="67.6273%" y="527.50"></text></g><g><title>0x13720008940e (1 samples, 0.01%)</title><rect x="67.3875%" y="517" width="0.0102%" height="15" fill="rgb(241,52,2)"/><text x="67.6375%" y="527.50"></text></g><g><title>0x137200089461 (1 samples, 0.01%)</title><rect x="67.3977%" y="517" width="0.0102%" height="15" fill="rgb(248,140,14)"/><text x="67.6477%" y="527.50"></text></g><g><title>0x13720008947d (3 samples, 0.03%)</title><rect x="67.4079%" y="517" width="0.0306%" height="15" fill="rgb(253,22,42)"/><text x="67.6579%" y="527.50"></text></g><g><title>0x137200089488 (1 samples, 0.01%)</title><rect x="67.4385%" y="517" width="0.0102%" height="15" fill="rgb(234,61,47)"/><text x="67.6885%" y="527.50"></text></g><g><title>0x1372000894ab (2 samples, 0.02%)</title><rect x="67.4487%" y="517" width="0.0204%" height="15" fill="rgb(208,226,15)"/><text x="67.6987%" y="527.50"></text></g><g><title>0x1372000894d4 (1 samples, 0.01%)</title><rect x="67.4691%" y="517" width="0.0102%" height="15" fill="rgb(217,221,4)"/><text x="67.7191%" y="527.50"></text></g><g><title>0x1372000894db (1 samples, 0.01%)</title><rect x="67.4793%" y="517" width="0.0102%" height="15" fill="rgb(212,174,34)"/><text x="67.7293%" y="527.50"></text></g><g><title>0x137200089520 (1 samples, 0.01%)</title><rect x="67.4895%" y="517" width="0.0102%" height="15" fill="rgb(253,83,4)"/><text x="67.7395%" y="527.50"></text></g><g><title>0x137200089577 (1 samples, 0.01%)</title><rect x="67.4997%" y="517" width="0.0102%" height="15" fill="rgb(250,195,49)"/><text x="67.7497%" y="527.50"></text></g><g><title>0x1372000871fe (1 samples, 0.01%)</title><rect x="67.5201%" y="501" width="0.0102%" height="15" fill="rgb(241,192,25)"/><text x="67.7701%" y="511.50"></text></g><g><title>0x137200087247 (1 samples, 0.01%)</title><rect x="67.5303%" y="501" width="0.0102%" height="15" fill="rgb(208,124,10)"/><text x="67.7803%" y="511.50"></text></g><g><title>0x13720008729e (1 samples, 0.01%)</title><rect x="67.5405%" y="501" width="0.0102%" height="15" fill="rgb(222,33,0)"/><text x="67.7905%" y="511.50"></text></g><g><title>0x1372000872e6 (1 samples, 0.01%)</title><rect x="67.5507%" y="501" width="0.0102%" height="15" fill="rgb(234,209,28)"/><text x="67.8007%" y="511.50"></text></g><g><title>0x1372000872fd (1 samples, 0.01%)</title><rect x="67.5610%" y="501" width="0.0102%" height="15" fill="rgb(224,11,23)"/><text x="67.8110%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_TypedArrayPrototypeBuffer (14 samples, 0.14%)</title><rect x="67.5814%" y="469" width="0.1428%" height="15" fill="rgb(232,99,1)"/><text x="67.8314%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSTypedArray::GetBuffer (5 samples, 0.05%)</title><rect x="67.6732%" y="453" width="0.0510%" height="15" fill="rgb(237,95,45)"/><text x="67.9232%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_TypedArrayPrototypeBuffer (1 samples, 0.01%)</title><rect x="67.7242%" y="469" width="0.0102%" height="15" fill="rgb(208,109,11)"/><text x="67.9742%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (19 samples, 0.19%)</title><rect x="67.5712%" y="485" width="0.1938%" height="15" fill="rgb(216,190,48)"/><text x="67.8212%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSTypedArray::GetBuffer (3 samples, 0.03%)</title><rect x="67.7344%" y="469" width="0.0306%" height="15" fill="rgb(251,171,36)"/><text x="67.9844%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_TypedArrayPrototypeBuffer (2 samples, 0.02%)</title><rect x="67.7650%" y="485" width="0.0204%" height="15" fill="rgb(230,62,22)"/><text x="68.0150%" y="495.50"></text></g><g><title>0x137200087324 (23 samples, 0.23%)</title><rect x="67.5712%" y="501" width="0.2346%" height="15" fill="rgb(225,114,35)"/><text x="67.8212%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_TypedArrayPrototypeBuffer (2 samples, 0.02%)</title><rect x="67.7854%" y="485" width="0.0204%" height="15" fill="rgb(215,118,42)"/><text x="68.0354%" y="495.50"></text></g><g><title>0x137200087338 (1 samples, 0.01%)</title><rect x="67.8058%" y="501" width="0.0102%" height="15" fill="rgb(243,119,21)"/><text x="68.0558%" y="511.50"></text></g><g><title>0x13720008737a (1 samples, 0.01%)</title><rect x="67.8160%" y="501" width="0.0102%" height="15" fill="rgb(252,177,53)"/><text x="68.0660%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="67.8262%" y="485" width="0.0102%" height="15" fill="rgb(237,209,29)"/><text x="68.0762%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewConstructor (2 samples, 0.02%)</title><rect x="67.8364%" y="485" width="0.0204%" height="15" fill="rgb(212,65,23)"/><text x="68.0864%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (1 samples, 0.01%)</title><rect x="68.0812%" y="437" width="0.0102%" height="15" fill="rgb(230,222,46)"/><text x="68.3312%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSFunction::GetDerivedMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="68.0914%" y="437" width="0.0204%" height="15" fill="rgb(215,135,32)"/><text x="68.3414%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::GetHeaderSize (5 samples, 0.05%)</title><rect x="68.1118%" y="437" width="0.0510%" height="15" fill="rgb(246,101,22)"/><text x="68.3618%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (2 samples, 0.02%)</title><rect x="68.1934%" y="421" width="0.0204%" height="15" fill="rgb(206,107,13)"/><text x="68.4434%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="68.2138%" y="421" width="0.0204%" height="15" fill="rgb(250,100,44)"/><text x="68.4638%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (1 samples, 0.01%)</title><rect x="68.3872%" y="373" width="0.0102%" height="15" fill="rgb(231,147,38)"/><text x="68.6372%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (5 samples, 0.05%)</title><rect x="68.3974%" y="357" width="0.0510%" height="15" fill="rgb(229,8,40)"/><text x="68.6474%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Stop (1 samples, 0.01%)</title><rect x="68.4484%" y="341" width="0.0102%" height="15" fill="rgb(221,135,30)"/><text x="68.6984%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Print (1 samples, 0.01%)</title><rect x="68.4484%" y="325" width="0.0102%" height="15" fill="rgb(249,193,18)"/><text x="68.6984%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Output (1 samples, 0.01%)</title><rect x="68.4484%" y="309" width="0.0102%" height="15" fill="rgb(209,133,39)"/><text x="68.6984%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::base::OS::VSNPrintF (1 samples, 0.01%)</title><rect x="68.4484%" y="293" width="0.0102%" height="15" fill="rgb(232,100,14)"/><text x="68.6984%" y="303.50"></text></g><g><title>libsystem_c.dylib`vsnprintf (1 samples, 0.01%)</title><rect x="68.4484%" y="277" width="0.0102%" height="15" fill="rgb(224,185,1)"/><text x="68.6984%" y="287.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.01%)</title><rect x="68.4484%" y="261" width="0.0102%" height="15" fill="rgb(223,139,8)"/><text x="68.6984%" y="271.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.01%)</title><rect x="68.4484%" y="245" width="0.0102%" height="15" fill="rgb(232,213,38)"/><text x="68.6984%" y="255.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.01%)</title><rect x="68.4484%" y="229" width="0.0102%" height="15" fill="rgb(207,94,22)"/><text x="68.6984%" y="239.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (1 samples, 0.01%)</title><rect x="68.4484%" y="213" width="0.0102%" height="15" fill="rgb(219,183,54)"/><text x="68.6984%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="68.4484%" y="197" width="0.0102%" height="15" fill="rgb(216,185,54)"/><text x="68.6984%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::Join (1 samples, 0.01%)</title><rect x="68.4586%" y="277" width="0.0102%" height="15" fill="rgb(254,217,39)"/><text x="68.7086%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::JobTask::Run (1 samples, 0.01%)</title><rect x="68.4586%" y="261" width="0.0102%" height="15" fill="rgb(240,178,23)"/><text x="68.7086%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::JobTask::ProcessItems (1 samples, 0.01%)</title><rect x="68.4586%" y="245" width="0.0102%" height="15" fill="rgb(218,11,47)"/><text x="68.7086%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Scavenger::Process (1 samples, 0.01%)</title><rect x="68.4586%" y="229" width="0.0102%" height="15" fill="rgb(218,51,51)"/><text x="68.7086%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.01%)</title><rect x="68.4586%" y="213" width="0.0102%" height="15" fill="rgb(238,126,27)"/><text x="68.7086%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (2 samples, 0.02%)</title><rect x="68.4586%" y="341" width="0.0204%" height="15" fill="rgb(249,202,22)"/><text x="68.7086%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="68.4586%" y="325" width="0.0204%" height="15" fill="rgb(254,195,49)"/><text x="68.7086%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.02%)</title><rect x="68.4586%" y="309" width="0.0204%" height="15" fill="rgb(208,123,14)"/><text x="68.7086%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobHandle::Join (2 samples, 0.02%)</title><rect x="68.4586%" y="293" width="0.0204%" height="15" fill="rgb(224,200,8)"/><text x="68.7086%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.01%)</title><rect x="68.4688%" y="277" width="0.0102%" height="15" fill="rgb(217,61,36)"/><text x="68.7188%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::base::ConditionVariable::~ConditionVariable (1 samples, 0.01%)</title><rect x="68.4688%" y="261" width="0.0102%" height="15" fill="rgb(206,35,45)"/><text x="68.7188%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (1 samples, 0.01%)</title><rect x="68.4688%" y="245" width="0.0102%" height="15" fill="rgb(217,65,33)"/><text x="68.7188%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (24 samples, 0.24%)</title><rect x="68.2444%" y="405" width="0.2448%" height="15" fill="rgb(222,158,48)"/><text x="68.4944%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (14 samples, 0.14%)</title><rect x="68.3464%" y="389" width="0.1428%" height="15" fill="rgb(254,2,54)"/><text x="68.5964%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (9 samples, 0.09%)</title><rect x="68.3974%" y="373" width="0.0918%" height="15" fill="rgb(250,143,38)"/><text x="68.6474%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (4 samples, 0.04%)</title><rect x="68.4484%" y="357" width="0.0408%" height="15" fill="rgb(248,25,0)"/><text x="68.6984%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="68.4790%" y="341" width="0.0102%" height="15" fill="rgb(206,152,27)"/><text x="68.7290%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="68.4892%" y="405" width="0.0408%" height="15" fill="rgb(240,77,30)"/><text x="68.7392%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (5 samples, 0.05%)</title><rect x="68.5300%" y="405" width="0.0510%" height="15" fill="rgb(231,5,3)"/><text x="68.7800%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (35 samples, 0.36%)</title><rect x="68.2342%" y="421" width="0.3570%" height="15" fill="rgb(207,226,32)"/><text x="68.4842%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::MaxRegularHeapObjectSize (1 samples, 0.01%)</title><rect x="68.5810%" y="405" width="0.0102%" height="15" fill="rgb(222,207,47)"/><text x="68.8310%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSFunction::EnsureHasInitialMap(v8::internal::Handle (3 samples, 0.03%)</title><rect x="68.5912%" y="421" width="0.0306%" height="15" fill="rgb(229,115,45)"/><text x="68.8412%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_DataViewConstructor (76 samples, 0.78%)</title><rect x="67.9282%" y="453" width="0.7753%" height="15" fill="rgb(224,191,6)"/><text x="68.1782%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::New(v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (53 samples, 0.54%)</title><rect x="68.1628%" y="437" width="0.5407%" height="15" fill="rgb(230,227,24)"/><text x="68.4128%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSFunction::GetDerivedMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle (8 samples, 0.08%)</title><rect x="68.6219%" y="421" width="0.0816%" height="15" fill="rgb(228,80,19)"/><text x="68.8719%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSFunction::EnsureHasInitialMap(v8::internal::Handle (6 samples, 0.06%)</title><rect x="68.6423%" y="405" width="0.0612%" height="15" fill="rgb(247,229,0)"/><text x="68.8923%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::GetHeaderSize (1 samples, 0.01%)</title><rect x="68.7035%" y="453" width="0.0102%" height="15" fill="rgb(237,194,15)"/><text x="68.9535%" y="463.50"></text></g><g><title>0x1372000873b3 (89 samples, 0.91%)</title><rect x="67.8262%" y="501" width="0.9079%" height="15" fill="rgb(219,203,20)"/><text x="68.0762%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (86 samples, 0.88%)</title><rect x="67.8568%" y="485" width="0.8773%" height="15" fill="rgb(234,128,8)"/><text x="68.1068%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (79 samples, 0.81%)</title><rect x="67.9282%" y="469" width="0.8059%" height="15" fill="rgb(248,202,8)"/><text x="68.1782%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::New(v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="68.7137%" y="453" width="0.0204%" height="15" fill="rgb(206,104,37)"/><text x="68.9637%" y="463.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="68.7341%" y="485" width="0.0102%" height="15" fill="rgb(223,8,27)"/><text x="68.9841%" y="495.50"></text></g><g><title>0x137200087400 (9 samples, 0.09%)</title><rect x="68.7341%" y="501" width="0.0918%" height="15" fill="rgb(216,217,28)"/><text x="68.9841%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeGetBigUint64 (8 samples, 0.08%)</title><rect x="68.7443%" y="485" width="0.0816%" height="15" fill="rgb(249,199,1)"/><text x="68.9943%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="68.8157%" y="469" width="0.0102%" height="15" fill="rgb(240,85,17)"/><text x="69.0657%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.01%)</title><rect x="68.8157%" y="453" width="0.0102%" height="15" fill="rgb(206,108,45)"/><text x="69.0657%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (1 samples, 0.01%)</title><rect x="68.8157%" y="437" width="0.0102%" height="15" fill="rgb(245,210,41)"/><text x="69.0657%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.01%)</title><rect x="68.8157%" y="421" width="0.0102%" height="15" fill="rgb(206,13,37)"/><text x="69.0657%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (1 samples, 0.01%)</title><rect x="68.8157%" y="405" width="0.0102%" height="15" fill="rgb(250,61,18)"/><text x="69.0657%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (1 samples, 0.01%)</title><rect x="68.8157%" y="389" width="0.0102%" height="15" fill="rgb(235,172,48)"/><text x="69.0657%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (1 samples, 0.01%)</title><rect x="68.8157%" y="373" width="0.0102%" height="15" fill="rgb(249,201,17)"/><text x="69.0657%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (1 samples, 0.01%)</title><rect x="68.8157%" y="357" width="0.0102%" height="15" fill="rgb(219,208,6)"/><text x="69.0657%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.01%)</title><rect x="68.8157%" y="341" width="0.0102%" height="15" fill="rgb(248,31,23)"/><text x="69.0657%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::FreeList::CreateFreeList (1 samples, 0.01%)</title><rect x="68.8157%" y="325" width="0.0102%" height="15" fill="rgb(245,15,42)"/><text x="69.0657%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="68.8259%" y="485" width="0.0102%" height="15" fill="rgb(222,217,39)"/><text x="69.0759%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::BigInt::ToNumber(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="68.8769%" y="453" width="0.0306%" height="15" fill="rgb(210,219,27)"/><text x="69.1269%" y="463.50"></text></g><g><title>0x137200087417 (13 samples, 0.13%)</title><rect x="68.8259%" y="501" width="0.1326%" height="15" fill="rgb(252,166,36)"/><text x="69.0759%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_ToNumberConvertBigInt (12 samples, 0.12%)</title><rect x="68.8361%" y="485" width="0.1224%" height="15" fill="rgb(245,132,34)"/><text x="69.0861%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (9 samples, 0.09%)</title><rect x="68.8667%" y="469" width="0.0918%" height="15" fill="rgb(236,54,3)"/><text x="69.1167%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_BigIntToNumber (5 samples, 0.05%)</title><rect x="68.9075%" y="453" width="0.0510%" height="15" fill="rgb(241,173,43)"/><text x="69.1575%" y="463.50"></text></g><g><title>0x13720008741b (2 samples, 0.02%)</title><rect x="68.9585%" y="501" width="0.0204%" height="15" fill="rgb(215,190,9)"/><text x="69.2085%" y="511.50"></text></g><g><title>0x13720008744e (1 samples, 0.01%)</title><rect x="68.9789%" y="501" width="0.0102%" height="15" fill="rgb(242,101,16)"/><text x="69.2289%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadIC (21 samples, 0.21%)</title><rect x="68.9891%" y="485" width="0.2142%" height="15" fill="rgb(223,190,21)"/><text x="69.2391%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::ComputeSeededIntegerHash (5 samples, 0.05%)</title><rect x="69.1523%" y="469" width="0.0510%" height="15" fill="rgb(215,228,25)"/><text x="69.4023%" y="479.50"></text></g><g><title>0x137200087565 (24 samples, 0.24%)</title><rect x="68.9891%" y="501" width="0.2448%" height="15" fill="rgb(225,36,22)"/><text x="69.2391%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::ComputeSeededIntegerHash (3 samples, 0.03%)</title><rect x="69.2033%" y="485" width="0.0306%" height="15" fill="rgb(251,106,46)"/><text x="69.4533%" y="495.50"></text></g><g><title>0x137200087581 (5 samples, 0.05%)</title><rect x="69.2339%" y="501" width="0.0510%" height="15" fill="rgb(208,90,1)"/><text x="69.4839%" y="511.50"></text></g><g><title>0x137200087585 (1 samples, 0.01%)</title><rect x="69.2849%" y="501" width="0.0102%" height="15" fill="rgb(243,10,4)"/><text x="69.5349%" y="511.50"></text></g><g><title>0x13720008759d (2 samples, 0.02%)</title><rect x="69.2951%" y="501" width="0.0204%" height="15" fill="rgb(212,137,27)"/><text x="69.5451%" y="511.50"></text></g><g><title>0x1372000875a0 (1 samples, 0.01%)</title><rect x="69.3155%" y="501" width="0.0102%" height="15" fill="rgb(231,220,49)"/><text x="69.5655%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_FulfillPromise (1 samples, 0.01%)</title><rect x="69.3665%" y="469" width="0.0102%" height="15" fill="rgb(237,96,20)"/><text x="69.6165%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_EnqueueMicrotask (5 samples, 0.05%)</title><rect x="69.3767%" y="453" width="0.0510%" height="15" fill="rgb(239,229,30)"/><text x="69.6267%" y="463.50"></text></g><g><title>deno_hyper_bin`Builtins_PromiseCapabilityDefaultResolve (19 samples, 0.19%)</title><rect x="69.3257%" y="485" width="0.1938%" height="15" fill="rgb(219,65,33)"/><text x="69.5757%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_ResolvePromise (14 samples, 0.14%)</title><rect x="69.3767%" y="469" width="0.1428%" height="15" fill="rgb(243,134,7)"/><text x="69.6267%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_FulfillPromise (9 samples, 0.09%)</title><rect x="69.4277%" y="453" width="0.0918%" height="15" fill="rgb(216,177,54)"/><text x="69.6777%" y="463.50"></text></g><g><title>0x1372000875d3 (20 samples, 0.20%)</title><rect x="69.3257%" y="501" width="0.2040%" height="15" fill="rgb(211,160,20)"/><text x="69.5757%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_ResolvePromise (1 samples, 0.01%)</title><rect x="69.5195%" y="485" width="0.0102%" height="15" fill="rgb(239,85,39)"/><text x="69.7695%" y="495.50"></text></g><g><title>0x1372000875d7 (1 samples, 0.01%)</title><rect x="69.5297%" y="501" width="0.0102%" height="15" fill="rgb(232,125,22)"/><text x="69.7797%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSReceiver::DeleteProperty (3 samples, 0.03%)</title><rect x="69.6011%" y="453" width="0.0306%" height="15" fill="rgb(244,57,34)"/><text x="69.8511%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="69.6317%" y="453" width="0.0306%" height="15" fill="rgb(214,203,32)"/><text x="69.8817%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::DeleteImpl(v8::internal::Handle (2 samples, 0.02%)</title><rect x="69.7746%" y="421" width="0.0204%" height="15" fill="rgb(207,58,43)"/><text x="70.0246%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::Delete(v8::internal::Handle (1 samples, 0.01%)</title><rect x="69.7950%" y="421" width="0.0102%" height="15" fill="rgb(215,193,15)"/><text x="70.0450%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap_GenerationalBarrierSlow (2 samples, 0.02%)</title><rect x="69.8052%" y="421" width="0.0204%" height="15" fill="rgb(232,15,44)"/><text x="70.0552%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::base::bits::RoundUpToPowerOfTwo32 (2 samples, 0.02%)</title><rect x="69.9684%" y="373" width="0.0204%" height="15" fill="rgb(212,3,48)"/><text x="70.2184%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::SetEntry (1 samples, 0.01%)</title><rect x="69.9888%" y="373" width="0.0102%" height="15" fill="rgb(218,128,7)"/><text x="70.2388%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRaw (1 samples, 0.01%)</title><rect x="69.9990%" y="357" width="0.0102%" height="15" fill="rgb(226,216,39)"/><text x="70.2490%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRaw (1 samples, 0.01%)</title><rect x="70.0194%" y="341" width="0.0102%" height="15" fill="rgb(243,47,51)"/><text x="70.2694%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (1 samples, 0.01%)</title><rect x="70.0296%" y="309" width="0.0102%" height="15" fill="rgb(241,183,40)"/><text x="70.2796%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::ConcurrentMarking::ClearMemoryChunkData (1 samples, 0.01%)</title><rect x="70.0500%" y="245" width="0.0102%" height="15" fill="rgb(231,217,32)"/><text x="70.3000%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::HandleScopeImplementer::Iterate (1 samples, 0.01%)</title><rect x="70.0602%" y="245" width="0.0102%" height="15" fill="rgb(229,61,38)"/><text x="70.3102%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (7 samples, 0.07%)</title><rect x="70.0092%" y="357" width="0.0714%" height="15" fill="rgb(225,210,5)"/><text x="70.2592%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.05%)</title><rect x="70.0296%" y="341" width="0.0510%" height="15" fill="rgb(231,79,45)"/><text x="70.2796%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.05%)</title><rect x="70.0296%" y="325" width="0.0510%" height="15" fill="rgb(224,100,7)"/><text x="70.2796%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (4 samples, 0.04%)</title><rect x="70.0398%" y="309" width="0.0408%" height="15" fill="rgb(241,198,18)"/><text x="70.2898%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.04%)</title><rect x="70.0398%" y="293" width="0.0408%" height="15" fill="rgb(252,97,53)"/><text x="70.2898%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (4 samples, 0.04%)</title><rect x="70.0398%" y="277" width="0.0408%" height="15" fill="rgb(220,88,7)"/><text x="70.2898%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (4 samples, 0.04%)</title><rect x="70.0398%" y="261" width="0.0408%" height="15" fill="rgb(213,176,14)"/><text x="70.2898%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobHandle::Join (1 samples, 0.01%)</title><rect x="70.0704%" y="245" width="0.0102%" height="15" fill="rgb(246,73,7)"/><text x="70.3204%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.01%)</title><rect x="70.0704%" y="229" width="0.0102%" height="15" fill="rgb(245,64,36)"/><text x="70.3204%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::base::ConditionVariable::~ConditionVariable (1 samples, 0.01%)</title><rect x="70.0704%" y="213" width="0.0102%" height="15" fill="rgb(245,80,10)"/><text x="70.3204%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.01%)</title><rect x="70.0704%" y="197" width="0.0102%" height="15" fill="rgb(232,107,50)"/><text x="70.3204%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::DeleteEntry(v8::internal::Isolate*, v8::internal::Handle (45 samples, 0.46%)</title><rect x="69.9276%" y="389" width="0.4590%" height="15" fill="rgb(253,3,0)"/><text x="70.1776%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Shrink(v8::internal::Isolate*, v8::internal::Handle (38 samples, 0.39%)</title><rect x="69.9990%" y="373" width="0.3876%" height="15" fill="rgb(212,99,53)"/><text x="70.2490%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Rehash (30 samples, 0.31%)</title><rect x="70.0806%" y="357" width="0.3060%" height="15" fill="rgb(249,111,54)"/><text x="70.3306%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::DeleteImpl(v8::internal::Handle (49 samples, 0.50%)</title><rect x="69.8970%" y="405" width="0.4998%" height="15" fill="rgb(249,55,30)"/><text x="70.1470%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::SetEntry (1 samples, 0.01%)</title><rect x="70.3866%" y="389" width="0.0102%" height="15" fill="rgb(237,47,42)"/><text x="70.6366%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::DeleteEntry(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="70.3968%" y="405" width="0.0102%" height="15" fill="rgb(211,20,18)"/><text x="70.6468%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSReceiver::DeleteProperty (79 samples, 0.81%)</title><rect x="69.7032%" y="437" width="0.8059%" height="15" fill="rgb(231,203,46)"/><text x="69.9532%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::Delete (67 samples, 0.68%)</title><rect x="69.8256%" y="421" width="0.6835%" height="15" fill="rgb(237,142,3)"/><text x="70.0756%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap_GenerationalBarrierSlow (10 samples, 0.10%)</title><rect x="70.4070%" y="405" width="0.1020%" height="15" fill="rgb(241,107,1)"/><text x="70.6570%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::Delete (2 samples, 0.02%)</title><rect x="70.5090%" y="437" width="0.0204%" height="15" fill="rgb(229,83,13)"/><text x="70.7590%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (3 samples, 0.03%)</title><rect x="70.5294%" y="437" width="0.0306%" height="15" fill="rgb(241,91,40)"/><text x="70.7794%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (2 samples, 0.02%)</title><rect x="70.5600%" y="437" width="0.0204%" height="15" fill="rgb(225,3,45)"/><text x="70.8100%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetDetails (1 samples, 0.01%)</title><rect x="70.6008%" y="421" width="0.0102%" height="15" fill="rgb(244,223,14)"/><text x="70.8508%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (5 samples, 0.05%)</title><rect x="70.6110%" y="421" width="0.0510%" height="15" fill="rgb(224,124,37)"/><text x="70.8610%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetDetails (1 samples, 0.01%)</title><rect x="70.7539%" y="405" width="0.0102%" height="15" fill="rgb(251,171,30)"/><text x="71.0039%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime::DeleteObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (114 samples, 1.16%)</title><rect x="69.6623%" y="453" width="1.1629%" height="15" fill="rgb(236,46,54)"/><text x="69.9123%" y="463.50"></text></g><g><title>deno_hyper_bin`void v8::internal::LookupIterator::Start&lt;true&gt; (24 samples, 0.24%)</title><rect x="70.5804%" y="437" width="0.2448%" height="15" fill="rgb(245,213,5)"/><text x="70.8304%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (16 samples, 0.16%)</title><rect x="70.6620%" y="421" width="0.1632%" height="15" fill="rgb(230,144,27)"/><text x="70.9120%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (6 samples, 0.06%)</title><rect x="70.7641%" y="405" width="0.0612%" height="15" fill="rgb(220,86,6)"/><text x="71.0141%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (127 samples, 1.30%)</title><rect x="69.5399%" y="485" width="1.2955%" height="15" fill="rgb(240,20,13)"/><text x="69.7899%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_DeleteProperty (126 samples, 1.29%)</title><rect x="69.5501%" y="469" width="1.2853%" height="15" fill="rgb(217,89,34)"/><text x="69.8001%" y="479.50"></text></g><g><title>deno_hyper_bin`void v8::internal::LookupIterator::Start&lt;true&gt; (1 samples, 0.01%)</title><rect x="70.8253%" y="453" width="0.0102%" height="15" fill="rgb(229,13,5)"/><text x="71.0753%" y="463.50"></text></g><g><title>0x1372000875f7 (129 samples, 1.32%)</title><rect x="69.5399%" y="501" width="1.3159%" height="15" fill="rgb(244,67,35)"/><text x="69.7899%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_DeleteProperty (2 samples, 0.02%)</title><rect x="70.8355%" y="485" width="0.0204%" height="15" fill="rgb(221,40,2)"/><text x="71.0855%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_CallFunction_ReceiverIsNotNullOrUndefined (6 samples, 0.06%)</title><rect x="70.8559%" y="501" width="0.0612%" height="15" fill="rgb(237,157,21)"/><text x="71.1059%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_Call_ReceiverIsNotNullOrUndefined (9 samples, 0.09%)</title><rect x="70.9171%" y="501" width="0.0918%" height="15" fill="rgb(222,94,11)"/><text x="71.1671%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeGetBigUint64 (1 samples, 0.01%)</title><rect x="71.0089%" y="501" width="0.0102%" height="15" fill="rgb(249,113,6)"/><text x="71.2589%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_DeleteProperty (3 samples, 0.03%)</title><rect x="71.0191%" y="501" width="0.0306%" height="15" fill="rgb(238,137,36)"/><text x="71.2691%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (2 samples, 0.02%)</title><rect x="71.0497%" y="501" width="0.0204%" height="15" fill="rgb(210,102,26)"/><text x="71.2997%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadIC (1 samples, 0.01%)</title><rect x="71.0701%" y="501" width="0.0102%" height="15" fill="rgb(218,30,30)"/><text x="71.3201%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadICTrampoline (7 samples, 0.07%)</title><rect x="71.0803%" y="501" width="0.0714%" height="15" fill="rgb(214,67,26)"/><text x="71.3303%" y="511.50"></text></g><g><title>0x137200089590 (361 samples, 3.68%)</title><rect x="67.5099%" y="517" width="3.6825%" height="15" fill="rgb(251,9,53)"/><text x="67.7599%" y="527.50">0x13..</text></g><g><title>deno_hyper_bin`Builtins_ToNumberConvertBigInt (4 samples, 0.04%)</title><rect x="71.1517%" y="501" width="0.0408%" height="15" fill="rgb(228,204,25)"/><text x="71.4017%" y="511.50"></text></g><g><title>0x13720008964f (1 samples, 0.01%)</title><rect x="71.1925%" y="517" width="0.0102%" height="15" fill="rgb(207,153,8)"/><text x="71.4425%" y="527.50"></text></g><g><title>0x137200089652 (1 samples, 0.01%)</title><rect x="71.2027%" y="517" width="0.0102%" height="15" fill="rgb(242,9,16)"/><text x="71.4527%" y="527.50"></text></g><g><title>0x137200089656 (1 samples, 0.01%)</title><rect x="71.2129%" y="517" width="0.0102%" height="15" fill="rgb(217,211,10)"/><text x="71.4629%" y="527.50"></text></g><g><title>0x1372000897e2 (1 samples, 0.01%)</title><rect x="71.2231%" y="517" width="0.0102%" height="15" fill="rgb(219,228,52)"/><text x="71.4731%" y="527.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="71.2231%" y="501" width="0.0102%" height="15" fill="rgb(231,92,29)"/><text x="71.4731%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.01%)</title><rect x="71.2231%" y="485" width="0.0102%" height="15" fill="rgb(232,8,23)"/><text x="71.4731%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (1 samples, 0.01%)</title><rect x="71.2231%" y="469" width="0.0102%" height="15" fill="rgb(216,211,34)"/><text x="71.4731%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.01%)</title><rect x="71.2231%" y="453" width="0.0102%" height="15" fill="rgb(236,151,0)"/><text x="71.4731%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (1 samples, 0.01%)</title><rect x="71.2231%" y="437" width="0.0102%" height="15" fill="rgb(209,168,3)"/><text x="71.4731%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (1 samples, 0.01%)</title><rect x="71.2231%" y="421" width="0.0102%" height="15" fill="rgb(208,129,28)"/><text x="71.4731%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (1 samples, 0.01%)</title><rect x="71.2231%" y="405" width="0.0102%" height="15" fill="rgb(229,78,22)"/><text x="71.4731%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (1 samples, 0.01%)</title><rect x="71.2231%" y="389" width="0.0102%" height="15" fill="rgb(228,187,13)"/><text x="71.4731%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.01%)</title><rect x="71.2231%" y="373" width="0.0102%" height="15" fill="rgb(240,119,24)"/><text x="71.4731%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobHandle::Join (1 samples, 0.01%)</title><rect x="71.2231%" y="357" width="0.0102%" height="15" fill="rgb(209,194,42)"/><text x="71.4731%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.01%)</title><rect x="71.2231%" y="341" width="0.0102%" height="15" fill="rgb(247,200,46)"/><text x="71.4731%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::base::ConditionVariable::~ConditionVariable (1 samples, 0.01%)</title><rect x="71.2231%" y="325" width="0.0102%" height="15" fill="rgb(218,76,16)"/><text x="71.4731%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.01%)</title><rect x="71.2231%" y="309" width="0.0102%" height="15" fill="rgb(225,21,48)"/><text x="71.4731%" y="319.50"></text></g><g><title>0x13720008981f (2 samples, 0.02%)</title><rect x="71.2333%" y="517" width="0.0204%" height="15" fill="rgb(239,223,50)"/><text x="71.4833%" y="527.50"></text></g><g><title>0x137200089827 (1 samples, 0.01%)</title><rect x="71.2537%" y="517" width="0.0102%" height="15" fill="rgb(244,45,21)"/><text x="71.5037%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (1 samples, 0.01%)</title><rect x="71.2639%" y="389" width="0.0102%" height="15" fill="rgb(232,33,43)"/><text x="71.5139%" y="399.50"></text></g><g><title>0x137200089842 (3 samples, 0.03%)</title><rect x="71.2639%" y="517" width="0.0306%" height="15" fill="rgb(209,8,3)"/><text x="71.5139%" y="527.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.03%)</title><rect x="71.2639%" y="501" width="0.0306%" height="15" fill="rgb(214,25,53)"/><text x="71.5139%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (3 samples, 0.03%)</title><rect x="71.2639%" y="485" width="0.0306%" height="15" fill="rgb(254,186,54)"/><text x="71.5139%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (3 samples, 0.03%)</title><rect x="71.2639%" y="469" width="0.0306%" height="15" fill="rgb(208,174,49)"/><text x="71.5139%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (3 samples, 0.03%)</title><rect x="71.2639%" y="453" width="0.0306%" height="15" fill="rgb(233,191,51)"/><text x="71.5139%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="71.2639%" y="437" width="0.0306%" height="15" fill="rgb(222,134,10)"/><text x="71.5139%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="71.2639%" y="421" width="0.0306%" height="15" fill="rgb(230,226,20)"/><text x="71.5139%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="71.2639%" y="405" width="0.0306%" height="15" fill="rgb(251,111,25)"/><text x="71.5139%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="71.2741%" y="389" width="0.0204%" height="15" fill="rgb(224,40,46)"/><text x="71.5241%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.02%)</title><rect x="71.2741%" y="373" width="0.0204%" height="15" fill="rgb(236,108,47)"/><text x="71.5241%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (1 samples, 0.01%)</title><rect x="71.2843%" y="357" width="0.0102%" height="15" fill="rgb(234,93,0)"/><text x="71.5343%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::SerializerDeserializer::Iterate (1 samples, 0.01%)</title><rect x="71.2843%" y="341" width="0.0102%" height="15" fill="rgb(224,213,32)"/><text x="71.5343%" y="351.50"></text></g><g><title>deno_hyper_bin`Builtins_CallProperty2Handler (1 samples, 0.01%)</title><rect x="71.2945%" y="517" width="0.0102%" height="15" fill="rgb(251,11,48)"/><text x="71.5445%" y="527.50"></text></g><g><title>0x137200084863 (1 samples, 0.01%)</title><rect x="71.3047%" y="501" width="0.0102%" height="15" fill="rgb(236,173,5)"/><text x="71.5547%" y="511.50"></text></g><g><title>0x137200084919 (1 samples, 0.01%)</title><rect x="71.3149%" y="501" width="0.0102%" height="15" fill="rgb(230,95,12)"/><text x="71.5649%" y="511.50"></text></g><g><title>0x137200084bd4 (2 samples, 0.02%)</title><rect x="71.3251%" y="501" width="0.0204%" height="15" fill="rgb(232,209,1)"/><text x="71.5751%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_TypedArrayPrototypeSubArray (2 samples, 0.02%)</title><rect x="71.3251%" y="485" width="0.0204%" height="15" fill="rgb(232,6,1)"/><text x="71.5751%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_CreateTypedArray (1 samples, 0.01%)</title><rect x="71.3353%" y="469" width="0.0102%" height="15" fill="rgb(210,224,50)"/><text x="71.5853%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="71.3455%" y="501" width="0.0102%" height="15" fill="rgb(228,127,35)"/><text x="71.5955%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (1 samples, 0.01%)</title><rect x="71.3455%" y="485" width="0.0102%" height="15" fill="rgb(245,102,45)"/><text x="71.5955%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.3455%" y="469" width="0.0102%" height="15" fill="rgb(214,1,49)"/><text x="71.5955%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.3455%" y="453" width="0.0102%" height="15" fill="rgb(226,163,40)"/><text x="71.5955%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.3455%" y="437" width="0.0102%" height="15" fill="rgb(239,212,28)"/><text x="71.5955%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (1 samples, 0.01%)</title><rect x="71.3455%" y="421" width="0.0102%" height="15" fill="rgb(220,20,13)"/><text x="71.5955%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (1 samples, 0.01%)</title><rect x="71.3455%" y="405" width="0.0102%" height="15" fill="rgb(210,164,35)"/><text x="71.5955%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (1 samples, 0.01%)</title><rect x="71.3455%" y="389" width="0.0102%" height="15" fill="rgb(248,109,41)"/><text x="71.5955%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (1 samples, 0.01%)</title><rect x="71.3455%" y="373" width="0.0102%" height="15" fill="rgb(238,23,50)"/><text x="71.5955%" y="383.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (1 samples, 0.01%)</title><rect x="71.3455%" y="357" width="0.0102%" height="15" fill="rgb(211,48,49)"/><text x="71.5955%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InliningPhase::Run (1 samples, 0.01%)</title><rect x="71.3455%" y="341" width="0.0102%" height="15" fill="rgb(223,36,21)"/><text x="71.5955%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.01%)</title><rect x="71.3455%" y="325" width="0.0102%" height="15" fill="rgb(207,123,46)"/><text x="71.5955%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.01%)</title><rect x="71.3455%" y="309" width="0.0102%" height="15" fill="rgb(240,218,32)"/><text x="71.5955%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.01%)</title><rect x="71.3455%" y="293" width="0.0102%" height="15" fill="rgb(252,5,43)"/><text x="71.5955%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSInliningHeuristic::Reduce (1 samples, 0.01%)</title><rect x="71.3455%" y="277" width="0.0102%" height="15" fill="rgb(252,84,19)"/><text x="71.5955%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSInliningHeuristic::CollectFunctions (1 samples, 0.01%)</title><rect x="71.3455%" y="261" width="0.0102%" height="15" fill="rgb(243,152,39)"/><text x="71.5955%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::(anonymous namespace)::CanConsiderForInlining (1 samples, 0.01%)</title><rect x="71.3455%" y="245" width="0.0102%" height="15" fill="rgb(234,160,15)"/><text x="71.5955%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::(anonymous namespace)::CanConsiderForInlining (1 samples, 0.01%)</title><rect x="71.3455%" y="229" width="0.0102%" height="15" fill="rgb(237,34,20)"/><text x="71.5955%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::SharedFunctionInfoRef::GetInlineability (1 samples, 0.01%)</title><rect x="71.3455%" y="213" width="0.0102%" height="15" fill="rgb(229,97,13)"/><text x="71.5955%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::SharedFunctionInfo::Inlineability v8::internal::SharedFunctionInfo::GetInlineability&lt;v8::internal::Isolate&gt; (1 samples, 0.01%)</title><rect x="71.3455%" y="197" width="0.0102%" height="15" fill="rgb(234,71,50)"/><text x="71.5955%" y="207.50"></text></g><g><title>0x1372000873b3 (2 samples, 0.02%)</title><rect x="71.3557%" y="485" width="0.0204%" height="15" fill="rgb(253,155,4)"/><text x="71.6057%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (2 samples, 0.02%)</title><rect x="71.3557%" y="469" width="0.0204%" height="15" fill="rgb(222,185,37)"/><text x="71.6057%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (2 samples, 0.02%)</title><rect x="71.3557%" y="453" width="0.0204%" height="15" fill="rgb(251,177,13)"/><text x="71.6057%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_DataViewConstructor (2 samples, 0.02%)</title><rect x="71.3557%" y="437" width="0.0204%" height="15" fill="rgb(250,179,40)"/><text x="71.6057%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::New(v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.3659%" y="421" width="0.0102%" height="15" fill="rgb(242,44,2)"/><text x="71.6159%" y="431.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (1 samples, 0.01%)</title><rect x="71.3761%" y="341" width="0.0102%" height="15" fill="rgb(216,177,13)"/><text x="71.6261%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphBuilderPhase::Run (1 samples, 0.01%)</title><rect x="71.3761%" y="325" width="0.0102%" height="15" fill="rgb(216,106,43)"/><text x="71.6261%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BuildGraphFromBytecode(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::SharedFunctionInfoRef const&amp;, v8::internal::compiler::FeedbackCellRef const&amp;, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, int, v8::internal::CodeKind, v8::base::Flags (1 samples, 0.01%)</title><rect x="71.3761%" y="309" width="0.0102%" height="15" fill="rgb(216,183,2)"/><text x="71.6261%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (1 samples, 0.01%)</title><rect x="71.3761%" y="293" width="0.0102%" height="15" fill="rgb(249,75,3)"/><text x="71.6261%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (1 samples, 0.01%)</title><rect x="71.3761%" y="277" width="0.0102%" height="15" fill="rgb(219,67,39)"/><text x="71.6261%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::VisitSingleBytecode (1 samples, 0.01%)</title><rect x="71.3761%" y="261" width="0.0102%" height="15" fill="rgb(253,228,2)"/><text x="71.6261%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::BuildCall (1 samples, 0.01%)</title><rect x="71.3761%" y="245" width="0.0102%" height="15" fill="rgb(235,138,27)"/><text x="71.6261%" y="255.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.02%)</title><rect x="71.3761%" y="485" width="0.0204%" height="15" fill="rgb(236,97,51)"/><text x="71.6261%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (2 samples, 0.02%)</title><rect x="71.3761%" y="469" width="0.0204%" height="15" fill="rgb(240,80,30)"/><text x="71.6261%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="71.3761%" y="453" width="0.0204%" height="15" fill="rgb(230,178,19)"/><text x="71.6261%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="71.3761%" y="437" width="0.0204%" height="15" fill="rgb(210,190,27)"/><text x="71.6261%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (2 samples, 0.02%)</title><rect x="71.3761%" y="421" width="0.0204%" height="15" fill="rgb(222,107,31)"/><text x="71.6261%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (2 samples, 0.02%)</title><rect x="71.3761%" y="405" width="0.0204%" height="15" fill="rgb(216,127,34)"/><text x="71.6261%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (2 samples, 0.02%)</title><rect x="71.3761%" y="389" width="0.0204%" height="15" fill="rgb(234,116,52)"/><text x="71.6261%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (2 samples, 0.02%)</title><rect x="71.3761%" y="373" width="0.0204%" height="15" fill="rgb(222,124,15)"/><text x="71.6261%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (2 samples, 0.02%)</title><rect x="71.3761%" y="357" width="0.0204%" height="15" fill="rgb(231,179,28)"/><text x="71.6261%" y="367.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (1 samples, 0.01%)</title><rect x="71.3863%" y="341" width="0.0102%" height="15" fill="rgb(226,93,45)"/><text x="71.6363%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InliningPhase::Run (1 samples, 0.01%)</title><rect x="71.3863%" y="325" width="0.0102%" height="15" fill="rgb(215,8,51)"/><text x="71.6363%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.01%)</title><rect x="71.3863%" y="309" width="0.0102%" height="15" fill="rgb(223,106,5)"/><text x="71.6363%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSInliningHeuristic::Finalize (1 samples, 0.01%)</title><rect x="71.3863%" y="293" width="0.0102%" height="15" fill="rgb(250,191,5)"/><text x="71.6363%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSInliningHeuristic::InlineCandidate (1 samples, 0.01%)</title><rect x="71.3863%" y="277" width="0.0102%" height="15" fill="rgb(242,132,44)"/><text x="71.6363%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSInliner::ReduceJSCall (1 samples, 0.01%)</title><rect x="71.3863%" y="261" width="0.0102%" height="15" fill="rgb(251,152,29)"/><text x="71.6363%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSInliner::InlineCall(v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::StartNode, v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::ZoneVector (1 samples, 0.01%)</title><rect x="71.3863%" y="245" width="0.0102%" height="15" fill="rgb(218,179,5)"/><text x="71.6363%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Graph::NewNode (1 samples, 0.01%)</title><rect x="71.3863%" y="229" width="0.0102%" height="15" fill="rgb(227,67,19)"/><text x="71.6363%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::SourcePositionTable::Decorator::Decorate (1 samples, 0.01%)</title><rect x="71.3863%" y="213" width="0.0102%" height="15" fill="rgb(233,119,31)"/><text x="71.6363%" y="223.50"></text></g><g><title>0x13720008421f (2 samples, 0.02%)</title><rect x="71.3965%" y="469" width="0.0204%" height="15" fill="rgb(241,120,22)"/><text x="71.6465%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (2 samples, 0.02%)</title><rect x="71.3965%" y="453" width="0.0204%" height="15" fill="rgb(224,102,30)"/><text x="71.6465%" y="463.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="71.4067%" y="437" width="0.0102%" height="15" fill="rgb(210,164,37)"/><text x="71.6567%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_DataViewConstructor (1 samples, 0.01%)</title><rect x="71.4067%" y="421" width="0.0102%" height="15" fill="rgb(226,191,16)"/><text x="71.6567%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4067%" y="405" width="0.0102%" height="15" fill="rgb(214,40,45)"/><text x="71.6567%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="71.4169%" y="469" width="0.0102%" height="15" fill="rgb(244,29,26)"/><text x="71.6669%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (1 samples, 0.01%)</title><rect x="71.4169%" y="453" width="0.0102%" height="15" fill="rgb(216,16,5)"/><text x="71.6669%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4169%" y="437" width="0.0102%" height="15" fill="rgb(249,76,35)"/><text x="71.6669%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4169%" y="421" width="0.0102%" height="15" fill="rgb(207,11,44)"/><text x="71.6669%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4169%" y="405" width="0.0102%" height="15" fill="rgb(228,190,49)"/><text x="71.6669%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (1 samples, 0.01%)</title><rect x="71.4169%" y="389" width="0.0102%" height="15" fill="rgb(214,173,12)"/><text x="71.6669%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (1 samples, 0.01%)</title><rect x="71.4169%" y="373" width="0.0102%" height="15" fill="rgb(218,26,35)"/><text x="71.6669%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (1 samples, 0.01%)</title><rect x="71.4169%" y="357" width="0.0102%" height="15" fill="rgb(220,200,19)"/><text x="71.6669%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (1 samples, 0.01%)</title><rect x="71.4169%" y="341" width="0.0102%" height="15" fill="rgb(239,95,49)"/><text x="71.6669%" y="351.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (1 samples, 0.01%)</title><rect x="71.4169%" y="325" width="0.0102%" height="15" fill="rgb(235,85,53)"/><text x="71.6669%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InliningPhase::Run (1 samples, 0.01%)</title><rect x="71.4169%" y="309" width="0.0102%" height="15" fill="rgb(233,133,31)"/><text x="71.6669%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.01%)</title><rect x="71.4169%" y="293" width="0.0102%" height="15" fill="rgb(218,25,20)"/><text x="71.6669%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.01%)</title><rect x="71.4169%" y="277" width="0.0102%" height="15" fill="rgb(252,210,38)"/><text x="71.6669%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.01%)</title><rect x="71.4169%" y="261" width="0.0102%" height="15" fill="rgb(242,134,21)"/><text x="71.6669%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSNativeContextSpecialization::ReduceJSLoadProperty (1 samples, 0.01%)</title><rect x="71.4169%" y="245" width="0.0102%" height="15" fill="rgb(213,28,48)"/><text x="71.6669%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSNativeContextSpecialization::ReduceElementAccess (1 samples, 0.01%)</title><rect x="71.4169%" y="229" width="0.0102%" height="15" fill="rgb(250,196,2)"/><text x="71.6669%" y="239.50"></text></g><g><title>deno_hyper_bin`Builtins_ConstructHandler (1 samples, 0.01%)</title><rect x="71.4271%" y="469" width="0.0102%" height="15" fill="rgb(227,5,17)"/><text x="71.6771%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_DeletePropertyStrictHandler (1 samples, 0.01%)</title><rect x="71.4373%" y="469" width="0.0102%" height="15" fill="rgb(221,226,24)"/><text x="71.6873%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="71.4373%" y="453" width="0.0102%" height="15" fill="rgb(211,5,48)"/><text x="71.6873%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_DeleteProperty (1 samples, 0.01%)</title><rect x="71.4373%" y="437" width="0.0102%" height="15" fill="rgb(219,150,6)"/><text x="71.6873%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime::DeleteObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4373%" y="421" width="0.0102%" height="15" fill="rgb(251,46,16)"/><text x="71.6873%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSReceiver::DeleteProperty (1 samples, 0.01%)</title><rect x="71.4373%" y="405" width="0.0102%" height="15" fill="rgb(220,204,40)"/><text x="71.6873%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::Delete (1 samples, 0.01%)</title><rect x="71.4373%" y="389" width="0.0102%" height="15" fill="rgb(211,85,2)"/><text x="71.6873%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::DeleteImpl(v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4373%" y="373" width="0.0102%" height="15" fill="rgb(229,17,7)"/><text x="71.6873%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::DeleteEntry(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4373%" y="357" width="0.0102%" height="15" fill="rgb(239,72,28)"/><text x="71.6873%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Shrink(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="71.4373%" y="341" width="0.0102%" height="15" fill="rgb(230,47,54)"/><text x="71.6873%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Rehash (1 samples, 0.01%)</title><rect x="71.4373%" y="325" width="0.0102%" height="15" fill="rgb(214,50,8)"/><text x="71.6873%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (7 samples, 0.07%)</title><rect x="71.3965%" y="485" width="0.0714%" height="15" fill="rgb(216,198,43)"/><text x="71.6465%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (2 samples, 0.02%)</title><rect x="71.4475%" y="469" width="0.0204%" height="15" fill="rgb(234,20,35)"/><text x="71.6975%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_ConstructHandler (1 samples, 0.01%)</title><rect x="71.4577%" y="453" width="0.0102%" height="15" fill="rgb(254,45,19)"/><text x="71.7077%" y="463.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (1 samples, 0.01%)</title><rect x="71.4577%" y="437" width="0.0102%" height="15" fill="rgb(219,14,44)"/><text x="71.7077%" y="447.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="71.4577%" y="421" width="0.0102%" height="15" fill="rgb(217,220,26)"/><text x="71.7077%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_DataViewConstructor (1 samples, 0.01%)</title><rect x="71.4577%" y="405" width="0.0102%" height="15" fill="rgb(213,158,28)"/><text x="71.7077%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_JumpIfJSReceiverHandler (1 samples, 0.01%)</title><rect x="71.4679%" y="485" width="0.0102%" height="15" fill="rgb(252,51,52)"/><text x="71.7179%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadICTrampoline (1 samples, 0.01%)</title><rect x="71.4781%" y="485" width="0.0102%" height="15" fill="rgb(246,89,16)"/><text x="71.7281%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (14 samples, 0.14%)</title><rect x="71.3557%" y="501" width="0.1428%" height="15" fill="rgb(216,158,49)"/><text x="71.6057%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_LdaNamedPropertyHandler (1 samples, 0.01%)</title><rect x="71.4883%" y="485" width="0.0102%" height="15" fill="rgb(236,107,19)"/><text x="71.7383%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_LdaKeyedPropertyHandler (2 samples, 0.02%)</title><rect x="71.4985%" y="501" width="0.0204%" height="15" fill="rgb(228,185,30)"/><text x="71.7485%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadIC (1 samples, 0.01%)</title><rect x="71.5087%" y="485" width="0.0102%" height="15" fill="rgb(246,134,8)"/><text x="71.7587%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (22 samples, 0.22%)</title><rect x="71.3047%" y="517" width="0.2244%" height="15" fill="rgb(214,143,50)"/><text x="71.5547%" y="527.50"></text></g><g><title>deno_hyper_bin`Builtins_TypedArrayPrototypeSubArray (1 samples, 0.01%)</title><rect x="71.5189%" y="501" width="0.0102%" height="15" fill="rgb(228,75,8)"/><text x="71.7689%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_TestUndetectableHandler (1 samples, 0.01%)</title><rect x="71.5291%" y="517" width="0.0102%" height="15" fill="rgb(207,175,4)"/><text x="71.7791%" y="527.50"></text></g><g><title>deno_hyper_bin`Builtins_JSEntry (491 samples, 5.01%)</title><rect x="66.5613%" y="549" width="5.0087%" height="15" fill="rgb(205,108,24)"/><text x="66.8113%" y="559.50">deno_h..</text></g><g><title>deno_hyper_bin`Builtins_JSEntryTrampoline (480 samples, 4.90%)</title><rect x="66.6735%" y="533" width="4.8965%" height="15" fill="rgb(244,120,49)"/><text x="66.9235%" y="543.50">deno_h..</text></g><g><title>deno_hyper_bin`Builtins_TypedArrayPrototypeSubArray (3 samples, 0.03%)</title><rect x="71.5393%" y="517" width="0.0306%" height="15" fill="rgb(223,47,38)"/><text x="71.7893%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::EmbeddedData::InstructionStartOfBuiltin (1 samples, 0.01%)</title><rect x="71.5699%" y="533" width="0.0102%" height="15" fill="rgb(229,179,11)"/><text x="71.8199%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::CurrentEmbeddedBlobCode (1 samples, 0.01%)</title><rect x="71.5801%" y="533" width="0.0102%" height="15" fill="rgb(231,122,1)"/><text x="71.8301%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::Code::OffHeapInstructionStart (4 samples, 0.04%)</title><rect x="71.5699%" y="549" width="0.0408%" height="15" fill="rgb(245,119,9)"/><text x="71.8199%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::CurrentEmbeddedBlobCodeSize (2 samples, 0.02%)</title><rect x="71.5903%" y="533" width="0.0204%" height="15" fill="rgb(241,163,25)"/><text x="71.8403%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::EmbeddedData::InstructionStartOfBuiltin (3 samples, 0.03%)</title><rect x="71.6107%" y="549" width="0.0306%" height="15" fill="rgb(217,214,3)"/><text x="71.8607%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (511 samples, 5.21%)</title><rect x="66.4388%" y="565" width="5.2127%" height="15" fill="rgb(240,86,28)"/><text x="66.6888%" y="575.50">deno_h..</text></g><g><title>deno_hyper_bin`v8::internal::PerIsolateAssertScope&lt;(v8::internal::PerIsolateAssertType)0, true&gt;::IsAllowed (1 samples, 0.01%)</title><rect x="71.6413%" y="549" width="0.0102%" height="15" fill="rgb(215,47,9)"/><text x="71.8913%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtins::builtin_handle (1 samples, 0.01%)</title><rect x="71.6515%" y="565" width="0.0102%" height="15" fill="rgb(252,25,45)"/><text x="71.9015%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::Code::OffHeapInstructionStart (3 samples, 0.03%)</title><rect x="71.6617%" y="565" width="0.0306%" height="15" fill="rgb(251,164,9)"/><text x="71.9117%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::builtin_address (2 samples, 0.02%)</title><rect x="71.6923%" y="565" width="0.0204%" height="15" fill="rgb(233,194,0)"/><text x="71.9423%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::PerIsolateAssertScope&lt;(v8::internal::PerIsolateAssertType)0, true&gt;::IsAllowed (1 samples, 0.01%)</title><rect x="71.7127%" y="565" width="0.0102%" height="15" fill="rgb(249,111,24)"/><text x="71.9627%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::PerIsolateAssertScope&lt;(v8::internal::PerIsolateAssertType)2, false&gt;::IsAllowed (1 samples, 0.01%)</title><rect x="71.7229%" y="565" width="0.0102%" height="15" fill="rgb(250,223,3)"/><text x="71.9729%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::SaveContext::SaveContext (4 samples, 0.04%)</title><rect x="71.7331%" y="565" width="0.0408%" height="15" fill="rgb(236,178,37)"/><text x="71.9831%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (527 samples, 5.38%)</title><rect x="66.4082%" y="581" width="5.3759%" height="15" fill="rgb(241,158,50)"/><text x="66.6582%" y="591.50">deno_hy..</text></g><g><title>deno_hyper_bin`v8::internal::SaveContext::~SaveContext (1 samples, 0.01%)</title><rect x="71.7739%" y="565" width="0.0102%" height="15" fill="rgb(213,121,41)"/><text x="72.0239%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::ClearKeptObjects (7 samples, 0.07%)</title><rect x="71.7841%" y="581" width="0.0714%" height="15" fill="rgb(240,92,3)"/><text x="72.0341%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::InterruptsScope::InterruptsScope (1 samples, 0.01%)</title><rect x="71.8556%" y="581" width="0.0102%" height="15" fill="rgb(205,123,3)"/><text x="72.1056%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::ClearKeptObjects (1 samples, 0.01%)</title><rect x="71.8658%" y="581" width="0.0102%" height="15" fill="rgb(205,97,47)"/><text x="72.1158%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*, v8::internal::MaybeHandle (1 samples, 0.01%)</title><rect x="71.9270%" y="549" width="0.0102%" height="15" fill="rgb(247,152,14)"/><text x="72.1770%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::TryCatch::TryCatch (1 samples, 0.01%)</title><rect x="72.0086%" y="517" width="0.0102%" height="15" fill="rgb(248,195,53)"/><text x="72.2586%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::TryCatch::~TryCatch (1 samples, 0.01%)</title><rect x="72.0188%" y="517" width="0.0102%" height="15" fill="rgb(226,201,16)"/><text x="72.2688%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::TryCatch::SetCaptureMessage (1 samples, 0.01%)</title><rect x="72.0290%" y="501" width="0.0102%" height="15" fill="rgb(205,98,0)"/><text x="72.2790%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_PromiseFulfillReactionJob (1 samples, 0.01%)</title><rect x="72.1004%" y="469" width="0.0102%" height="15" fill="rgb(214,191,48)"/><text x="72.3504%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_CallFunction_ReceiverIsNullOrUndefined (2 samples, 0.02%)</title><rect x="72.3554%" y="453" width="0.0204%" height="15" fill="rgb(237,112,39)"/><text x="72.6054%" y="463.50"></text></g><g><title>deno_hyper_bin`Builtins_Call_ReceiverIsNullOrUndefined (1 samples, 0.01%)</title><rect x="72.3758%" y="453" width="0.0102%" height="15" fill="rgb(247,203,27)"/><text x="72.6258%" y="463.50"></text></g><g><title>0x13720008798a (3 samples, 0.03%)</title><rect x="72.5186%" y="437" width="0.0306%" height="15" fill="rgb(235,124,28)"/><text x="72.7686%" y="447.50"></text></g><g><title>0x1372000854a0 (2 samples, 0.02%)</title><rect x="72.5696%" y="421" width="0.0204%" height="15" fill="rgb(208,207,46)"/><text x="72.8196%" y="431.50"></text></g><g><title>0x1372000854a3 (3 samples, 0.03%)</title><rect x="72.5900%" y="421" width="0.0306%" height="15" fill="rgb(234,176,4)"/><text x="72.8400%" y="431.50"></text></g><g><title>0x1372000854aa (2 samples, 0.02%)</title><rect x="72.6206%" y="421" width="0.0204%" height="15" fill="rgb(230,133,28)"/><text x="72.8706%" y="431.50"></text></g><g><title>0x1372000860a0 (1 samples, 0.01%)</title><rect x="72.6410%" y="421" width="0.0102%" height="15" fill="rgb(211,137,40)"/><text x="72.8910%" y="431.50"></text></g><g><title>0x137200087b40 (1 samples, 0.01%)</title><rect x="72.6512%" y="421" width="0.0102%" height="15" fill="rgb(254,35,13)"/><text x="72.9012%" y="431.50"></text></g><g><title>0x137200087b46 (2 samples, 0.02%)</title><rect x="72.6614%" y="421" width="0.0204%" height="15" fill="rgb(225,49,51)"/><text x="72.9114%" y="431.50"></text></g><g><title>0x137200087b73 (1 samples, 0.01%)</title><rect x="72.6818%" y="421" width="0.0102%" height="15" fill="rgb(251,10,15)"/><text x="72.9318%" y="431.50"></text></g><g><title>0x137200087c0b (1 samples, 0.01%)</title><rect x="72.6920%" y="421" width="0.0102%" height="15" fill="rgb(228,207,15)"/><text x="72.9420%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadIC (1 samples, 0.01%)</title><rect x="72.6920%" y="405" width="0.0102%" height="15" fill="rgb(241,99,19)"/><text x="72.9420%" y="415.50"></text></g><g><title>0x137200087c30 (1 samples, 0.01%)</title><rect x="72.7022%" y="421" width="0.0102%" height="15" fill="rgb(207,104,49)"/><text x="72.9522%" y="431.50"></text></g><g><title>0x137200087c75 (1 samples, 0.01%)</title><rect x="72.7124%" y="421" width="0.0102%" height="15" fill="rgb(234,99,18)"/><text x="72.9624%" y="431.50"></text></g><g><title>0x137200087c92 (1 samples, 0.01%)</title><rect x="72.7226%" y="421" width="0.0102%" height="15" fill="rgb(213,191,49)"/><text x="72.9726%" y="431.50"></text></g><g><title>0x137200085537 (1 samples, 0.01%)</title><rect x="72.7736%" y="405" width="0.0102%" height="15" fill="rgb(210,226,19)"/><text x="73.0236%" y="415.50"></text></g><g><title>0x13720008555d (6 samples, 0.06%)</title><rect x="72.7838%" y="405" width="0.0612%" height="15" fill="rgb(229,97,18)"/><text x="73.0338%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadIC (4 samples, 0.04%)</title><rect x="72.8042%" y="389" width="0.0408%" height="15" fill="rgb(211,167,15)"/><text x="73.0542%" y="399.50"></text></g><g><title>0x13720008560c (1 samples, 0.01%)</title><rect x="72.8450%" y="405" width="0.0102%" height="15" fill="rgb(210,169,34)"/><text x="73.0950%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::BigInt::FromNumber(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="72.8859%" y="373" width="0.0306%" height="15" fill="rgb(241,121,31)"/><text x="73.1359%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::BigInt::FromNumber(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="72.9471%" y="357" width="0.0102%" height="15" fill="rgb(232,40,11)"/><text x="73.1971%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRaw (3 samples, 0.03%)</title><rect x="72.9777%" y="341" width="0.0306%" height="15" fill="rgb(205,86,26)"/><text x="73.2277%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRaw (3 samples, 0.03%)</title><rect x="73.0185%" y="325" width="0.0306%" height="15" fill="rgb(231,126,28)"/><text x="73.2685%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::MaxRegularHeapObjectSize (1 samples, 0.01%)</title><rect x="73.0389%" y="309" width="0.0102%" height="15" fill="rgb(219,221,18)"/><text x="73.2889%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (1 samples, 0.01%)</title><rect x="73.0491%" y="325" width="0.0102%" height="15" fill="rgb(211,40,0)"/><text x="73.2991%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (1 samples, 0.01%)</title><rect x="73.1103%" y="309" width="0.0102%" height="15" fill="rgb(239,85,43)"/><text x="73.3603%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (2 samples, 0.02%)</title><rect x="73.1205%" y="293" width="0.0204%" height="15" fill="rgb(231,55,21)"/><text x="73.3705%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewBigInt (14 samples, 0.14%)</title><rect x="73.0083%" y="341" width="0.1428%" height="15" fill="rgb(225,184,43)"/><text x="73.2583%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (9 samples, 0.09%)</title><rect x="73.0593%" y="325" width="0.0918%" height="15" fill="rgb(251,158,41)"/><text x="73.3093%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="73.1205%" y="309" width="0.0306%" height="15" fill="rgb(234,159,37)"/><text x="73.3705%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (1 samples, 0.01%)</title><rect x="73.1409%" y="293" width="0.0102%" height="15" fill="rgb(216,204,22)"/><text x="73.3909%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (1 samples, 0.01%)</title><rect x="73.1409%" y="277" width="0.0102%" height="15" fill="rgb(214,17,3)"/><text x="73.3909%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (1 samples, 0.01%)</title><rect x="73.1409%" y="261" width="0.0102%" height="15" fill="rgb(212,111,17)"/><text x="73.3909%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.01%)</title><rect x="73.1409%" y="245" width="0.0102%" height="15" fill="rgb(221,157,24)"/><text x="73.3909%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::RequestSweep (1 samples, 0.01%)</title><rect x="73.1409%" y="229" width="0.0102%" height="15" fill="rgb(252,16,13)"/><text x="73.3909%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::MakeCancelableTask(v8::internal::Isolate*, std::__1::function&lt;void  (1 samples, 0.01%)</title><rect x="73.1409%" y="213" width="0.0102%" height="15" fill="rgb(221,62,2)"/><text x="73.3909%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="73.1409%" y="197" width="0.0102%" height="15" fill="rgb(247,87,22)"/><text x="73.3909%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_BigIntConstructor (24 samples, 0.24%)</title><rect x="72.9165%" y="373" width="0.2448%" height="15" fill="rgb(215,73,9)"/><text x="73.1665%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Handle&lt;v8::internal::BigInt&gt; v8::internal::MutableBigInt::Zero&lt;v8::internal::Isolate&gt; (20 samples, 0.20%)</title><rect x="72.9573%" y="357" width="0.2040%" height="15" fill="rgb(207,175,33)"/><text x="73.2073%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.01%)</title><rect x="73.1511%" y="341" width="0.0102%" height="15" fill="rgb(243,129,54)"/><text x="73.4011%" y="351.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (30 samples, 0.31%)</title><rect x="72.8654%" y="389" width="0.3060%" height="15" fill="rgb(227,119,45)"/><text x="73.1154%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Handle&lt;v8::internal::BigInt&gt; v8::internal::MutableBigInt::Zero&lt;v8::internal::Isolate&gt; (1 samples, 0.01%)</title><rect x="73.1613%" y="373" width="0.0102%" height="15" fill="rgb(205,109,36)"/><text x="73.4113%" y="383.50"></text></g><g><title>0x137200085643 (32 samples, 0.33%)</title><rect x="72.8552%" y="405" width="0.3264%" height="15" fill="rgb(205,6,39)"/><text x="73.1052%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_BigIntConstructor (1 samples, 0.01%)</title><rect x="73.1715%" y="389" width="0.0102%" height="15" fill="rgb(221,32,16)"/><text x="73.4215%" y="399.50"></text></g><g><title>0x137200085650 (1 samples, 0.01%)</title><rect x="73.1817%" y="405" width="0.0102%" height="15" fill="rgb(228,144,50)"/><text x="73.4317%" y="415.50"></text></g><g><title>0x137200085687 (10 samples, 0.10%)</title><rect x="73.1919%" y="405" width="0.1020%" height="15" fill="rgb(229,201,53)"/><text x="73.4419%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeSetBigUint64 (10 samples, 0.10%)</title><rect x="73.1919%" y="389" width="0.1020%" height="15" fill="rgb(249,153,27)"/><text x="73.4419%" y="399.50"></text></g><g><title>0x1372000856c0 (2 samples, 0.02%)</title><rect x="73.2939%" y="405" width="0.0204%" height="15" fill="rgb(227,106,25)"/><text x="73.5439%" y="415.50"></text></g><g><title>0x1372000856c7 (2 samples, 0.02%)</title><rect x="73.3143%" y="405" width="0.0204%" height="15" fill="rgb(230,65,29)"/><text x="73.5643%" y="415.50"></text></g><g><title>0x137200085731 (1 samples, 0.01%)</title><rect x="73.3347%" y="405" width="0.0102%" height="15" fill="rgb(221,57,46)"/><text x="73.5847%" y="415.50"></text></g><g><title>0x137200085743 (1 samples, 0.01%)</title><rect x="73.3449%" y="405" width="0.0102%" height="15" fill="rgb(229,161,17)"/><text x="73.5949%" y="415.50"></text></g><g><title>0x137200085763 (1 samples, 0.01%)</title><rect x="73.3551%" y="405" width="0.0102%" height="15" fill="rgb(222,213,11)"/><text x="73.6051%" y="415.50"></text></g><g><title>0x1372000857f6 (1 samples, 0.01%)</title><rect x="73.3653%" y="405" width="0.0102%" height="15" fill="rgb(235,35,13)"/><text x="73.6153%" y="415.50"></text></g><g><title>0x1372000857f9 (2 samples, 0.02%)</title><rect x="73.3755%" y="405" width="0.0204%" height="15" fill="rgb(233,158,34)"/><text x="73.6255%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::FunctionCallbackArguments::Call (1 samples, 0.01%)</title><rect x="73.5795%" y="357" width="0.0102%" height="15" fill="rgb(215,151,48)"/><text x="73.8295%" y="367.50"></text></g><g><title>deno_hyper_bin`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2 samples, 0.02%)</title><rect x="73.6713%" y="341" width="0.0204%" height="15" fill="rgb(229,84,14)"/><text x="73.9213%" y="351.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.8855%" y="309" width="0.0102%" height="15" fill="rgb(229,68,14)"/><text x="74.1355%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::scope::HandleScope&lt;()&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="73.8957%" y="309" width="0.0102%" height="15" fill="rgb(243,106,26)"/><text x="74.1457%" y="319.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="73.9059%" y="309" width="0.0102%" height="15" fill="rgb(206,45,38)"/><text x="74.1559%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.01%)</title><rect x="74.1610%" y="293" width="0.0102%" height="15" fill="rgb(226,6,15)"/><text x="74.4110%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.1712%" y="293" width="0.0102%" height="15" fill="rgb(232,22,54)"/><text x="74.4212%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="74.1814%" y="293" width="0.0102%" height="15" fill="rgb(229,222,32)"/><text x="74.4314%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalBackingStoreRegistry::Register(std::__1::shared_ptr (3 samples, 0.03%)</title><rect x="74.3650%" y="229" width="0.0306%" height="15" fill="rgb(228,62,29)"/><text x="74.6150%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::GetBackingStore (12 samples, 0.12%)</title><rect x="74.3956%" y="229" width="0.1224%" height="15" fill="rgb(251,103,34)"/><text x="74.6456%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (8 samples, 0.08%)</title><rect x="74.5180%" y="229" width="0.0816%" height="15" fill="rgb(233,12,30)"/><text x="74.7680%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBuffer::GetBackingStore (34 samples, 0.35%)</title><rect x="74.2630%" y="245" width="0.3468%" height="15" fill="rgb(238,52,0)"/><text x="74.5130%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="74.5996%" y="229" width="0.0102%" height="15" fill="rgb(223,98,5)"/><text x="74.8496%" y="239.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::get_backing_store (37 samples, 0.38%)</title><rect x="74.2630%" y="261" width="0.3774%" height="15" fill="rgb(228,75,37)"/><text x="74.5130%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::GetBackingStore (3 samples, 0.03%)</title><rect x="74.6098%" y="245" width="0.0306%" height="15" fill="rgb(205,115,49)"/><text x="74.8598%" y="255.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::ArrayBufferView&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="74.6404%" y="261" width="0.0102%" height="15" fill="rgb(250,154,43)"/><text x="74.8904%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::Value::IsArrayBufferView (1 samples, 0.01%)</title><rect x="74.6404%" y="245" width="0.0102%" height="15" fill="rgb(226,43,29)"/><text x="74.8904%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBufferView::Buffer (1 samples, 0.01%)</title><rect x="74.6506%" y="261" width="0.0102%" height="15" fill="rgb(249,228,39)"/><text x="74.9006%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBufferView::ByteOffset (1 samples, 0.01%)</title><rect x="74.6608%" y="261" width="0.0102%" height="15" fill="rgb(216,79,43)"/><text x="74.9108%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::Value::IsArrayBufferView (3 samples, 0.03%)</title><rect x="74.6710%" y="261" width="0.0306%" height="15" fill="rgb(228,95,12)"/><text x="74.9210%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.48%)</title><rect x="74.2324%" y="277" width="0.4794%" height="15" fill="rgb(249,221,15)"/><text x="74.4824%" y="287.50"></text></g><g><title>deno_hyper_bin`v8__Value__IsArrayBufferView (1 samples, 0.01%)</title><rect x="74.7016%" y="261" width="0.0102%" height="15" fill="rgb(233,34,13)"/><text x="74.9516%" y="271.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer_view::_&lt;impl rusty_v8::data::ArrayBufferView&gt;::buffer (1 samples, 0.01%)</title><rect x="74.7118%" y="277" width="0.0102%" height="15" fill="rgb(214,103,39)"/><text x="74.9618%" y="287.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::FunctionCallbackArguments::get (1 samples, 0.01%)</title><rect x="74.7220%" y="277" width="0.0102%" height="15" fill="rgb(251,126,39)"/><text x="74.9720%" y="287.50"></text></g><g><title>deno_hyper_bin`smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.01%)</title><rect x="74.7322%" y="277" width="0.0102%" height="15" fill="rgb(214,216,36)"/><text x="74.9822%" y="287.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (55 samples, 0.56%)</title><rect x="74.1916%" y="293" width="0.5611%" height="15" fill="rgb(220,221,8)"/><text x="74.4416%" y="303.50"></text></g><g><title>deno_hyper_bin`v8__ArrayBufferView__ByteLength (1 samples, 0.01%)</title><rect x="74.7424%" y="277" width="0.0102%" height="15" fill="rgb(240,216,3)"/><text x="74.9924%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="74.8138%" y="197" width="0.0204%" height="15" fill="rgb(232,218,17)"/><text x="75.0638%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.02%)</title><rect x="74.9566%" y="165" width="0.0204%" height="15" fill="rgb(229,163,45)"/><text x="75.2066%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="74.9770%" y="165" width="0.0102%" height="15" fill="rgb(231,110,42)"/><text x="75.2270%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="74.9872%" y="165" width="0.0102%" height="15" fill="rgb(208,170,48)"/><text x="75.2372%" y="175.50"></text></g><g><title>deno_hyper_bin`operator new(unsigned long) (23 samples, 0.23%)</title><rect x="74.7934%" y="245" width="0.2346%" height="15" fill="rgb(239,116,25)"/><text x="75.0434%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.22%)</title><rect x="74.8036%" y="229" width="0.2244%" height="15" fill="rgb(219,200,50)"/><text x="75.0536%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (21 samples, 0.21%)</title><rect x="74.8138%" y="213" width="0.2142%" height="15" fill="rgb(245,200,0)"/><text x="75.0638%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.19%)</title><rect x="74.8342%" y="197" width="0.1938%" height="15" fill="rgb(245,119,33)"/><text x="75.0842%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.18%)</title><rect x="74.8444%" y="181" width="0.1836%" height="15" fill="rgb(231,125,12)"/><text x="75.0944%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="74.9974%" y="165" width="0.0306%" height="15" fill="rgb(216,96,41)"/><text x="75.2474%" y="175.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::from_unique_ptr (25 samples, 0.26%)</title><rect x="74.7832%" y="277" width="0.2550%" height="15" fill="rgb(248,43,45)"/><text x="75.0332%" y="287.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__CONVERT__std__unique_ptr (25 samples, 0.26%)</title><rect x="74.7832%" y="261" width="0.2550%" height="15" fill="rgb(217,222,7)"/><text x="75.0332%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="75.0281%" y="245" width="0.0102%" height="15" fill="rgb(233,28,6)"/><text x="75.2781%" y="255.50"></text></g><g><title>deno_hyper_bin`operator new(unsigned long) (4 samples, 0.04%)</title><rect x="75.0383%" y="261" width="0.0408%" height="15" fill="rgb(231,218,15)"/><text x="75.2883%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="75.1199%" y="213" width="0.0102%" height="15" fill="rgb(226,171,48)"/><text x="75.3699%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="75.1403%" y="197" width="0.0204%" height="15" fill="rgb(235,201,9)"/><text x="75.3903%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.03%)</title><rect x="75.3239%" y="165" width="0.0306%" height="15" fill="rgb(217,80,15)"/><text x="75.5739%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="75.3545%" y="165" width="0.0102%" height="15" fill="rgb(219,152,8)"/><text x="75.6045%" y="175.50"></text></g><g><title>deno_hyper_bin`operator new(unsigned long) (33 samples, 0.34%)</title><rect x="75.0995%" y="245" width="0.3366%" height="15" fill="rgb(243,107,38)"/><text x="75.3495%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (32 samples, 0.33%)</title><rect x="75.1097%" y="229" width="0.3264%" height="15" fill="rgb(231,17,5)"/><text x="75.3597%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (30 samples, 0.31%)</title><rect x="75.1301%" y="213" width="0.3060%" height="15" fill="rgb(209,25,54)"/><text x="75.3801%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.28%)</title><rect x="75.1607%" y="197" width="0.2754%" height="15" fill="rgb(219,0,2)"/><text x="75.4107%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.27%)</title><rect x="75.1709%" y="181" width="0.2652%" height="15" fill="rgb(246,9,5)"/><text x="75.4209%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="75.3647%" y="165" width="0.0714%" height="15" fill="rgb(226,159,4)"/><text x="75.6147%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="75.3953%" y="149" width="0.0408%" height="15" fill="rgb(219,175,34)"/><text x="75.6453%" y="159.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::new_backing_store_from_boxed_slice (40 samples, 0.41%)</title><rect x="75.0383%" y="277" width="0.4080%" height="15" fill="rgb(236,10,46)"/><text x="75.2883%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::BackingStore::WrapAllocation(void*, unsigned long, void (*) (36 samples, 0.37%)</title><rect x="75.0791%" y="261" width="0.3672%" height="15" fill="rgb(240,211,16)"/><text x="75.3291%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="75.4361%" y="245" width="0.0102%" height="15" fill="rgb(205,3,43)"/><text x="75.6861%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="75.5687%" y="245" width="0.0102%" height="15" fill="rgb(245,7,22)"/><text x="75.8187%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="75.5789%" y="245" width="0.0102%" height="15" fill="rgb(239,132,32)"/><text x="75.8289%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::Append (2 samples, 0.02%)</title><rect x="75.6503%" y="229" width="0.0204%" height="15" fill="rgb(228,202,34)"/><text x="75.9003%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (4 samples, 0.04%)</title><rect x="75.7625%" y="181" width="0.0408%" height="15" fill="rgb(254,200,22)"/><text x="76.0125%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::ClearYoungEphemerons(v8::internal::Worklist (1 samples, 0.01%)</title><rect x="75.8033%" y="133" width="0.0102%" height="15" fill="rgb(219,10,39)"/><text x="76.0533%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::RequestSweep (1 samples, 0.01%)</title><rect x="75.8135%" y="117" width="0.0102%" height="15" fill="rgb(226,210,39)"/><text x="76.0635%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultWorkerThreadsTaskRunner::PostTask(std::__1::unique_ptr&lt;v8::Task, std::__1::default_delete (1 samples, 0.01%)</title><rect x="75.8135%" y="101" width="0.0102%" height="15" fill="rgb(208,219,16)"/><text x="76.0635%" y="111.50"></text></g><g><title>deno_hyper_bin`v8::platform::DelayedTaskQueue::Append(std::__1::unique_ptr&lt;v8::Task, std::__1::default_delete (1 samples, 0.01%)</title><rect x="75.8135%" y="85" width="0.0102%" height="15" fill="rgb(216,158,51)"/><text x="76.0635%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.01%)</title><rect x="75.8135%" y="69" width="0.0102%" height="15" fill="rgb(233,14,44)"/><text x="76.0635%" y="79.50"></text></g><g><title>deno_hyper_bin`v8::internal::Scavenger::Scavenger(v8::internal::ScavengerCollector*, v8::internal::Heap*, bool, v8::internal::Worklist&lt;v8::internal::MemoryChunk*, 64&gt;*, v8::internal::Worklist&lt;std::__1::pair&lt;v8::internal::HeapObject, int&gt;, 256&gt;*, v8::internal::Scavenger::PromotionList*, v8::internal::Worklist (1 samples, 0.01%)</title><rect x="75.8237%" y="117" width="0.0102%" height="15" fill="rgb(237,97,39)"/><text x="76.0737%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::internal::FreeList::CreateFreeList (1 samples, 0.01%)</title><rect x="75.8237%" y="101" width="0.0102%" height="15" fill="rgb(218,198,43)"/><text x="76.0737%" y="111.50"></text></g><g><title>deno_hyper_bin`v8::internal::FreeListManyCached::FreeListManyCached (1 samples, 0.01%)</title><rect x="75.8237%" y="85" width="0.0102%" height="15" fill="rgb(231,104,20)"/><text x="76.0737%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="75.8237%" y="69" width="0.0102%" height="15" fill="rgb(254,36,13)"/><text x="76.0737%" y="79.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (18 samples, 0.18%)</title><rect x="75.6707%" y="229" width="0.1836%" height="15" fill="rgb(248,14,50)"/><text x="75.9207%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (9 samples, 0.09%)</title><rect x="75.7625%" y="213" width="0.0918%" height="15" fill="rgb(217,107,29)"/><text x="76.0125%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (9 samples, 0.09%)</title><rect x="75.7625%" y="197" width="0.0918%" height="15" fill="rgb(251,169,33)"/><text x="76.0125%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (5 samples, 0.05%)</title><rect x="75.8033%" y="181" width="0.0510%" height="15" fill="rgb(217,108,32)"/><text x="76.0533%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (5 samples, 0.05%)</title><rect x="75.8033%" y="165" width="0.0510%" height="15" fill="rgb(219,66,42)"/><text x="76.0533%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (5 samples, 0.05%)</title><rect x="75.8033%" y="149" width="0.0510%" height="15" fill="rgb(206,180,7)"/><text x="76.0533%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (4 samples, 0.04%)</title><rect x="75.8135%" y="133" width="0.0408%" height="15" fill="rgb(208,226,31)"/><text x="76.0635%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::Scavenger::~Scavenger (2 samples, 0.02%)</title><rect x="75.8339%" y="117" width="0.0204%" height="15" fill="rgb(218,26,49)"/><text x="76.0839%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::internal::PagedSpace::~PagedSpace (2 samples, 0.02%)</title><rect x="75.8339%" y="101" width="0.0204%" height="15" fill="rgb(233,197,48)"/><text x="76.0839%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="75.8441%" y="85" width="0.0102%" height="15" fill="rgb(252,181,51)"/><text x="76.0941%" y="95.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="75.8543%" y="229" width="0.0204%" height="15" fill="rgb(253,90,19)"/><text x="76.1043%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (7 samples, 0.07%)</title><rect x="75.8747%" y="229" width="0.0714%" height="15" fill="rgb(215,171,30)"/><text x="76.1247%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AppendArrayBufferExtension (1 samples, 0.01%)</title><rect x="75.9461%" y="229" width="0.0102%" height="15" fill="rgb(214,222,9)"/><text x="76.1961%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::MaxRegularHeapObjectSize (2 samples, 0.02%)</title><rect x="75.9563%" y="229" width="0.0204%" height="15" fill="rgb(223,3,22)"/><text x="76.2063%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::Isolate::AdjustAmountOfExternalAllocatedMemory (5 samples, 0.05%)</title><rect x="76.0073%" y="213" width="0.0510%" height="15" fill="rgb(225,196,46)"/><text x="76.2573%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::AdjustCountersAndMergeIfPossible (2 samples, 0.02%)</title><rect x="76.0583%" y="213" width="0.0204%" height="15" fill="rgb(209,110,37)"/><text x="76.3083%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::Append (9 samples, 0.09%)</title><rect x="76.0788%" y="213" width="0.0918%" height="15" fill="rgb(249,89,12)"/><text x="76.3288%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::AdjustCountersAndMergeIfPossible (1 samples, 0.01%)</title><rect x="76.1604%" y="197" width="0.0102%" height="15" fill="rgb(226,27,33)"/><text x="76.4104%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="76.1910%" y="133" width="0.0102%" height="15" fill="rgb(213,82,22)"/><text x="76.4410%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="76.3032%" y="85" width="0.0408%" height="15" fill="rgb(248,140,0)"/><text x="76.5532%" y="95.50"></text></g><g><title>deno_hyper_bin`v8::internal::AllocWithRetry (28 samples, 0.29%)</title><rect x="76.1910%" y="165" width="0.2856%" height="15" fill="rgb(228,106,3)"/><text x="76.4410%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (28 samples, 0.29%)</title><rect x="76.1910%" y="149" width="0.2856%" height="15" fill="rgb(209,23,37)"/><text x="76.4410%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (27 samples, 0.28%)</title><rect x="76.2012%" y="133" width="0.2754%" height="15" fill="rgb(241,93,50)"/><text x="76.4512%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.27%)</title><rect x="76.2114%" y="117" width="0.2652%" height="15" fill="rgb(253,46,43)"/><text x="76.4614%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.26%)</title><rect x="76.2216%" y="101" width="0.2550%" height="15" fill="rgb(226,206,43)"/><text x="76.4716%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.13%)</title><rect x="76.3440%" y="85" width="0.1326%" height="15" fill="rgb(217,54,7)"/><text x="76.5940%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.07%)</title><rect x="76.4052%" y="69" width="0.0714%" height="15" fill="rgb(223,5,52)"/><text x="76.6552%" y="79.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::EnsureExtension (31 samples, 0.32%)</title><rect x="76.1808%" y="197" width="0.3162%" height="15" fill="rgb(206,52,46)"/><text x="76.4308%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::Malloced::operator new (30 samples, 0.31%)</title><rect x="76.1910%" y="181" width="0.3060%" height="15" fill="rgb(253,136,11)"/><text x="76.4410%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="76.4766%" y="165" width="0.0204%" height="15" fill="rgb(208,106,33)"/><text x="76.7266%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::Attach(std::__1::shared_ptr (34 samples, 0.35%)</title><rect x="76.1706%" y="213" width="0.3468%" height="15" fill="rgb(206,54,4)"/><text x="76.4206%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::Malloced::operator new (2 samples, 0.02%)</title><rect x="76.4970%" y="197" width="0.0204%" height="15" fill="rgb(213,3,15)"/><text x="76.7470%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::EnsureExtension (1 samples, 0.01%)</title><rect x="76.5174%" y="213" width="0.0102%" height="15" fill="rgb(252,211,39)"/><text x="76.7674%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSArrayBuffer(std::__1::shared_ptr (94 samples, 0.96%)</title><rect x="75.5891%" y="245" width="0.9589%" height="15" fill="rgb(223,6,36)"/><text x="75.8391%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::Setup(v8::internal::SharedFlag, std::__1::shared_ptr (56 samples, 0.57%)</title><rect x="75.9767%" y="229" width="0.5713%" height="15" fill="rgb(252,169,45)"/><text x="76.2267%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::GetHeaderSize (2 samples, 0.02%)</title><rect x="76.5276%" y="213" width="0.0204%" height="15" fill="rgb(212,48,26)"/><text x="76.7776%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBuffer::New(v8::Isolate*, std::__1::shared_ptr (106 samples, 1.08%)</title><rect x="75.4769%" y="261" width="1.0813%" height="15" fill="rgb(251,102,48)"/><text x="75.7269%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::Setup(v8::internal::SharedFlag, std::__1::shared_ptr (1 samples, 0.01%)</title><rect x="76.5480%" y="245" width="0.0102%" height="15" fill="rgb(243,208,16)"/><text x="76.7980%" y="255.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::with_backing_store (110 samples, 1.12%)</title><rect x="75.4463%" y="277" width="1.1221%" height="15" fill="rgb(219,96,24)"/><text x="75.6963%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSArrayBuffer(std::__1::shared_ptr (1 samples, 0.01%)</title><rect x="76.5582%" y="261" width="0.0102%" height="15" fill="rgb(219,33,29)"/><text x="76.8082%" y="271.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__CONVERT__std__unique_ptr (3 samples, 0.03%)</title><rect x="76.5684%" y="277" width="0.0306%" height="15" fill="rgb(223,176,5)"/><text x="76.8184%" y="287.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__reset (5 samples, 0.05%)</title><rect x="76.5990%" y="277" width="0.0510%" height="15" fill="rgb(228,140,14)"/><text x="76.8490%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBuffer::NewBackingStore(void*, unsigned long, void (*) (1 samples, 0.01%)</title><rect x="76.6500%" y="277" width="0.0102%" height="15" fill="rgb(217,179,31)"/><text x="76.9000%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::ElementsKindToByteSize (4 samples, 0.04%)</title><rect x="76.6806%" y="261" width="0.0408%" height="15" fill="rgb(230,9,30)"/><text x="76.9306%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSArrayBufferView(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::FixedArrayBase&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="76.7214%" y="261" width="0.0408%" height="15" fill="rgb(230,136,20)"/><text x="76.9714%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::ElementsKindToByteSize (3 samples, 0.03%)</title><rect x="76.8642%" y="245" width="0.0306%" height="15" fill="rgb(215,210,22)"/><text x="77.1142%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="77.0784%" y="229" width="0.0102%" height="15" fill="rgb(218,43,5)"/><text x="77.3284%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="77.0886%" y="229" width="0.0204%" height="15" fill="rgb(216,11,5)"/><text x="77.3386%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (3 samples, 0.03%)</title><rect x="77.1192%" y="197" width="0.0306%" height="15" fill="rgb(209,82,29)"/><text x="77.3692%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::AllocateRawSlow (1 samples, 0.01%)</title><rect x="77.1397%" y="181" width="0.0102%" height="15" fill="rgb(244,115,12)"/><text x="77.3897%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::EnsureAllocation (1 samples, 0.01%)</title><rect x="77.1397%" y="165" width="0.0102%" height="15" fill="rgb(222,82,18)"/><text x="77.3897%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::AddFreshPage (1 samples, 0.01%)</title><rect x="77.1397%" y="149" width="0.0102%" height="15" fill="rgb(249,227,8)"/><text x="77.3897%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::UpdateInlineAllocationLimit (1 samples, 0.01%)</title><rect x="77.1397%" y="133" width="0.0102%" height="15" fill="rgb(253,141,45)"/><text x="77.3897%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::Space::RoundSizeDownToObjectAlignment (1 samples, 0.01%)</title><rect x="77.1397%" y="117" width="0.0102%" height="15" fill="rgb(234,184,4)"/><text x="77.3897%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::AddAllocation (1 samples, 0.01%)</title><rect x="77.1499%" y="181" width="0.0102%" height="15" fill="rgb(218,194,23)"/><text x="77.3999%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::ConcurrentMarking::ClearMemoryChunkData (1 samples, 0.01%)</title><rect x="77.1601%" y="149" width="0.0102%" height="15" fill="rgb(235,66,41)"/><text x="77.4101%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::CompilationCache::Iterate (1 samples, 0.01%)</title><rect x="77.1703%" y="133" width="0.0102%" height="15" fill="rgb(245,217,1)"/><text x="77.4203%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (1 samples, 0.01%)</title><rect x="77.1805%" y="133" width="0.0102%" height="15" fill="rgb(229,91,1)"/><text x="77.4305%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::Iterate (1 samples, 0.01%)</title><rect x="77.1805%" y="117" width="0.0102%" height="15" fill="rgb(207,101,30)"/><text x="77.4305%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::internal::CommonFrame::IterateCompiledFrame (1 samples, 0.01%)</title><rect x="77.1805%" y="101" width="0.0102%" height="15" fill="rgb(223,82,49)"/><text x="77.4305%" y="111.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (9 samples, 0.09%)</title><rect x="77.1090%" y="229" width="0.0918%" height="15" fill="rgb(218,167,17)"/><text x="77.3590%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (8 samples, 0.08%)</title><rect x="77.1192%" y="213" width="0.0816%" height="15" fill="rgb(208,103,14)"/><text x="77.3692%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (5 samples, 0.05%)</title><rect x="77.1499%" y="197" width="0.0510%" height="15" fill="rgb(238,20,8)"/><text x="77.3999%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.04%)</title><rect x="77.1601%" y="181" width="0.0408%" height="15" fill="rgb(218,80,54)"/><text x="77.4101%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (4 samples, 0.04%)</title><rect x="77.1601%" y="165" width="0.0408%" height="15" fill="rgb(240,144,17)"/><text x="77.4101%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="77.1703%" y="149" width="0.0306%" height="15" fill="rgb(245,27,50)"/><text x="77.4203%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobHandle::Join (1 samples, 0.01%)</title><rect x="77.1907%" y="133" width="0.0102%" height="15" fill="rgb(251,51,7)"/><text x="77.4407%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.01%)</title><rect x="77.1907%" y="117" width="0.0102%" height="15" fill="rgb(245,217,29)"/><text x="77.4407%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::base::ConditionVariable::~ConditionVariable (1 samples, 0.01%)</title><rect x="77.1907%" y="101" width="0.0102%" height="15" fill="rgb(221,176,29)"/><text x="77.4407%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.01%)</title><rect x="77.1907%" y="85" width="0.0102%" height="15" fill="rgb(212,180,24)"/><text x="77.4407%" y="95.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSArrayBufferView(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::FixedArrayBase&gt;, v8::internal::Handle (31 samples, 0.32%)</title><rect x="76.8948%" y="245" width="0.3162%" height="15" fill="rgb(254,24,2)"/><text x="77.1448%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::GetHeaderSize (1 samples, 0.01%)</title><rect x="77.2009%" y="229" width="0.0102%" height="15" fill="rgb(230,100,2)"/><text x="77.4509%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::MaxRegularHeapObjectSize (1 samples, 0.01%)</title><rect x="77.2111%" y="245" width="0.0102%" height="15" fill="rgb(219,142,25)"/><text x="77.4611%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::Uint8Array::New(v8::Local (56 samples, 0.57%)</title><rect x="76.6602%" y="277" width="0.5713%" height="15" fill="rgb(240,73,43)"/><text x="76.9102%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSTypedArray(v8::internal::ExternalArrayType, v8::internal::Handle (46 samples, 0.47%)</title><rect x="76.7622%" y="261" width="0.4692%" height="15" fill="rgb(214,114,15)"/><text x="77.0122%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::GetHeaderSize (1 samples, 0.01%)</title><rect x="77.2213%" y="245" width="0.0102%" height="15" fill="rgb(207,130,4)"/><text x="77.4713%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::BackingStore::WrapAllocation(void*, unsigned long, void (*) (7 samples, 0.07%)</title><rect x="77.2315%" y="277" width="0.0714%" height="15" fill="rgb(221,25,40)"/><text x="77.4815%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSTypedArray(v8::internal::ExternalArrayType, v8::internal::Handle (1 samples, 0.01%)</title><rect x="77.3029%" y="277" width="0.0102%" height="15" fill="rgb(241,184,7)"/><text x="77.5529%" y="287.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::boxed_slice_to_uint8array (255 samples, 2.60%)</title><rect x="74.7526%" y="293" width="2.6012%" height="15" fill="rgb(235,159,4)"/><text x="75.0026%" y="303.50">de..</text></g><g><title>deno_hyper_bin`v8__ArrayBuffer__New__with_backing_store (4 samples, 0.04%)</title><rect x="77.3131%" y="277" width="0.0408%" height="15" fill="rgb(214,87,48)"/><text x="77.5631%" y="287.50"></text></g><g><title>deno_hyper_bin`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="77.4559%" y="261" width="0.0102%" height="15" fill="rgb(246,198,24)"/><text x="77.7059%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="77.4661%" y="261" width="0.0102%" height="15" fill="rgb(209,66,40)"/><text x="77.7161%" y="271.50"></text></g><g><title>deno_hyper_bin`__rdl_alloc (2 samples, 0.02%)</title><rect x="77.4763%" y="261" width="0.0204%" height="15" fill="rgb(233,147,39)"/><text x="77.7263%" y="271.50"></text></g><g><title>deno_hyper_bin`__rust_alloc (3 samples, 0.03%)</title><rect x="77.4967%" y="261" width="0.0306%" height="15" fill="rgb(231,145,52)"/><text x="77.7467%" y="271.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::RequestHeader::from_raw (2 samples, 0.02%)</title><rect x="77.5273%" y="261" width="0.0204%" height="15" fill="rgb(206,20,26)"/><text x="77.7773%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="77.6497%" y="245" width="0.0102%" height="15" fill="rgb(238,220,4)"/><text x="77.8997%" y="255.50"></text></g><g><title>deno_hyper_bin`&lt;bytes::bytes::Bytes as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.03%)</title><rect x="77.6599%" y="245" width="0.0306%" height="15" fill="rgb(252,195,42)"/><text x="77.9099%" y="255.50"></text></g><g><title>deno_hyper_bin`&lt;deno_core::ops_bin::ResponseHeader as core::convert::Into&lt;[u8 (1 samples, 0.01%)</title><rect x="77.6905%" y="245" width="0.0102%" height="15" fill="rgb(209,10,6)"/><text x="77.9405%" y="255.50"></text></g><g><title> 16]&gt;&gt;::into (1 samples, 0.01%)</title><rect x="77.6905%" y="229" width="0.0102%" height="15" fill="rgb(229,3,52)"/><text x="77.9405%" y="239.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="77.7109%" y="229" width="0.0102%" height="15" fill="rgb(253,49,37)"/><text x="77.9609%" y="239.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__ByteLength (1 samples, 0.01%)</title><rect x="77.7109%" y="213" width="0.0102%" height="15" fill="rgb(240,103,49)"/><text x="77.9609%" y="223.50"></text></g><g><title>deno_hyper_bin`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="77.7007%" y="245" width="0.0306%" height="15" fill="rgb(250,182,30)"/><text x="77.9507%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::Data (1 samples, 0.01%)</title><rect x="77.7211%" y="229" width="0.0102%" height="15" fill="rgb(248,8,30)"/><text x="77.9711%" y="239.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="77.7313%" y="245" width="0.0102%" height="15" fill="rgb(237,120,30)"/><text x="77.9813%" y="255.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="77.8333%" y="229" width="0.0306%" height="15" fill="rgb(221,146,34)"/><text x="78.0833%" y="239.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (15 samples, 0.15%)</title><rect x="77.7415%" y="245" width="0.1530%" height="15" fill="rgb(242,55,13)"/><text x="77.9915%" y="255.50"></text></g><g><title>deno_hyper_bin`smallvec::SmallVec&lt;A&gt;::reserve (3 samples, 0.03%)</title><rect x="77.8639%" y="229" width="0.0306%" height="15" fill="rgb(242,112,31)"/><text x="78.1139%" y="239.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="77.8945%" y="245" width="0.0306%" height="15" fill="rgb(249,192,27)"/><text x="78.1445%" y="255.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="77.9251%" y="245" width="0.0102%" height="15" fill="rgb(208,204,44)"/><text x="78.1751%" y="255.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::RequestHeader::from_raw (3 samples, 0.03%)</title><rect x="77.9353%" y="245" width="0.0306%" height="15" fill="rgb(208,93,54)"/><text x="78.1853%" y="255.50"></text></g><g><title>deno_hyper_bin`http::response::Parts::new (2 samples, 0.02%)</title><rect x="78.2312%" y="229" width="0.0204%" height="15" fill="rgb(242,1,31)"/><text x="78.4812%" y="239.50"></text></g><g><title>deno_hyper_bin`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.16%)</title><rect x="78.2516%" y="229" width="0.1632%" height="15" fill="rgb(241,83,25)"/><text x="78.5016%" y="239.50"></text></g><g><title>deno_hyper_bin`deno_hyper_bin::op_respond (61 samples, 0.62%)</title><rect x="77.9659%" y="245" width="0.6223%" height="15" fill="rgb(205,169,50)"/><text x="78.2159%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.17%)</title><rect x="78.4148%" y="229" width="0.1734%" height="15" fill="rgb(239,186,37)"/><text x="78.6648%" y="239.50"></text></g><g><title>deno_hyper_bin`hyper::body::body::Body::new (2 samples, 0.02%)</title><rect x="78.5882%" y="245" width="0.0204%" height="15" fill="rgb(205,221,10)"/><text x="78.8382%" y="255.50"></text></g><g><title>deno_hyper_bin`smallvec::SmallVec&lt;A&gt;::reserve (2 samples, 0.02%)</title><rect x="78.6086%" y="245" width="0.0204%" height="15" fill="rgb(218,196,15)"/><text x="78.8586%" y="255.50"></text></g><g><title>deno_hyper_bin`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="78.6290%" y="245" width="0.0102%" height="15" fill="rgb(218,196,35)"/><text x="78.8790%" y="255.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__reset (3 samples, 0.03%)</title><rect x="78.6392%" y="245" width="0.0306%" height="15" fill="rgb(233,63,24)"/><text x="78.8892%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="78.6800%" y="213" width="0.0204%" height="15" fill="rgb(225,8,4)"/><text x="78.9300%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.02%)</title><rect x="78.7820%" y="181" width="0.0204%" height="15" fill="rgb(234,105,35)"/><text x="79.0320%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.24%)</title><rect x="78.6698%" y="245" width="0.2448%" height="15" fill="rgb(236,21,32)"/><text x="78.9198%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.23%)</title><rect x="78.6800%" y="229" width="0.2346%" height="15" fill="rgb(228,109,6)"/><text x="78.9300%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.21%)</title><rect x="78.7004%" y="213" width="0.2142%" height="15" fill="rgb(229,215,31)"/><text x="78.9504%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.21%)</title><rect x="78.7004%" y="197" width="0.2142%" height="15" fill="rgb(221,52,54)"/><text x="78.9504%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.11%)</title><rect x="78.8024%" y="181" width="0.1122%" height="15" fill="rgb(252,129,43)"/><text x="79.0524%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="78.8840%" y="165" width="0.0306%" height="15" fill="rgb(248,183,27)"/><text x="79.1340%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="78.9146%" y="245" width="0.0408%" height="15" fill="rgb(250,0,22)"/><text x="79.1646%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.06%)</title><rect x="78.9554%" y="245" width="0.0612%" height="15" fill="rgb(213,166,10)"/><text x="79.2054%" y="255.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::bin_op_sync::_{{closure}} (152 samples, 1.55%)</title><rect x="77.5477%" y="261" width="1.5505%" height="15" fill="rgb(207,163,36)"/><text x="77.7977%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (8 samples, 0.08%)</title><rect x="79.0166%" y="245" width="0.0816%" height="15" fill="rgb(208,122,22)"/><text x="79.2666%" y="255.50"></text></g><g><title>deno_hyper_bin`deno_hyper_bin::op_respond (4 samples, 0.04%)</title><rect x="79.0982%" y="261" width="0.0408%" height="15" fill="rgb(207,104,49)"/><text x="79.3482%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (169 samples, 1.72%)</title><rect x="77.4253%" y="277" width="1.7240%" height="15" fill="rgb(248,211,50)"/><text x="77.6753%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="79.1390%" y="261" width="0.0102%" height="15" fill="rgb(217,13,45)"/><text x="79.3890%" y="271.50"></text></g><g><title>deno_hyper_bin`deno_core::ops::OpTable::route_op (181 samples, 1.85%)</title><rect x="77.3539%" y="293" width="1.8464%" height="15" fill="rgb(211,216,49)"/><text x="77.6039%" y="303.50">d..</text></g><g><title>deno_hyper_bin`deno_core::ops_bin::bin_op_sync::_{{closure}} (5 samples, 0.05%)</title><rect x="79.1492%" y="277" width="0.0510%" height="15" fill="rgb(221,58,53)"/><text x="79.3992%" y="287.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__get (1 samples, 0.01%)</title><rect x="79.2002%" y="277" width="0.0102%" height="15" fill="rgb(220,112,41)"/><text x="79.4502%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (1 samples, 0.01%)</title><rect x="79.2104%" y="277" width="0.0102%" height="15" fill="rgb(236,38,28)"/><text x="79.4604%" y="287.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__ByteLength (1 samples, 0.01%)</title><rect x="79.2206%" y="277" width="0.0102%" height="15" fill="rgb(227,195,22)"/><text x="79.4706%" y="287.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::as_u32_slice (4 samples, 0.04%)</title><rect x="79.2002%" y="293" width="0.0408%" height="15" fill="rgb(214,55,33)"/><text x="79.4502%" y="303.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__Data (1 samples, 0.01%)</title><rect x="79.2308%" y="277" width="0.0102%" height="15" fill="rgb(248,80,13)"/><text x="79.4808%" y="287.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::BackingStore::byte_length (2 samples, 0.02%)</title><rect x="79.2410%" y="293" width="0.0204%" height="15" fill="rgb(238,52,6)"/><text x="79.4910%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Integer&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="79.2615%" y="293" width="0.0102%" height="15" fill="rgb(224,198,47)"/><text x="79.5115%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::FunctionCallbackArguments::get (1 samples, 0.01%)</title><rect x="79.2717%" y="293" width="0.0102%" height="15" fill="rgb(233,171,20)"/><text x="79.5217%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::get_annex (1 samples, 0.01%)</title><rect x="79.2819%" y="293" width="0.0102%" height="15" fill="rgb(241,30,25)"/><text x="79.5319%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::get_slot (4 samples, 0.04%)</title><rect x="79.2921%" y="293" width="0.0408%" height="15" fill="rgb(207,171,38)"/><text x="79.5421%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::typed_array::_&lt;impl rusty_v8::data::Uint8Array&gt;::new (1 samples, 0.01%)</title><rect x="79.3329%" y="293" width="0.0102%" height="15" fill="rgb(234,70,1)"/><text x="79.5829%" y="303.50"></text></g><g><title>deno_hyper_bin`smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.01%)</title><rect x="79.3431%" y="293" width="0.0102%" height="15" fill="rgb(232,178,18)"/><text x="79.5931%" y="303.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__get (2 samples, 0.02%)</title><rect x="79.3533%" y="293" width="0.0204%" height="15" fill="rgb(241,78,40)"/><text x="79.6033%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (1 samples, 0.01%)</title><rect x="79.3737%" y="293" width="0.0102%" height="15" fill="rgb(222,35,25)"/><text x="79.6237%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::Uint8Array::New(v8::Local (1 samples, 0.01%)</title><rect x="79.3839%" y="293" width="0.0102%" height="15" fill="rgb(207,92,16)"/><text x="79.6339%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::Value::IsInt32 (3 samples, 0.03%)</title><rect x="79.3941%" y="293" width="0.0306%" height="15" fill="rgb(216,59,51)"/><text x="79.6441%" y="303.50"></text></g><g><title>deno_hyper_bin`v8__Uint8Array__New (1 samples, 0.01%)</title><rect x="79.4247%" y="293" width="0.0102%" height="15" fill="rgb(213,80,28)"/><text x="79.6747%" y="303.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::send (543 samples, 5.54%)</title><rect x="73.9161%" y="309" width="5.5391%" height="15" fill="rgb(220,93,7)"/><text x="74.1661%" y="319.50">deno_hy..</text></g><g><title>deno_hyper_bin`v8__Value__IsInt32 (2 samples, 0.02%)</title><rect x="79.4349%" y="293" width="0.0204%" height="15" fill="rgb(225,24,44)"/><text x="79.6849%" y="303.50"></text></g><g><title>deno_hyper_bin`deno_core::ops::OpTable::route_op (3 samples, 0.03%)</title><rect x="79.4553%" y="309" width="0.0306%" height="15" fill="rgb(243,74,40)"/><text x="79.7053%" y="319.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::as_u32_slice (1 samples, 0.01%)</title><rect x="79.4859%" y="309" width="0.0102%" height="15" fill="rgb(228,39,7)"/><text x="79.7359%" y="319.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Integer&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="79.4961%" y="309" width="0.0102%" height="15" fill="rgb(227,79,8)"/><text x="79.7461%" y="319.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::get_current_mut (1 samples, 0.01%)</title><rect x="79.5063%" y="309" width="0.0102%" height="15" fill="rgb(236,58,11)"/><text x="79.7563%" y="319.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__GetData (1 samples, 0.01%)</title><rect x="79.5063%" y="293" width="0.0102%" height="15" fill="rgb(249,63,35)"/><text x="79.7563%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::new_callback_scope_data (3 samples, 0.03%)</title><rect x="79.5165%" y="309" width="0.0306%" height="15" fill="rgb(252,114,16)"/><text x="79.7665%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::Integer::Value (2 samples, 0.02%)</title><rect x="79.5471%" y="309" width="0.0204%" height="15" fill="rgb(254,151,24)"/><text x="79.7971%" y="319.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__SetData (1 samples, 0.01%)</title><rect x="79.5675%" y="309" width="0.0102%" height="15" fill="rgb(253,54,39)"/><text x="79.8175%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (562 samples, 5.73%)</title><rect x="73.8651%" y="325" width="5.7329%" height="15" fill="rgb(243,25,45)"/><text x="74.1151%" y="335.50">deno_hy..</text></g><g><title>deno_hyper_bin`v8__ReturnValue__Set (2 samples, 0.02%)</title><rect x="79.5777%" y="309" width="0.0204%" height="15" fill="rgb(234,134,9)"/><text x="79.8277%" y="319.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::FunctionCallbackArguments::from_function_callback_info (1 samples, 0.01%)</title><rect x="79.5981%" y="325" width="0.0102%" height="15" fill="rgb(227,166,31)"/><text x="79.8481%" y="335.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::ReturnValue::from_function_callback_info (2 samples, 0.02%)</title><rect x="79.6083%" y="325" width="0.0204%" height="15" fill="rgb(245,143,41)"/><text x="79.8583%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (612 samples, 6.24%)</title><rect x="73.4163%" y="389" width="6.2430%" height="15" fill="rgb(238,181,32)"/><text x="73.6663%" y="399.50">deno_hyp..</text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_HandleApiCall (605 samples, 6.17%)</title><rect x="73.4877%" y="373" width="6.1716%" height="15" fill="rgb(224,113,18)"/><text x="73.7377%" y="383.50">deno_hyp..</text></g><g><title>deno_hyper_bin`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (595 samples, 6.07%)</title><rect x="73.5897%" y="357" width="6.0696%" height="15" fill="rgb(240,229,28)"/><text x="73.8397%" y="367.50">deno_hyp..</text></g><g><title>deno_hyper_bin`v8::internal::FunctionCallbackArguments::Call (585 samples, 5.97%)</title><rect x="73.6917%" y="341" width="5.9676%" height="15" fill="rgb(250,185,3)"/><text x="73.9417%" y="351.50">deno_hyp..</text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.03%)</title><rect x="79.6287%" y="325" width="0.0306%" height="15" fill="rgb(212,59,25)"/><text x="79.8787%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_CallWithSpread (4 samples, 0.04%)</title><rect x="79.6593%" y="389" width="0.0408%" height="15" fill="rgb(221,87,20)"/><text x="79.9093%" y="399.50"></text></g><g><title>0x13720008582e (619 samples, 6.31%)</title><rect x="73.3959%" y="405" width="6.3144%" height="15" fill="rgb(213,74,28)"/><text x="73.6459%" y="415.50">0x137200..</text></g><g><title>deno_hyper_bin`v8::internal::Builtin_HandleApiCall (1 samples, 0.01%)</title><rect x="79.7001%" y="389" width="0.0102%" height="15" fill="rgb(224,132,34)"/><text x="79.9501%" y="399.50"></text></g><g><title>0x13720008583f (1 samples, 0.01%)</title><rect x="79.7103%" y="405" width="0.0102%" height="15" fill="rgb(222,101,24)"/><text x="79.9603%" y="415.50"></text></g><g><title>0x1372000858c0 (2 samples, 0.02%)</title><rect x="79.7205%" y="405" width="0.0204%" height="15" fill="rgb(254,142,4)"/><text x="79.9705%" y="415.50"></text></g><g><title>0x137200085923 (3 samples, 0.03%)</title><rect x="79.7409%" y="405" width="0.0306%" height="15" fill="rgb(230,229,49)"/><text x="79.9909%" y="415.50"></text></g><g><title>0x137200085956 (1 samples, 0.01%)</title><rect x="79.7715%" y="405" width="0.0102%" height="15" fill="rgb(238,70,47)"/><text x="80.0215%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_TypedArrayPrototypeBuffer (8 samples, 0.08%)</title><rect x="79.7919%" y="373" width="0.0816%" height="15" fill="rgb(231,160,17)"/><text x="80.0419%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSTypedArray::GetBuffer (3 samples, 0.03%)</title><rect x="79.8429%" y="357" width="0.0306%" height="15" fill="rgb(218,68,53)"/><text x="80.0929%" y="367.50"></text></g><g><title>0x137200085959 (10 samples, 0.10%)</title><rect x="79.7817%" y="405" width="0.1020%" height="15" fill="rgb(236,111,10)"/><text x="80.0317%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (10 samples, 0.10%)</title><rect x="79.7817%" y="389" width="0.1020%" height="15" fill="rgb(224,34,41)"/><text x="80.0317%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_TypedArrayPrototypeBuffer (1 samples, 0.01%)</title><rect x="79.8735%" y="373" width="0.0102%" height="15" fill="rgb(241,118,19)"/><text x="80.1235%" y="383.50"></text></g><g><title>0x13720008596d (1 samples, 0.01%)</title><rect x="79.8837%" y="405" width="0.0102%" height="15" fill="rgb(238,129,25)"/><text x="80.1337%" y="415.50"></text></g><g><title>0x137200085998 (1 samples, 0.01%)</title><rect x="79.8939%" y="405" width="0.0102%" height="15" fill="rgb(238,22,31)"/><text x="80.1439%" y="415.50"></text></g><g><title>0x1372000859a9 (1 samples, 0.01%)</title><rect x="79.9041%" y="405" width="0.0102%" height="15" fill="rgb(222,174,48)"/><text x="80.1541%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_AdaptorWithBuiltinExitFrame (1 samples, 0.01%)</title><rect x="79.9143%" y="389" width="0.0102%" height="15" fill="rgb(206,152,40)"/><text x="80.1643%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewConstructor (2 samples, 0.02%)</title><rect x="79.9245%" y="389" width="0.0204%" height="15" fill="rgb(218,99,54)"/><text x="80.1745%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (1 samples, 0.01%)</title><rect x="80.0265%" y="341" width="0.0102%" height="15" fill="rgb(220,174,26)"/><text x="80.2765%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::GetHeaderSize (1 samples, 0.01%)</title><rect x="80.0367%" y="341" width="0.0102%" height="15" fill="rgb(245,116,9)"/><text x="80.2867%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (2 samples, 0.02%)</title><rect x="80.0877%" y="325" width="0.0204%" height="15" fill="rgb(209,72,35)"/><text x="80.3377%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (1 samples, 0.01%)</title><rect x="80.1897%" y="261" width="0.0102%" height="15" fill="rgb(226,126,21)"/><text x="80.4397%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionEpilogue (1 samples, 0.01%)</title><rect x="80.1999%" y="245" width="0.0102%" height="15" fill="rgb(227,192,1)"/><text x="80.4499%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::LargeObjectSpace::Size (1 samples, 0.01%)</title><rect x="80.1999%" y="229" width="0.0102%" height="15" fill="rgb(237,180,29)"/><text x="80.4499%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (1 samples, 0.01%)</title><rect x="80.2101%" y="229" width="0.0102%" height="15" fill="rgb(230,197,35)"/><text x="80.4601%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Scavenger::~Scavenger (1 samples, 0.01%)</title><rect x="80.2203%" y="197" width="0.0102%" height="15" fill="rgb(246,193,31)"/><text x="80.4703%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::PagedSpace::~PagedSpace (1 samples, 0.01%)</title><rect x="80.2203%" y="181" width="0.0102%" height="15" fill="rgb(241,36,4)"/><text x="80.4703%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="80.2203%" y="165" width="0.0102%" height="15" fill="rgb(241,130,17)"/><text x="80.4703%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="80.2203%" y="149" width="0.0102%" height="15" fill="rgb(206,137,32)"/><text x="80.4703%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (10 samples, 0.10%)</title><rect x="80.1387%" y="309" width="0.1020%" height="15" fill="rgb(237,228,51)"/><text x="80.3887%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (6 samples, 0.06%)</title><rect x="80.1795%" y="293" width="0.0612%" height="15" fill="rgb(243,6,42)"/><text x="80.4295%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.05%)</title><rect x="80.1897%" y="277" width="0.0510%" height="15" fill="rgb(251,74,28)"/><text x="80.4397%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (4 samples, 0.04%)</title><rect x="80.1999%" y="261" width="0.0408%" height="15" fill="rgb(218,20,49)"/><text x="80.4499%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="80.2101%" y="245" width="0.0306%" height="15" fill="rgb(238,28,14)"/><text x="80.4601%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="80.2203%" y="229" width="0.0204%" height="15" fill="rgb(229,40,46)"/><text x="80.4703%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.02%)</title><rect x="80.2203%" y="213" width="0.0204%" height="15" fill="rgb(244,195,20)"/><text x="80.4703%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::platform::NewDefaultJobHandle(v8::Platform*, v8::TaskPriority, std::__1::unique_ptr&lt;v8::JobTask, std::__1::default_delete (1 samples, 0.01%)</title><rect x="80.2305%" y="197" width="0.0102%" height="15" fill="rgb(253,56,35)"/><text x="80.4805%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::NotifyConcurrencyIncrease (1 samples, 0.01%)</title><rect x="80.2305%" y="181" width="0.0102%" height="15" fill="rgb(210,149,44)"/><text x="80.4805%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultWorkerThreadsTaskRunner::PostTask(std::__1::unique_ptr&lt;v8::Task, std::__1::default_delete (1 samples, 0.01%)</title><rect x="80.2305%" y="165" width="0.0102%" height="15" fill="rgb(240,135,12)"/><text x="80.4805%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::platform::DelayedTaskQueue::Append(std::__1::unique_ptr&lt;v8::Task, std::__1::default_delete (1 samples, 0.01%)</title><rect x="80.2305%" y="149" width="0.0102%" height="15" fill="rgb(251,24,50)"/><text x="80.4805%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.01%)</title><rect x="80.2305%" y="133" width="0.0102%" height="15" fill="rgb(243,200,47)"/><text x="80.4805%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (3 samples, 0.03%)</title><rect x="80.2407%" y="309" width="0.0306%" height="15" fill="rgb(224,166,26)"/><text x="80.4907%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (20 samples, 0.20%)</title><rect x="80.1081%" y="325" width="0.2040%" height="15" fill="rgb(233,0,47)"/><text x="80.3581%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="80.2713%" y="309" width="0.0408%" height="15" fill="rgb(253,80,5)"/><text x="80.5213%" y="319.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (41 samples, 0.42%)</title><rect x="79.9551%" y="373" width="0.4182%" height="15" fill="rgb(214,133,25)"/><text x="80.2051%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_DataViewConstructor (39 samples, 0.40%)</title><rect x="79.9755%" y="357" width="0.3978%" height="15" fill="rgb(209,27,14)"/><text x="80.2255%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::New(v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (32 samples, 0.33%)</title><rect x="80.0469%" y="341" width="0.3264%" height="15" fill="rgb(219,102,51)"/><text x="80.2969%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSFunction::GetDerivedMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle (6 samples, 0.06%)</title><rect x="80.3121%" y="325" width="0.0612%" height="15" fill="rgb(237,18,16)"/><text x="80.5621%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSFunction::EnsureHasInitialMap(v8::internal::Handle (5 samples, 0.05%)</title><rect x="80.3224%" y="309" width="0.0510%" height="15" fill="rgb(241,85,17)"/><text x="80.5724%" y="319.50"></text></g><g><title>0x1372000859ef (46 samples, 0.47%)</title><rect x="79.9143%" y="405" width="0.4692%" height="15" fill="rgb(236,90,42)"/><text x="80.1643%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (43 samples, 0.44%)</title><rect x="79.9449%" y="389" width="0.4386%" height="15" fill="rgb(249,57,21)"/><text x="80.1949%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_DataViewConstructor (1 samples, 0.01%)</title><rect x="80.3734%" y="373" width="0.0102%" height="15" fill="rgb(243,12,36)"/><text x="80.6234%" y="383.50"></text></g><g><title>0x137200085a3c (11 samples, 0.11%)</title><rect x="80.3836%" y="405" width="0.1122%" height="15" fill="rgb(253,128,47)"/><text x="80.6336%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeGetBigUint64 (11 samples, 0.11%)</title><rect x="80.3836%" y="389" width="0.1122%" height="15" fill="rgb(207,33,20)"/><text x="80.6336%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="80.4856%" y="373" width="0.0102%" height="15" fill="rgb(233,215,35)"/><text x="80.7356%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.01%)</title><rect x="80.4856%" y="357" width="0.0102%" height="15" fill="rgb(249,188,52)"/><text x="80.7356%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (1 samples, 0.01%)</title><rect x="80.4856%" y="341" width="0.0102%" height="15" fill="rgb(225,12,32)"/><text x="80.7356%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.01%)</title><rect x="80.4856%" y="325" width="0.0102%" height="15" fill="rgb(247,98,14)"/><text x="80.7356%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (1 samples, 0.01%)</title><rect x="80.4856%" y="309" width="0.0102%" height="15" fill="rgb(247,219,48)"/><text x="80.7356%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (1 samples, 0.01%)</title><rect x="80.4856%" y="293" width="0.0102%" height="15" fill="rgb(253,60,48)"/><text x="80.7356%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (1 samples, 0.01%)</title><rect x="80.4856%" y="277" width="0.0102%" height="15" fill="rgb(245,15,52)"/><text x="80.7356%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (1 samples, 0.01%)</title><rect x="80.4856%" y="261" width="0.0102%" height="15" fill="rgb(220,133,28)"/><text x="80.7356%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.01%)</title><rect x="80.4856%" y="245" width="0.0102%" height="15" fill="rgb(217,180,4)"/><text x="80.7356%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::platform::NewDefaultJobHandle(v8::Platform*, v8::TaskPriority, std::__1::unique_ptr&lt;v8::JobTask, std::__1::default_delete (1 samples, 0.01%)</title><rect x="80.4856%" y="229" width="0.0102%" height="15" fill="rgb(251,24,1)"/><text x="80.7356%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::NotifyConcurrencyIncrease (1 samples, 0.01%)</title><rect x="80.4856%" y="213" width="0.0102%" height="15" fill="rgb(212,185,49)"/><text x="80.7356%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultWorkerThreadsTaskRunner::PostTask(std::__1::unique_ptr&lt;v8::Task, std::__1::default_delete (1 samples, 0.01%)</title><rect x="80.4856%" y="197" width="0.0102%" height="15" fill="rgb(215,175,22)"/><text x="80.7356%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::platform::DelayedTaskQueue::Append(std::__1::unique_ptr&lt;v8::Task, std::__1::default_delete (1 samples, 0.01%)</title><rect x="80.4856%" y="181" width="0.0102%" height="15" fill="rgb(250,205,14)"/><text x="80.7356%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.01%)</title><rect x="80.4856%" y="165" width="0.0102%" height="15" fill="rgb(225,211,22)"/><text x="80.7356%" y="175.50"></text></g><g><title>0x137200085a53 (4 samples, 0.04%)</title><rect x="80.4958%" y="405" width="0.0408%" height="15" fill="rgb(251,179,42)"/><text x="80.7458%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_ToNumberConvertBigInt (4 samples, 0.04%)</title><rect x="80.4958%" y="389" width="0.0408%" height="15" fill="rgb(208,216,51)"/><text x="80.7458%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.03%)</title><rect x="80.5060%" y="373" width="0.0306%" height="15" fill="rgb(235,36,11)"/><text x="80.7560%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_BigIntToNumber (1 samples, 0.01%)</title><rect x="80.5264%" y="357" width="0.0102%" height="15" fill="rgb(213,189,28)"/><text x="80.7764%" y="367.50"></text></g><g><title>0x137200085a7c (1 samples, 0.01%)</title><rect x="80.5366%" y="405" width="0.0102%" height="15" fill="rgb(227,203,42)"/><text x="80.7866%" y="415.50"></text></g><g><title>0x137200085a98 (1 samples, 0.01%)</title><rect x="80.5468%" y="405" width="0.0102%" height="15" fill="rgb(244,72,36)"/><text x="80.7968%" y="415.50"></text></g><g><title>0x137200085abc (1 samples, 0.01%)</title><rect x="80.5570%" y="405" width="0.0102%" height="15" fill="rgb(213,53,17)"/><text x="80.8070%" y="415.50"></text></g><g><title>0x137200085ac0 (1 samples, 0.01%)</title><rect x="80.5672%" y="405" width="0.0102%" height="15" fill="rgb(207,167,3)"/><text x="80.8172%" y="415.50"></text></g><g><title>0x137200085af6 (1 samples, 0.01%)</title><rect x="80.5774%" y="405" width="0.0102%" height="15" fill="rgb(216,98,30)"/><text x="80.8274%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="80.5876%" y="405" width="0.0102%" height="15" fill="rgb(236,123,15)"/><text x="80.8376%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CallFunction_ReceiverIsAny (6 samples, 0.06%)</title><rect x="80.5978%" y="405" width="0.0612%" height="15" fill="rgb(248,81,50)"/><text x="80.8478%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CallVarargs (1 samples, 0.01%)</title><rect x="80.6590%" y="405" width="0.0102%" height="15" fill="rgb(214,120,4)"/><text x="80.9090%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CallWithSpread (3 samples, 0.03%)</title><rect x="80.6692%" y="405" width="0.0306%" height="15" fill="rgb(208,179,34)"/><text x="80.9192%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_Call_ReceiverIsAny (2 samples, 0.02%)</title><rect x="80.6998%" y="405" width="0.0204%" height="15" fill="rgb(227,140,7)"/><text x="80.9498%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeGetBigUint64 (2 samples, 0.02%)</title><rect x="80.7202%" y="405" width="0.0204%" height="15" fill="rgb(214,22,6)"/><text x="80.9702%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeSetBigUint64 (2 samples, 0.02%)</title><rect x="80.7406%" y="405" width="0.0204%" height="15" fill="rgb(207,137,27)"/><text x="80.9906%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_HandleApiCall (1 samples, 0.01%)</title><rect x="80.7610%" y="405" width="0.0102%" height="15" fill="rgb(210,8,46)"/><text x="81.0110%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (5 samples, 0.05%)</title><rect x="80.7712%" y="405" width="0.0510%" height="15" fill="rgb(240,16,54)"/><text x="81.0212%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadIC (1 samples, 0.01%)</title><rect x="80.8222%" y="405" width="0.0102%" height="15" fill="rgb(211,209,29)"/><text x="81.0722%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadICTrampoline (3 samples, 0.03%)</title><rect x="80.8324%" y="405" width="0.0306%" height="15" fill="rgb(226,228,24)"/><text x="81.0824%" y="415.50"></text></g><g><title>0x137200087d5f (798 samples, 8.14%)</title><rect x="72.7328%" y="421" width="8.1404%" height="15" fill="rgb(222,84,9)"/><text x="72.9828%" y="431.50">0x137200087..</text></g><g><title>deno_hyper_bin`Builtins_ToNumberConvertBigInt (1 samples, 0.01%)</title><rect x="80.8630%" y="405" width="0.0102%" height="15" fill="rgb(234,203,30)"/><text x="81.1130%" y="415.50"></text></g><g><title>0x137200087dbc (1 samples, 0.01%)</title><rect x="80.8732%" y="421" width="0.0102%" height="15" fill="rgb(238,109,14)"/><text x="81.1232%" y="431.50"></text></g><g><title>0x137200087dc6 (2 samples, 0.02%)</title><rect x="80.8834%" y="421" width="0.0204%" height="15" fill="rgb(233,206,34)"/><text x="81.1334%" y="431.50"></text></g><g><title>0x137200087dcf (2 samples, 0.02%)</title><rect x="80.9038%" y="421" width="0.0204%" height="15" fill="rgb(220,167,47)"/><text x="81.1538%" y="431.50"></text></g><g><title>0x137200087dd9 (1 samples, 0.01%)</title><rect x="80.9242%" y="421" width="0.0102%" height="15" fill="rgb(238,105,10)"/><text x="81.1742%" y="431.50"></text></g><g><title>0x137200087ddc (5 samples, 0.05%)</title><rect x="80.9344%" y="421" width="0.0510%" height="15" fill="rgb(213,227,17)"/><text x="81.1844%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadIC (5 samples, 0.05%)</title><rect x="80.9344%" y="405" width="0.0510%" height="15" fill="rgb(217,132,38)"/><text x="81.1844%" y="415.50"></text></g><g><title>0x137200087ebc (16 samples, 0.16%)</title><rect x="80.9854%" y="421" width="0.1632%" height="15" fill="rgb(242,146,4)"/><text x="81.2354%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadIC_Megamorphic (16 samples, 0.16%)</title><rect x="80.9854%" y="405" width="0.1632%" height="15" fill="rgb(212,61,9)"/><text x="81.2354%" y="415.50"></text></g><g><title>0x137200087ec0 (1 samples, 0.01%)</title><rect x="81.1486%" y="421" width="0.0102%" height="15" fill="rgb(247,126,22)"/><text x="81.3986%" y="431.50"></text></g><g><title>0x137200087ede (1 samples, 0.01%)</title><rect x="81.1588%" y="421" width="0.0102%" height="15" fill="rgb(220,196,2)"/><text x="81.4088%" y="431.50"></text></g><g><title>0x137200087f2b (1 samples, 0.01%)</title><rect x="81.1690%" y="421" width="0.0102%" height="15" fill="rgb(208,46,4)"/><text x="81.4190%" y="431.50"></text></g><g><title>0x137200087f52 (3 samples, 0.03%)</title><rect x="81.1792%" y="421" width="0.0306%" height="15" fill="rgb(252,104,46)"/><text x="81.4292%" y="431.50"></text></g><g><title>0x137200087f93 (1 samples, 0.01%)</title><rect x="81.2098%" y="421" width="0.0102%" height="15" fill="rgb(237,152,48)"/><text x="81.4598%" y="431.50"></text></g><g><title>0x137200087fe2 (1 samples, 0.01%)</title><rect x="81.2200%" y="421" width="0.0102%" height="15" fill="rgb(221,59,37)"/><text x="81.4700%" y="431.50"></text></g><g><title>0x137200087fff (1 samples, 0.01%)</title><rect x="81.2302%" y="421" width="0.0102%" height="15" fill="rgb(209,202,51)"/><text x="81.4802%" y="431.50"></text></g><g><title>0x137200088021 (1 samples, 0.01%)</title><rect x="81.2404%" y="421" width="0.0102%" height="15" fill="rgb(228,81,30)"/><text x="81.4904%" y="431.50"></text></g><g><title>0x1372000880d9 (2 samples, 0.02%)</title><rect x="81.2506%" y="421" width="0.0204%" height="15" fill="rgb(227,42,39)"/><text x="81.5006%" y="431.50"></text></g><g><title>0x1372000880e8 (1 samples, 0.01%)</title><rect x="81.2710%" y="421" width="0.0102%" height="15" fill="rgb(221,26,2)"/><text x="81.5210%" y="431.50"></text></g><g><title>0x137200088130 (1 samples, 0.01%)</title><rect x="81.2812%" y="421" width="0.0102%" height="15" fill="rgb(254,61,31)"/><text x="81.5312%" y="431.50"></text></g><g><title>0x13720008816c (1 samples, 0.01%)</title><rect x="81.2914%" y="421" width="0.0102%" height="15" fill="rgb(222,173,38)"/><text x="81.5414%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime::SetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (1 samples, 0.01%)</title><rect x="81.3322%" y="389" width="0.0102%" height="15" fill="rgb(218,50,12)"/><text x="81.5822%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="81.4241%" y="373" width="0.0102%" height="15" fill="rgb(223,88,40)"/><text x="81.6741%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Object::SetProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (2 samples, 0.02%)</title><rect x="81.4343%" y="373" width="0.0204%" height="15" fill="rgb(237,54,19)"/><text x="81.6843%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::AddDataElement(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (3 samples, 0.03%)</title><rect x="81.4649%" y="357" width="0.0306%" height="15" fill="rgb(251,129,25)"/><text x="81.7149%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::ValidateElements (1 samples, 0.01%)</title><rect x="81.4955%" y="357" width="0.0102%" height="15" fill="rgb(238,97,19)"/><text x="81.7455%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="81.5057%" y="357" width="0.0102%" height="15" fill="rgb(240,169,18)"/><text x="81.7557%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (4 samples, 0.04%)</title><rect x="81.5159%" y="357" width="0.0408%" height="15" fill="rgb(230,187,49)"/><text x="81.7659%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::AddImpl(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (3 samples, 0.03%)</title><rect x="81.6485%" y="341" width="0.0306%" height="15" fill="rgb(209,44,26)"/><text x="81.8985%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::Add(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (3 samples, 0.03%)</title><rect x="81.6791%" y="341" width="0.0306%" height="15" fill="rgb(244,0,6)"/><text x="81.9291%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::IsMoreGeneralElementsKindTransition (1 samples, 0.01%)</title><rect x="81.7097%" y="341" width="0.0102%" height="15" fill="rgb(248,18,21)"/><text x="81.9597%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::base::bits::RoundUpToPowerOfTwo32 (2 samples, 0.02%)</title><rect x="82.1279%" y="293" width="0.0204%" height="15" fill="rgb(245,180,19)"/><text x="82.3779%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::SetEntry (1 samples, 0.01%)</title><rect x="82.1483%" y="293" width="0.0102%" height="15" fill="rgb(252,118,36)"/><text x="82.3983%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithMap(v8::internal::Handle (1 samples, 0.01%)</title><rect x="82.1585%" y="293" width="0.0102%" height="15" fill="rgb(210,224,19)"/><text x="82.4085%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (2 samples, 0.02%)</title><rect x="82.2605%" y="229" width="0.0204%" height="15" fill="rgb(218,30,24)"/><text x="82.5105%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::AllocateRawSlow (1 samples, 0.01%)</title><rect x="82.2707%" y="213" width="0.0102%" height="15" fill="rgb(219,75,50)"/><text x="82.5207%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::EnsureAllocation (1 samples, 0.01%)</title><rect x="82.2707%" y="197" width="0.0102%" height="15" fill="rgb(234,72,50)"/><text x="82.5207%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::AddFreshPage (1 samples, 0.01%)</title><rect x="82.2707%" y="181" width="0.0102%" height="15" fill="rgb(219,100,48)"/><text x="82.5207%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (1 samples, 0.01%)</title><rect x="82.2809%" y="165" width="0.0102%" height="15" fill="rgb(253,5,41)"/><text x="82.5309%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::HandleScopeImplementer::IterateThis (1 samples, 0.01%)</title><rect x="82.2809%" y="149" width="0.0102%" height="15" fill="rgb(247,181,11)"/><text x="82.5309%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::RootScavengeVisitor::VisitRootPointers (1 samples, 0.01%)</title><rect x="82.2809%" y="133" width="0.0102%" height="15" fill="rgb(222,223,25)"/><text x="82.5309%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.01%)</title><rect x="82.2809%" y="117" width="0.0102%" height="15" fill="rgb(214,198,28)"/><text x="82.5309%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::Join (1 samples, 0.01%)</title><rect x="82.2911%" y="149" width="0.0102%" height="15" fill="rgb(230,46,43)"/><text x="82.5411%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::JobTask::Run (1 samples, 0.01%)</title><rect x="82.2911%" y="133" width="0.0102%" height="15" fill="rgb(233,65,53)"/><text x="82.5411%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::JobTask::ProcessItems (1 samples, 0.01%)</title><rect x="82.2911%" y="117" width="0.0102%" height="15" fill="rgb(221,121,27)"/><text x="82.5411%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::internal::Scavenger::Process (1 samples, 0.01%)</title><rect x="82.2911%" y="101" width="0.0102%" height="15" fill="rgb(247,70,47)"/><text x="82.5411%" y="111.50"></text></g><g><title>deno_hyper_bin`v8::internal::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.01%)</title><rect x="82.2911%" y="85" width="0.0102%" height="15" fill="rgb(228,85,35)"/><text x="82.5411%" y="95.50"></text></g><g><title>deno_hyper_bin`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (10 samples, 0.10%)</title><rect x="82.2095%" y="277" width="0.1020%" height="15" fill="rgb(209,50,18)"/><text x="82.4595%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (6 samples, 0.06%)</title><rect x="82.2503%" y="261" width="0.0612%" height="15" fill="rgb(250,19,35)"/><text x="82.5003%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (6 samples, 0.06%)</title><rect x="82.2503%" y="245" width="0.0612%" height="15" fill="rgb(253,107,29)"/><text x="82.5003%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="82.2809%" y="229" width="0.0306%" height="15" fill="rgb(252,179,29)"/><text x="82.5309%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="82.2809%" y="213" width="0.0306%" height="15" fill="rgb(238,194,6)"/><text x="82.5309%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (3 samples, 0.03%)</title><rect x="82.2809%" y="197" width="0.0306%" height="15" fill="rgb(238,164,29)"/><text x="82.5309%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="82.2809%" y="181" width="0.0306%" height="15" fill="rgb(224,25,9)"/><text x="82.5309%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobHandle::Join (2 samples, 0.02%)</title><rect x="82.2911%" y="165" width="0.0204%" height="15" fill="rgb(244,153,23)"/><text x="82.5411%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.01%)</title><rect x="82.3013%" y="149" width="0.0102%" height="15" fill="rgb(212,203,14)"/><text x="82.5513%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::base::ConditionVariable::~ConditionVariable (1 samples, 0.01%)</title><rect x="82.3013%" y="133" width="0.0102%" height="15" fill="rgb(220,164,20)"/><text x="82.5513%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.01%)</title><rect x="82.3013%" y="117" width="0.0102%" height="15" fill="rgb(222,203,48)"/><text x="82.5513%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::internal::Handle&lt;v8::internal::NumberDictionary&gt; v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Add&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::NumberDictionary&gt;, unsigned int, v8::internal::Handle (61 samples, 0.62%)</title><rect x="81.8831%" y="309" width="0.6223%" height="15" fill="rgb(215,159,22)"/><text x="82.1331%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Handle&lt;v8::internal::NumberDictionary&gt; v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (33 samples, 0.34%)</title><rect x="82.1687%" y="293" width="0.3366%" height="15" fill="rgb(216,183,47)"/><text x="82.4187%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Rehash (19 samples, 0.19%)</title><rect x="82.3115%" y="277" width="0.1938%" height="15" fill="rgb(229,195,25)"/><text x="82.5615%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Handle&lt;v8::internal::NumberDictionary&gt; v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="82.5054%" y="309" width="0.0102%" height="15" fill="rgb(224,132,51)"/><text x="82.7554%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (95 samples, 0.97%)</title><rect x="81.5567%" y="357" width="0.9691%" height="15" fill="rgb(240,63,7)"/><text x="81.8067%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::AddDataElement(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (79 samples, 0.81%)</title><rect x="81.7199%" y="341" width="0.8059%" height="15" fill="rgb(249,182,41)"/><text x="81.9699%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::AddImpl(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (69 samples, 0.70%)</title><rect x="81.8219%" y="325" width="0.7039%" height="15" fill="rgb(243,47,26)"/><text x="82.0719%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap_GenerationalBarrierSlow (1 samples, 0.01%)</title><rect x="82.5156%" y="309" width="0.0102%" height="15" fill="rgb(233,48,2)"/><text x="82.7656%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Object::SetProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (2 samples, 0.02%)</title><rect x="82.5258%" y="357" width="0.0204%" height="15" fill="rgb(244,165,34)"/><text x="82.7758%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::GetEntryForIndex (3 samples, 0.03%)</title><rect x="82.6278%" y="341" width="0.0306%" height="15" fill="rgb(207,89,7)"/><text x="82.8778%" y="351.50"></text></g><g><title>deno_hyper_bin`void v8::internal::LookupIterator::NextInternal&lt;true&gt; (17 samples, 0.17%)</title><rect x="82.5462%" y="357" width="0.1734%" height="15" fill="rgb(244,117,36)"/><text x="82.7962%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (6 samples, 0.06%)</title><rect x="82.6584%" y="341" width="0.0612%" height="15" fill="rgb(226,144,34)"/><text x="82.9084%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::GetEntryForIndex (1 samples, 0.01%)</title><rect x="82.7094%" y="325" width="0.0102%" height="15" fill="rgb(213,23,19)"/><text x="82.9594%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (1 samples, 0.01%)</title><rect x="82.7400%" y="341" width="0.0102%" height="15" fill="rgb(217,75,12)"/><text x="82.9900%" y="351.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (152 samples, 1.55%)</title><rect x="81.3118%" y="405" width="1.5505%" height="15" fill="rgb(224,159,17)"/><text x="81.5618%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_SetKeyedProperty (149 samples, 1.52%)</title><rect x="81.3424%" y="389" width="1.5199%" height="15" fill="rgb(217,118,1)"/><text x="81.5924%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime::SetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (138 samples, 1.41%)</title><rect x="81.4547%" y="373" width="1.4077%" height="15" fill="rgb(232,180,48)"/><text x="81.7047%" y="383.50"></text></g><g><title>deno_hyper_bin`void v8::internal::LookupIterator::Start&lt;true&gt; (14 samples, 0.14%)</title><rect x="82.7196%" y="357" width="0.1428%" height="15" fill="rgb(230,27,33)"/><text x="82.9696%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (11 samples, 0.11%)</title><rect x="82.7502%" y="341" width="0.1122%" height="15" fill="rgb(205,31,21)"/><text x="83.0002%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (6 samples, 0.06%)</title><rect x="82.8012%" y="325" width="0.0612%" height="15" fill="rgb(253,59,4)"/><text x="83.0512%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedStoreIC (8 samples, 0.08%)</title><rect x="82.8624%" y="405" width="0.0816%" height="15" fill="rgb(224,201,9)"/><text x="83.1124%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedStoreIC_Megamorphic (10 samples, 0.10%)</title><rect x="82.9440%" y="405" width="0.1020%" height="15" fill="rgb(229,206,30)"/><text x="83.1940%" y="415.50"></text></g><g><title>0x1372000881d0 (173 samples, 1.76%)</title><rect x="81.3016%" y="421" width="1.7648%" height="15" fill="rgb(212,67,47)"/><text x="81.5516%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_SetKeyedProperty (2 samples, 0.02%)</title><rect x="83.0460%" y="405" width="0.0204%" height="15" fill="rgb(211,96,50)"/><text x="83.2960%" y="415.50"></text></g><g><title>0x137200088204 (5 samples, 0.05%)</title><rect x="83.0664%" y="421" width="0.0510%" height="15" fill="rgb(252,114,18)"/><text x="83.3164%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadIC (5 samples, 0.05%)</title><rect x="83.0664%" y="405" width="0.0510%" height="15" fill="rgb(223,58,37)"/><text x="83.3164%" y="415.50"></text></g><g><title>0x137200088232 (1 samples, 0.01%)</title><rect x="83.1174%" y="421" width="0.0102%" height="15" fill="rgb(237,70,4)"/><text x="83.3674%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewBigInt (1 samples, 0.01%)</title><rect x="83.1582%" y="373" width="0.0102%" height="15" fill="rgb(244,85,46)"/><text x="83.4082%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRaw (1 samples, 0.01%)</title><rect x="83.2194%" y="357" width="0.0102%" height="15" fill="rgb(223,39,52)"/><text x="83.4694%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Stop (1 samples, 0.01%)</title><rect x="83.2704%" y="293" width="0.0102%" height="15" fill="rgb(218,200,14)"/><text x="83.5204%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_BigIntConstructor (16 samples, 0.16%)</title><rect x="83.1276%" y="389" width="0.1632%" height="15" fill="rgb(208,171,16)"/><text x="83.3776%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::MutableBigInt::NewFromInt (12 samples, 0.12%)</title><rect x="83.1684%" y="373" width="0.1224%" height="15" fill="rgb(234,200,18)"/><text x="83.4184%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewBigInt (6 samples, 0.06%)</title><rect x="83.2296%" y="357" width="0.0612%" height="15" fill="rgb(228,45,11)"/><text x="83.4796%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="83.2500%" y="341" width="0.0408%" height="15" fill="rgb(237,182,11)"/><text x="83.5000%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (2 samples, 0.02%)</title><rect x="83.2704%" y="325" width="0.0204%" height="15" fill="rgb(241,175,49)"/><text x="83.5204%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (2 samples, 0.02%)</title><rect x="83.2704%" y="309" width="0.0204%" height="15" fill="rgb(247,38,35)"/><text x="83.5204%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::StringTable::Capacity (1 samples, 0.01%)</title><rect x="83.2806%" y="293" width="0.0102%" height="15" fill="rgb(228,39,49)"/><text x="83.5306%" y="303.50"></text></g><g><title>0x13720008826e (19 samples, 0.19%)</title><rect x="83.1276%" y="421" width="0.1938%" height="15" fill="rgb(226,101,26)"/><text x="83.3776%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (19 samples, 0.19%)</title><rect x="83.1276%" y="405" width="0.1938%" height="15" fill="rgb(206,141,19)"/><text x="83.3776%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::MutableBigInt::NewFromInt (3 samples, 0.03%)</title><rect x="83.2908%" y="389" width="0.0306%" height="15" fill="rgb(211,200,13)"/><text x="83.5408%" y="399.50"></text></g><g><title>0x1372000882af (15 samples, 0.15%)</title><rect x="83.3214%" y="421" width="0.1530%" height="15" fill="rgb(241,121,6)"/><text x="83.5714%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeSetBigUint64 (15 samples, 0.15%)</title><rect x="83.3214%" y="405" width="0.1530%" height="15" fill="rgb(234,221,29)"/><text x="83.5714%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="83.4642%" y="389" width="0.0102%" height="15" fill="rgb(229,136,5)"/><text x="83.7142%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_StackGuard (1 samples, 0.01%)</title><rect x="83.4642%" y="373" width="0.0102%" height="15" fill="rgb(238,36,11)"/><text x="83.7142%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::StackGuard::HandleInterrupts (1 samples, 0.01%)</title><rect x="83.4642%" y="357" width="0.0102%" height="15" fill="rgb(251,55,41)"/><text x="83.7142%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizingCompileDispatcher::InstallOptimizedFunctions (1 samples, 0.01%)</title><rect x="83.4642%" y="341" width="0.0102%" height="15" fill="rgb(242,34,40)"/><text x="83.7142%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::FinalizeOptimizedCompilationJob (1 samples, 0.01%)</title><rect x="83.4642%" y="325" width="0.0102%" height="15" fill="rgb(215,42,17)"/><text x="83.7142%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::FinalizeJobImpl (1 samples, 0.01%)</title><rect x="83.4642%" y="309" width="0.0102%" height="15" fill="rgb(207,44,46)"/><text x="83.7142%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::FinalizeCode (1 samples, 0.01%)</title><rect x="83.4642%" y="293" width="0.0102%" height="15" fill="rgb(211,206,28)"/><text x="83.7142%" y="303.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::FinalizeCodePhase&gt; (1 samples, 0.01%)</title><rect x="83.4642%" y="277" width="0.0102%" height="15" fill="rgb(237,167,16)"/><text x="83.7142%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::FinalizeCode (1 samples, 0.01%)</title><rect x="83.4642%" y="261" width="0.0102%" height="15" fill="rgb(233,66,6)"/><text x="83.7142%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::CodeBuilder::BuildInternal (1 samples, 0.01%)</title><rect x="83.4642%" y="245" width="0.0102%" height="15" fill="rgb(246,123,29)"/><text x="83.7142%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Code::CopyFromNoFlush (1 samples, 0.01%)</title><rect x="83.4642%" y="229" width="0.0102%" height="15" fill="rgb(209,62,40)"/><text x="83.7142%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="83.4642%" y="213" width="0.0102%" height="15" fill="rgb(218,4,25)"/><text x="83.7142%" y="223.50"></text></g><g><title>0x1372000882e8 (1 samples, 0.01%)</title><rect x="83.4744%" y="421" width="0.0102%" height="15" fill="rgb(253,91,49)"/><text x="83.7244%" y="431.50"></text></g><g><title>0x1372000882ef (1 samples, 0.01%)</title><rect x="83.4846%" y="421" width="0.0102%" height="15" fill="rgb(228,155,29)"/><text x="83.7346%" y="431.50"></text></g><g><title>0x137200088343 (2 samples, 0.02%)</title><rect x="83.4948%" y="421" width="0.0204%" height="15" fill="rgb(243,57,37)"/><text x="83.7448%" y="431.50"></text></g><g><title>0x137200088347 (1 samples, 0.01%)</title><rect x="83.5153%" y="421" width="0.0102%" height="15" fill="rgb(244,167,17)"/><text x="83.7653%" y="431.50"></text></g><g><title>0x13720008835c (1 samples, 0.01%)</title><rect x="83.5255%" y="421" width="0.0102%" height="15" fill="rgb(207,181,38)"/><text x="83.7755%" y="431.50"></text></g><g><title>0x1372000883c2 (1 samples, 0.01%)</title><rect x="83.5357%" y="421" width="0.0102%" height="15" fill="rgb(211,8,23)"/><text x="83.7857%" y="431.50"></text></g><g><title>0x1372000883c4 (1 samples, 0.01%)</title><rect x="83.5459%" y="421" width="0.0102%" height="15" fill="rgb(235,11,44)"/><text x="83.7959%" y="431.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="83.7907%" y="325" width="0.0102%" height="15" fill="rgb(248,18,52)"/><text x="84.0407%" y="335.50"></text></g><g><title>deno_hyper_bin`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.01%)</title><rect x="83.9539%" y="309" width="0.0102%" height="15" fill="rgb(208,4,7)"/><text x="84.2039%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.01%)</title><rect x="83.9641%" y="309" width="0.0102%" height="15" fill="rgb(240,17,39)"/><text x="84.2141%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (2 samples, 0.02%)</title><rect x="83.9743%" y="309" width="0.0204%" height="15" fill="rgb(207,170,3)"/><text x="84.2243%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="83.9947%" y="309" width="0.0306%" height="15" fill="rgb(236,100,52)"/><text x="84.2447%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (5 samples, 0.05%)</title><rect x="84.0253%" y="309" width="0.0510%" height="15" fill="rgb(246,78,51)"/><text x="84.2753%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalBackingStoreRegistry::Register(std::__1::shared_ptr (3 samples, 0.03%)</title><rect x="84.2191%" y="245" width="0.0306%" height="15" fill="rgb(211,17,15)"/><text x="84.4691%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::GetBackingStore (8 samples, 0.08%)</title><rect x="84.2497%" y="245" width="0.0816%" height="15" fill="rgb(209,59,46)"/><text x="84.4997%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="84.3313%" y="245" width="0.0102%" height="15" fill="rgb(210,92,25)"/><text x="84.5813%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBuffer::GetBackingStore (23 samples, 0.23%)</title><rect x="84.1273%" y="261" width="0.2346%" height="15" fill="rgb(238,174,52)"/><text x="84.3773%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="84.3415%" y="245" width="0.0204%" height="15" fill="rgb(230,73,7)"/><text x="84.5915%" y="255.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::get_backing_store (24 samples, 0.24%)</title><rect x="84.1273%" y="277" width="0.2448%" height="15" fill="rgb(243,124,40)"/><text x="84.3773%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalBackingStoreRegistry::Register(std::__1::shared_ptr (1 samples, 0.01%)</title><rect x="84.3619%" y="261" width="0.0102%" height="15" fill="rgb(244,170,11)"/><text x="84.6119%" y="271.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer_view::_&lt;impl rusty_v8::data::ArrayBufferView&gt;::buffer (2 samples, 0.02%)</title><rect x="84.3721%" y="277" width="0.0204%" height="15" fill="rgb(207,114,54)"/><text x="84.6221%" y="287.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::ArrayBufferView&gt;&gt;::try_from (3 samples, 0.03%)</title><rect x="84.3925%" y="277" width="0.0306%" height="15" fill="rgb(205,42,20)"/><text x="84.6425%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::Value::IsArrayBufferView (2 samples, 0.02%)</title><rect x="84.4027%" y="261" width="0.0204%" height="15" fill="rgb(230,30,28)"/><text x="84.6527%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBuffer::GetBackingStore (1 samples, 0.01%)</title><rect x="84.4231%" y="277" width="0.0102%" height="15" fill="rgb(205,73,54)"/><text x="84.6731%" y="287.50"></text></g><g><title>deno_hyper_bin`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.36%)</title><rect x="84.1171%" y="293" width="0.3570%" height="15" fill="rgb(254,227,23)"/><text x="84.3671%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBufferView::Buffer (4 samples, 0.04%)</title><rect x="84.4333%" y="277" width="0.0408%" height="15" fill="rgb(228,202,34)"/><text x="84.6833%" y="287.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer_view::_&lt;impl rusty_v8::data::ArrayBufferView&gt;::buffer (3 samples, 0.03%)</title><rect x="84.4741%" y="293" width="0.0306%" height="15" fill="rgb(222,225,37)"/><text x="84.7241%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::ArrayBufferView&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="84.5047%" y="293" width="0.0102%" height="15" fill="rgb(221,14,54)"/><text x="84.7547%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::FunctionCallbackArguments::get (1 samples, 0.01%)</title><rect x="84.5149%" y="293" width="0.0102%" height="15" fill="rgb(254,102,2)"/><text x="84.7649%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (45 samples, 0.46%)</title><rect x="84.0763%" y="309" width="0.4590%" height="15" fill="rgb(232,104,17)"/><text x="84.3263%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBufferView::Buffer (1 samples, 0.01%)</title><rect x="84.5251%" y="293" width="0.0102%" height="15" fill="rgb(250,220,14)"/><text x="84.7751%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="84.6578%" y="277" width="0.0306%" height="15" fill="rgb(241,158,9)"/><text x="84.9078%" y="287.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::RequestHeader::from_raw (1 samples, 0.01%)</title><rect x="84.6884%" y="277" width="0.0102%" height="15" fill="rgb(246,9,43)"/><text x="84.9384%" y="287.50"></text></g><g><title>deno_hyper_bin`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="84.9332%" y="261" width="0.0408%" height="15" fill="rgb(206,73,33)"/><text x="85.1832%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="84.9638%" y="245" width="0.0102%" height="15" fill="rgb(222,79,8)"/><text x="85.2138%" y="255.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="84.9740%" y="261" width="0.0102%" height="15" fill="rgb(234,8,54)"/><text x="85.2240%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (2 samples, 0.02%)</title><rect x="84.9842%" y="261" width="0.0204%" height="15" fill="rgb(209,134,38)"/><text x="85.2342%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (10 samples, 0.10%)</title><rect x="85.0046%" y="261" width="0.1020%" height="15" fill="rgb(230,127,29)"/><text x="85.2546%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="85.0862%" y="245" width="0.0204%" height="15" fill="rgb(242,44,41)"/><text x="85.3362%" y="255.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="85.1066%" y="261" width="0.0306%" height="15" fill="rgb(222,56,43)"/><text x="85.3566%" y="271.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::RequestHeader::from_raw (1 samples, 0.01%)</title><rect x="85.1372%" y="261" width="0.0102%" height="15" fill="rgb(238,39,47)"/><text x="85.3872%" y="271.50"></text></g><g><title>deno_hyper_bin`smallvec::SmallVec&lt;A&gt;::reserve (3 samples, 0.03%)</title><rect x="85.1474%" y="261" width="0.0306%" height="15" fill="rgb(226,79,43)"/><text x="85.3974%" y="271.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__get (1 samples, 0.01%)</title><rect x="85.1780%" y="261" width="0.0102%" height="15" fill="rgb(242,105,53)"/><text x="85.4280%" y="271.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__reset (5 samples, 0.05%)</title><rect x="85.1882%" y="261" width="0.0510%" height="15" fill="rgb(251,132,46)"/><text x="85.4382%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="85.2596%" y="245" width="0.0102%" height="15" fill="rgb(231,77,14)"/><text x="85.5096%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="85.2902%" y="229" width="0.0204%" height="15" fill="rgb(240,135,9)"/><text x="85.5402%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="85.4330%" y="197" width="0.0102%" height="15" fill="rgb(248,109,14)"/><text x="85.6830%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="85.4432%" y="197" width="0.0204%" height="15" fill="rgb(227,146,52)"/><text x="85.6932%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.11%)</title><rect x="85.4636%" y="197" width="0.1122%" height="15" fill="rgb(232,54,3)"/><text x="85.7136%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="85.5452%" y="181" width="0.0306%" height="15" fill="rgb(229,201,43)"/><text x="85.7952%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.28%)</title><rect x="85.3106%" y="229" width="0.2754%" height="15" fill="rgb(252,161,33)"/><text x="85.5606%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.24%)</title><rect x="85.3412%" y="213" width="0.2448%" height="15" fill="rgb(226,146,40)"/><text x="85.5912%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_unlock_slow (1 samples, 0.01%)</title><rect x="85.5758%" y="197" width="0.0102%" height="15" fill="rgb(219,47,25)"/><text x="85.8258%" y="207.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (95 samples, 0.97%)</title><rect x="84.6272%" y="293" width="0.9691%" height="15" fill="rgb(250,135,13)"/><text x="84.8772%" y="303.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::bin_op_async::_{{closure}} (88 samples, 0.90%)</title><rect x="84.6986%" y="277" width="0.8977%" height="15" fill="rgb(219,229,18)"/><text x="84.9486%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (35 samples, 0.36%)</title><rect x="85.2392%" y="261" width="0.3570%" height="15" fill="rgb(217,152,27)"/><text x="85.4892%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (32 samples, 0.33%)</title><rect x="85.2698%" y="245" width="0.3264%" height="15" fill="rgb(225,71,47)"/><text x="85.5198%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="85.5860%" y="229" width="0.0102%" height="15" fill="rgb(220,139,14)"/><text x="85.8360%" y="239.50"></text></g><g><title>deno_hyper_bin`deno_core::ops::OpTable::route_op (107 samples, 1.09%)</title><rect x="84.5353%" y="309" width="1.0915%" height="15" fill="rgb(247,54,32)"/><text x="84.7853%" y="319.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::bin_op_async::_{{closure}} (3 samples, 0.03%)</title><rect x="85.5962%" y="293" width="0.0306%" height="15" fill="rgb(252,131,39)"/><text x="85.8462%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="85.6268%" y="293" width="0.0102%" height="15" fill="rgb(210,108,39)"/><text x="85.8768%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::Data (1 samples, 0.01%)</title><rect x="85.6268%" y="277" width="0.0102%" height="15" fill="rgb(205,23,29)"/><text x="85.8768%" y="287.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::as_u32_slice (3 samples, 0.03%)</title><rect x="85.6268%" y="309" width="0.0306%" height="15" fill="rgb(246,139,46)"/><text x="85.8768%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (2 samples, 0.02%)</title><rect x="85.6370%" y="293" width="0.0204%" height="15" fill="rgb(250,81,26)"/><text x="85.8870%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="85.9227%" y="229" width="0.0102%" height="15" fill="rgb(214,104,7)"/><text x="86.1727%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.05%)</title><rect x="85.9329%" y="229" width="0.0510%" height="15" fill="rgb(233,189,8)"/><text x="86.1829%" y="239.50"></text></g><g><title>deno_hyper_bin`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (38 samples, 0.39%)</title><rect x="85.6575%" y="309" width="0.3876%" height="15" fill="rgb(228,141,17)"/><text x="85.9075%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (27 samples, 0.28%)</title><rect x="85.7697%" y="293" width="0.2754%" height="15" fill="rgb(247,157,1)"/><text x="86.0197%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (25 samples, 0.26%)</title><rect x="85.7901%" y="277" width="0.2550%" height="15" fill="rgb(249,225,5)"/><text x="86.0401%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.23%)</title><rect x="85.8105%" y="261" width="0.2346%" height="15" fill="rgb(242,55,13)"/><text x="86.0605%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.22%)</title><rect x="85.8207%" y="245" width="0.2244%" height="15" fill="rgb(230,49,50)"/><text x="86.0707%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.06%)</title><rect x="85.9839%" y="229" width="0.0612%" height="15" fill="rgb(241,111,38)"/><text x="86.2339%" y="239.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Integer&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="86.0451%" y="309" width="0.0102%" height="15" fill="rgb(252,155,4)"/><text x="86.2951%" y="319.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::FunctionCallbackArguments::length (1 samples, 0.01%)</title><rect x="86.0553%" y="309" width="0.0102%" height="15" fill="rgb(212,69,32)"/><text x="86.3053%" y="319.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::get_annex (1 samples, 0.01%)</title><rect x="86.0655%" y="309" width="0.0102%" height="15" fill="rgb(243,107,47)"/><text x="86.3155%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="86.1369%" y="293" width="0.0102%" height="15" fill="rgb(247,130,12)"/><text x="86.3869%" y="303.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::get_slot (9 samples, 0.09%)</title><rect x="86.0757%" y="309" width="0.0918%" height="15" fill="rgb(233,74,16)"/><text x="86.3257%" y="319.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.02%)</title><rect x="86.1471%" y="293" width="0.0204%" height="15" fill="rgb(208,58,18)"/><text x="86.3971%" y="303.50"></text></g><g><title>deno_hyper_bin`smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.01%)</title><rect x="86.1675%" y="309" width="0.0102%" height="15" fill="rgb(242,225,1)"/><text x="86.4175%" y="319.50"></text></g><g><title>deno_hyper_bin`std__shared_ptr__v8__BackingStore__get (1 samples, 0.01%)</title><rect x="86.1777%" y="309" width="0.0102%" height="15" fill="rgb(249,39,40)"/><text x="86.4277%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (3 samples, 0.03%)</title><rect x="86.1879%" y="309" width="0.0306%" height="15" fill="rgb(207,72,44)"/><text x="86.4379%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::Value::IsInt32 (1 samples, 0.01%)</title><rect x="86.2185%" y="309" width="0.0102%" height="15" fill="rgb(215,193,12)"/><text x="86.4685%" y="319.50"></text></g><g><title>deno_hyper_bin`v8__BackingStore__ByteLength (1 samples, 0.01%)</title><rect x="86.2287%" y="309" width="0.0102%" height="15" fill="rgb(248,41,39)"/><text x="86.4787%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.06%)</title><rect x="86.4633%" y="245" width="0.0612%" height="15" fill="rgb(253,85,4)"/><text x="86.7133%" y="255.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::send (274 samples, 2.80%)</title><rect x="83.8009%" y="325" width="2.7951%" height="15" fill="rgb(243,70,31)"/><text x="84.0509%" y="335.50">de..</text></g><g><title>libsystem_malloc.dylib`malloc (35 samples, 0.36%)</title><rect x="86.2389%" y="309" width="0.3570%" height="15" fill="rgb(253,195,26)"/><text x="86.4889%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (32 samples, 0.33%)</title><rect x="86.2695%" y="293" width="0.3264%" height="15" fill="rgb(243,42,11)"/><text x="86.5195%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.28%)</title><rect x="86.3205%" y="277" width="0.2754%" height="15" fill="rgb(239,66,17)"/><text x="86.5705%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.27%)</title><rect x="86.3307%" y="261" width="0.2652%" height="15" fill="rgb(217,132,21)"/><text x="86.5807%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="86.5245%" y="245" width="0.0714%" height="15" fill="rgb(252,202,21)"/><text x="86.7745%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="86.5857%" y="229" width="0.0102%" height="15" fill="rgb(233,98,36)"/><text x="86.8357%" y="239.50"></text></g><g><title>deno_hyper_bin`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (3 samples, 0.03%)</title><rect x="86.5959%" y="325" width="0.0306%" height="15" fill="rgb(216,153,54)"/><text x="86.8459%" y="335.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Integer&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="86.6265%" y="325" width="0.0102%" height="15" fill="rgb(250,99,7)"/><text x="86.8765%" y="335.50"></text></g><g><title>deno_hyper_bin`rusty_v8::number::_&lt;impl rusty_v8::data::Integer&gt;::value (2 samples, 0.02%)</title><rect x="86.6367%" y="325" width="0.0204%" height="15" fill="rgb(207,56,50)"/><text x="86.8867%" y="335.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::get_current_mut (3 samples, 0.03%)</title><rect x="86.6571%" y="325" width="0.0306%" height="15" fill="rgb(244,61,34)"/><text x="86.9071%" y="335.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__GetData (2 samples, 0.02%)</title><rect x="86.6673%" y="309" width="0.0204%" height="15" fill="rgb(241,50,38)"/><text x="86.9173%" y="319.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::new_callback_scope_data (2 samples, 0.02%)</title><rect x="86.6877%" y="325" width="0.0204%" height="15" fill="rgb(212,166,30)"/><text x="86.9377%" y="335.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::notify_scope_dropped (5 samples, 0.05%)</title><rect x="86.7082%" y="325" width="0.0510%" height="15" fill="rgb(249,127,32)"/><text x="86.9582%" y="335.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (4 samples, 0.04%)</title><rect x="86.7184%" y="309" width="0.0408%" height="15" fill="rgb(209,103,0)"/><text x="86.9684%" y="319.50"></text></g><g><title>deno_hyper_bin`v8__FunctionCallbackInfo__GetReturnValue (1 samples, 0.01%)</title><rect x="86.7592%" y="325" width="0.0102%" height="15" fill="rgb(238,209,51)"/><text x="87.0092%" y="335.50"></text></g><g><title>deno_hyper_bin`v8__Integer__Value (1 samples, 0.01%)</title><rect x="86.7694%" y="325" width="0.0102%" height="15" fill="rgb(237,56,23)"/><text x="87.0194%" y="335.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__GetData (1 samples, 0.01%)</title><rect x="86.7796%" y="325" width="0.0102%" height="15" fill="rgb(215,153,46)"/><text x="87.0296%" y="335.50"></text></g><g><title>deno_hyper_bin`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (298 samples, 3.04%)</title><rect x="83.7601%" y="341" width="3.0399%" height="15" fill="rgb(224,49,31)"/><text x="84.0101%" y="351.50">den..</text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="86.7898%" y="325" width="0.0102%" height="15" fill="rgb(250,18,42)"/><text x="87.0398%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (319 samples, 3.25%)</title><rect x="83.5561%" y="405" width="3.2541%" height="15" fill="rgb(215,176,39)"/><text x="83.8061%" y="415.50">den..</text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_HandleApiCall (318 samples, 3.24%)</title><rect x="83.5663%" y="389" width="3.2439%" height="15" fill="rgb(223,77,29)"/><text x="83.8163%" y="399.50">den..</text></g><g><title>deno_hyper_bin`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (306 samples, 3.12%)</title><rect x="83.6887%" y="373" width="3.1215%" height="15" fill="rgb(234,94,52)"/><text x="83.9387%" y="383.50">den..</text></g><g><title>deno_hyper_bin`v8::internal::FunctionCallbackArguments::Call (306 samples, 3.12%)</title><rect x="83.6887%" y="357" width="3.1215%" height="15" fill="rgb(220,154,50)"/><text x="83.9387%" y="367.50">den..</text></g><g><title>deno_hyper_bin`rusty_v8::function::ReturnValue::from_function_callback_info (1 samples, 0.01%)</title><rect x="86.8000%" y="341" width="0.0102%" height="15" fill="rgb(212,11,10)"/><text x="87.0500%" y="351.50"></text></g><g><title>deno_hyper_bin`Builtins_CallWithSpread (7 samples, 0.07%)</title><rect x="86.8102%" y="405" width="0.0714%" height="15" fill="rgb(205,166,19)"/><text x="87.0602%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_HandleApiCall (1 samples, 0.01%)</title><rect x="86.8816%" y="405" width="0.0102%" height="15" fill="rgb(244,198,16)"/><text x="87.1316%" y="415.50"></text></g><g><title>0x1372000883e7 (328 samples, 3.35%)</title><rect x="83.5561%" y="421" width="3.3459%" height="15" fill="rgb(219,69,12)"/><text x="83.8061%" y="431.50">0x1..</text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_HandleApiCall (1 samples, 0.01%)</title><rect x="86.8918%" y="405" width="0.0102%" height="15" fill="rgb(245,30,7)"/><text x="87.1418%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionPrologueInSafepoint (1 samples, 0.01%)</title><rect x="87.0856%" y="277" width="0.0102%" height="15" fill="rgb(218,221,48)"/><text x="87.3356%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::LargeObjectSpace::SizeOfObjects (1 samples, 0.01%)</title><rect x="87.0856%" y="261" width="0.0102%" height="15" fill="rgb(216,66,15)"/><text x="87.3356%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (1 samples, 0.01%)</title><rect x="87.0958%" y="245" width="0.0102%" height="15" fill="rgb(226,122,50)"/><text x="87.3458%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::SerializerDeserializer::Iterate (1 samples, 0.01%)</title><rect x="87.0958%" y="229" width="0.0102%" height="15" fill="rgb(239,156,16)"/><text x="87.3458%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::RootScavengeVisitor::VisitRootPointer (1 samples, 0.01%)</title><rect x="87.0958%" y="213" width="0.0102%" height="15" fill="rgb(224,27,38)"/><text x="87.3458%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::RootVisitor::Synchronize (1 samples, 0.01%)</title><rect x="87.1060%" y="245" width="0.0102%" height="15" fill="rgb(224,39,27)"/><text x="87.3560%" y="255.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (4 samples, 0.04%)</title><rect x="87.0856%" y="389" width="0.0408%" height="15" fill="rgb(215,92,29)"/><text x="87.3356%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (4 samples, 0.04%)</title><rect x="87.0856%" y="373" width="0.0408%" height="15" fill="rgb(207,159,16)"/><text x="87.3356%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (4 samples, 0.04%)</title><rect x="87.0856%" y="357" width="0.0408%" height="15" fill="rgb(238,163,47)"/><text x="87.3356%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="87.0856%" y="341" width="0.0408%" height="15" fill="rgb(219,91,49)"/><text x="87.3356%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.04%)</title><rect x="87.0856%" y="325" width="0.0408%" height="15" fill="rgb(227,167,31)"/><text x="87.3356%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (4 samples, 0.04%)</title><rect x="87.0856%" y="309" width="0.0408%" height="15" fill="rgb(234,80,54)"/><text x="87.3356%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.04%)</title><rect x="87.0856%" y="293" width="0.0408%" height="15" fill="rgb(212,114,2)"/><text x="87.3356%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (3 samples, 0.03%)</title><rect x="87.0958%" y="277" width="0.0306%" height="15" fill="rgb(234,50,24)"/><text x="87.3458%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="87.0958%" y="261" width="0.0306%" height="15" fill="rgb(221,68,8)"/><text x="87.3458%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobHandle::Join (1 samples, 0.01%)</title><rect x="87.1162%" y="245" width="0.0102%" height="15" fill="rgb(254,180,31)"/><text x="87.3662%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.01%)</title><rect x="87.1162%" y="229" width="0.0102%" height="15" fill="rgb(247,130,50)"/><text x="87.3662%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.01%)</title><rect x="87.1162%" y="213" width="0.0102%" height="15" fill="rgb(211,109,4)"/><text x="87.3662%" y="223.50"></text></g><g><title>0x137200088400 (26 samples, 0.27%)</title><rect x="86.9020%" y="421" width="0.2652%" height="15" fill="rgb(238,50,21)"/><text x="87.1520%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_AsyncFunctionAwaitUncaught (25 samples, 0.26%)</title><rect x="86.9122%" y="405" width="0.2550%" height="15" fill="rgb(225,57,45)"/><text x="87.1622%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_PerformPromiseThen (4 samples, 0.04%)</title><rect x="87.1264%" y="389" width="0.0408%" height="15" fill="rgb(209,196,50)"/><text x="87.3764%" y="399.50"></text></g><g><title>0x137200088408 (1 samples, 0.01%)</title><rect x="87.1672%" y="421" width="0.0102%" height="15" fill="rgb(242,140,13)"/><text x="87.4172%" y="431.50"></text></g><g><title>0x137200088422 (2 samples, 0.02%)</title><rect x="87.1774%" y="421" width="0.0204%" height="15" fill="rgb(217,111,7)"/><text x="87.4274%" y="431.50"></text></g><g><title>0x137200088428 (1 samples, 0.01%)</title><rect x="87.1978%" y="421" width="0.0102%" height="15" fill="rgb(253,193,51)"/><text x="87.4478%" y="431.50"></text></g><g><title>0x137200088475 (1 samples, 0.01%)</title><rect x="87.2080%" y="421" width="0.0102%" height="15" fill="rgb(252,70,29)"/><text x="87.4580%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (1 samples, 0.01%)</title><rect x="87.2182%" y="293" width="0.0102%" height="15" fill="rgb(232,127,12)"/><text x="87.4682%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::ReduceNewSpaceSize (1 samples, 0.01%)</title><rect x="87.2182%" y="277" width="0.0102%" height="15" fill="rgb(211,180,21)"/><text x="87.4682%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::AllocationThroughputInBytesPerMillisecond (1 samples, 0.01%)</title><rect x="87.2182%" y="261" width="0.0102%" height="15" fill="rgb(229,72,13)"/><text x="87.4682%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::Iterate (1 samples, 0.01%)</title><rect x="87.2284%" y="245" width="0.0102%" height="15" fill="rgb(240,211,49)"/><text x="87.4784%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::StackFrameIteratorBase::StackFrameIteratorBase (1 samples, 0.01%)</title><rect x="87.2284%" y="229" width="0.0102%" height="15" fill="rgb(219,149,40)"/><text x="87.4784%" y="239.50"></text></g><g><title>0x13720008852b (3 samples, 0.03%)</title><rect x="87.2182%" y="421" width="0.0306%" height="15" fill="rgb(210,127,46)"/><text x="87.4682%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.03%)</title><rect x="87.2182%" y="405" width="0.0306%" height="15" fill="rgb(220,106,7)"/><text x="87.4682%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (3 samples, 0.03%)</title><rect x="87.2182%" y="389" width="0.0306%" height="15" fill="rgb(249,31,22)"/><text x="87.4682%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (3 samples, 0.03%)</title><rect x="87.2182%" y="373" width="0.0306%" height="15" fill="rgb(253,1,49)"/><text x="87.4682%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (3 samples, 0.03%)</title><rect x="87.2182%" y="357" width="0.0306%" height="15" fill="rgb(227,144,33)"/><text x="87.4682%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="87.2182%" y="341" width="0.0306%" height="15" fill="rgb(249,163,44)"/><text x="87.4682%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="87.2182%" y="325" width="0.0306%" height="15" fill="rgb(234,15,39)"/><text x="87.4682%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="87.2182%" y="309" width="0.0306%" height="15" fill="rgb(207,66,16)"/><text x="87.4682%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="87.2284%" y="293" width="0.0204%" height="15" fill="rgb(233,112,24)"/><text x="87.4784%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.02%)</title><rect x="87.2284%" y="277" width="0.0204%" height="15" fill="rgb(230,90,22)"/><text x="87.4784%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (2 samples, 0.02%)</title><rect x="87.2284%" y="261" width="0.0204%" height="15" fill="rgb(229,61,13)"/><text x="87.4784%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::SerializerDeserializer::Iterate (1 samples, 0.01%)</title><rect x="87.2386%" y="245" width="0.0102%" height="15" fill="rgb(225,57,24)"/><text x="87.4886%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::RootScavengeVisitor::VisitRootPointer (1 samples, 0.01%)</title><rect x="87.2386%" y="229" width="0.0102%" height="15" fill="rgb(208,169,48)"/><text x="87.4886%" y="239.50"></text></g><g><title>0x1372000885a0 (1 samples, 0.01%)</title><rect x="87.2488%" y="421" width="0.0102%" height="15" fill="rgb(244,218,51)"/><text x="87.4988%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="87.2488%" y="405" width="0.0102%" height="15" fill="rgb(214,148,10)"/><text x="87.4988%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.01%)</title><rect x="87.2488%" y="389" width="0.0102%" height="15" fill="rgb(225,174,27)"/><text x="87.4988%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (1 samples, 0.01%)</title><rect x="87.2488%" y="373" width="0.0102%" height="15" fill="rgb(230,96,26)"/><text x="87.4988%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.01%)</title><rect x="87.2488%" y="357" width="0.0102%" height="15" fill="rgb(232,10,30)"/><text x="87.4988%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (1 samples, 0.01%)</title><rect x="87.2488%" y="341" width="0.0102%" height="15" fill="rgb(222,8,50)"/><text x="87.4988%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (1 samples, 0.01%)</title><rect x="87.2488%" y="325" width="0.0102%" height="15" fill="rgb(213,81,27)"/><text x="87.4988%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (1 samples, 0.01%)</title><rect x="87.2488%" y="309" width="0.0102%" height="15" fill="rgb(245,50,10)"/><text x="87.4988%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (1 samples, 0.01%)</title><rect x="87.2488%" y="293" width="0.0102%" height="15" fill="rgb(216,100,18)"/><text x="87.4988%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.01%)</title><rect x="87.2488%" y="277" width="0.0102%" height="15" fill="rgb(236,147,54)"/><text x="87.4988%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Scavenger::~Scavenger (1 samples, 0.01%)</title><rect x="87.2488%" y="261" width="0.0102%" height="15" fill="rgb(205,143,26)"/><text x="87.4988%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::PagedSpace::~PagedSpace (1 samples, 0.01%)</title><rect x="87.2488%" y="245" width="0.0102%" height="15" fill="rgb(236,26,9)"/><text x="87.4988%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::PagedSpace::TearDown (1 samples, 0.01%)</title><rect x="87.2488%" y="229" width="0.0102%" height="15" fill="rgb(221,165,53)"/><text x="87.4988%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::EnsureAllocation (1 samples, 0.01%)</title><rect x="87.2590%" y="293" width="0.0102%" height="15" fill="rgb(214,110,17)"/><text x="87.5090%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::AllocationCounter::AdvanceAllocationObservers (1 samples, 0.01%)</title><rect x="87.2590%" y="277" width="0.0102%" height="15" fill="rgb(237,197,12)"/><text x="87.5090%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::AllocateRawSlow (2 samples, 0.02%)</title><rect x="87.2590%" y="309" width="0.0204%" height="15" fill="rgb(205,84,17)"/><text x="87.5090%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::SpaceWithLinearArea::InvokeAllocationObservers (1 samples, 0.01%)</title><rect x="87.2692%" y="293" width="0.0102%" height="15" fill="rgb(237,18,45)"/><text x="87.5192%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRaw (3 samples, 0.03%)</title><rect x="87.2590%" y="325" width="0.0306%" height="15" fill="rgb(221,87,14)"/><text x="87.5090%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::NewSpace::EnsureAllocation (1 samples, 0.01%)</title><rect x="87.2794%" y="309" width="0.0102%" height="15" fill="rgb(238,186,15)"/><text x="87.5294%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Stop (1 samples, 0.01%)</title><rect x="87.2896%" y="309" width="0.0102%" height="15" fill="rgb(208,115,11)"/><text x="87.5396%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Print (1 samples, 0.01%)</title><rect x="87.2896%" y="293" width="0.0102%" height="15" fill="rgb(254,175,0)"/><text x="87.5396%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::GCTracer::Output (1 samples, 0.01%)</title><rect x="87.2896%" y="277" width="0.0102%" height="15" fill="rgb(227,24,42)"/><text x="87.5396%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::base::OS::VSNPrintF (1 samples, 0.01%)</title><rect x="87.2896%" y="261" width="0.0102%" height="15" fill="rgb(223,211,37)"/><text x="87.5396%" y="271.50"></text></g><g><title>libsystem_c.dylib`vsnprintf (1 samples, 0.01%)</title><rect x="87.2896%" y="245" width="0.0102%" height="15" fill="rgb(235,49,27)"/><text x="87.5396%" y="255.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.01%)</title><rect x="87.2896%" y="229" width="0.0102%" height="15" fill="rgb(254,97,51)"/><text x="87.5396%" y="239.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.01%)</title><rect x="87.2896%" y="213" width="0.0102%" height="15" fill="rgb(249,51,40)"/><text x="87.5396%" y="223.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.01%)</title><rect x="87.2896%" y="197" width="0.0102%" height="15" fill="rgb(210,128,45)"/><text x="87.5396%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionEpilogueInSafepoint (1 samples, 0.01%)</title><rect x="87.2998%" y="309" width="0.0102%" height="15" fill="rgb(224,137,50)"/><text x="87.5498%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::GarbageCollectionPrologue (1 samples, 0.01%)</title><rect x="87.3100%" y="309" width="0.0102%" height="15" fill="rgb(242,15,9)"/><text x="87.5600%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="87.3100%" y="293" width="0.0102%" height="15" fill="rgb(233,187,41)"/><text x="87.5600%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Worklist&lt;v8::internal::Scavenger::PromotionListEntry, 4&gt;::~Worklist (1 samples, 0.01%)</title><rect x="87.3202%" y="261" width="0.0102%" height="15" fill="rgb(227,2,29)"/><text x="87.5702%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="87.3202%" y="245" width="0.0102%" height="15" fill="rgb(222,70,3)"/><text x="87.5702%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="87.3202%" y="309" width="0.0306%" height="15" fill="rgb(213,11,42)"/><text x="87.5702%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::Scavenge (3 samples, 0.03%)</title><rect x="87.3202%" y="293" width="0.0306%" height="15" fill="rgb(225,150,9)"/><text x="87.5702%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="87.3202%" y="277" width="0.0306%" height="15" fill="rgb(230,162,45)"/><text x="87.5702%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobHandle::Join (2 samples, 0.02%)</title><rect x="87.3304%" y="261" width="0.0204%" height="15" fill="rgb(222,14,52)"/><text x="87.5804%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobState::~DefaultJobState (2 samples, 0.02%)</title><rect x="87.3304%" y="245" width="0.0204%" height="15" fill="rgb(254,198,14)"/><text x="87.5804%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::base::ConditionVariable::~ConditionVariable (2 samples, 0.02%)</title><rect x="87.3304%" y="229" width="0.0204%" height="15" fill="rgb(220,217,30)"/><text x="87.5804%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.02%)</title><rect x="87.3304%" y="213" width="0.0204%" height="15" fill="rgb(215,146,41)"/><text x="87.5804%" y="223.50"></text></g><g><title>0x1372000887b7 (10 samples, 0.10%)</title><rect x="87.2590%" y="421" width="0.1020%" height="15" fill="rgb(217,27,36)"/><text x="87.5090%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (10 samples, 0.10%)</title><rect x="87.2590%" y="405" width="0.1020%" height="15" fill="rgb(219,218,39)"/><text x="87.5090%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_AllocateInYoungGeneration (10 samples, 0.10%)</title><rect x="87.2590%" y="389" width="0.1020%" height="15" fill="rgb(219,4,42)"/><text x="87.5090%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewFillerObject (10 samples, 0.10%)</title><rect x="87.2590%" y="373" width="0.1020%" height="15" fill="rgb(249,119,36)"/><text x="87.5090%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (10 samples, 0.10%)</title><rect x="87.2590%" y="357" width="0.1020%" height="15" fill="rgb(209,23,33)"/><text x="87.5090%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (10 samples, 0.10%)</title><rect x="87.2590%" y="341" width="0.1020%" height="15" fill="rgb(211,10,0)"/><text x="87.5090%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::CollectGarbage (7 samples, 0.07%)</title><rect x="87.2896%" y="325" width="0.0714%" height="15" fill="rgb(208,99,37)"/><text x="87.5396%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::StartIncrementalMarkingIfAllocationLimitIsReached (1 samples, 0.01%)</title><rect x="87.3508%" y="309" width="0.0102%" height="15" fill="rgb(213,132,31)"/><text x="87.6008%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::IncrementalMarking::CanBeActivated (1 samples, 0.01%)</title><rect x="87.3508%" y="293" width="0.0102%" height="15" fill="rgb(243,129,40)"/><text x="87.6008%" y="303.50"></text></g><g><title>0x13720008894c (3 samples, 0.03%)</title><rect x="87.3610%" y="421" width="0.0306%" height="15" fill="rgb(210,66,33)"/><text x="87.6110%" y="431.50"></text></g><g><title>0x137200088961 (1 samples, 0.01%)</title><rect x="87.3916%" y="421" width="0.0102%" height="15" fill="rgb(209,189,4)"/><text x="87.6416%" y="431.50"></text></g><g><title>0x137200088aed (1 samples, 0.01%)</title><rect x="87.4018%" y="421" width="0.0102%" height="15" fill="rgb(214,107,37)"/><text x="87.6518%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_AdaptorWithBuiltinExitFrame (1 samples, 0.01%)</title><rect x="87.4120%" y="421" width="0.0102%" height="15" fill="rgb(245,88,54)"/><text x="87.6620%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_AsyncFunctionAwaitUncaught (2 samples, 0.02%)</title><rect x="87.4222%" y="421" width="0.0204%" height="15" fill="rgb(205,146,20)"/><text x="87.6722%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="87.4426%" y="421" width="0.0102%" height="15" fill="rgb(220,161,25)"/><text x="87.6926%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_CallFunction_ReceiverIsAny (7 samples, 0.07%)</title><rect x="87.4528%" y="421" width="0.0714%" height="15" fill="rgb(215,152,15)"/><text x="87.7028%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_CallVarargs (4 samples, 0.04%)</title><rect x="87.5242%" y="421" width="0.0408%" height="15" fill="rgb(233,192,44)"/><text x="87.7742%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeSetBigUint64 (2 samples, 0.02%)</title><rect x="87.5650%" y="421" width="0.0204%" height="15" fill="rgb(240,170,46)"/><text x="87.8150%" y="431.50"></text></g><g><title>0x1372000861a7 (1 samples, 0.01%)</title><rect x="87.5854%" y="405" width="0.0102%" height="15" fill="rgb(207,104,33)"/><text x="87.8354%" y="415.50"></text></g><g><title>0x137200085643 (1 samples, 0.01%)</title><rect x="87.6058%" y="389" width="0.0102%" height="15" fill="rgb(219,21,39)"/><text x="87.8558%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="87.6058%" y="373" width="0.0102%" height="15" fill="rgb(214,133,29)"/><text x="87.8558%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Handle&lt;v8::internal::BigInt&gt; v8::internal::MutableBigInt::Zero&lt;v8::internal::Isolate&gt; (1 samples, 0.01%)</title><rect x="87.6058%" y="357" width="0.0102%" height="15" fill="rgb(226,93,6)"/><text x="87.8558%" y="367.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::new_backing_store_from_boxed_slice (1 samples, 0.01%)</title><rect x="87.6160%" y="261" width="0.0102%" height="15" fill="rgb(252,222,34)"/><text x="87.8660%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::BackingStore::WrapAllocation(void*, unsigned long, void (*) (1 samples, 0.01%)</title><rect x="87.6160%" y="245" width="0.0102%" height="15" fill="rgb(252,92,48)"/><text x="87.8660%" y="255.50"></text></g><g><title>deno_hyper_bin`operator new(unsigned long) (1 samples, 0.01%)</title><rect x="87.6160%" y="229" width="0.0102%" height="15" fill="rgb(245,223,24)"/><text x="87.8660%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="87.6160%" y="213" width="0.0102%" height="15" fill="rgb(205,176,3)"/><text x="87.8660%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.01%)</title><rect x="87.6160%" y="197" width="0.0102%" height="15" fill="rgb(235,151,15)"/><text x="87.8660%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="87.6160%" y="181" width="0.0102%" height="15" fill="rgb(237,209,11)"/><text x="87.8660%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="87.6160%" y="165" width="0.0102%" height="15" fill="rgb(243,227,24)"/><text x="87.8660%" y="175.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::with_backing_store (1 samples, 0.01%)</title><rect x="87.6262%" y="261" width="0.0102%" height="15" fill="rgb(239,193,16)"/><text x="87.8762%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBuffer::New(v8::Isolate*, std::__1::shared_ptr (1 samples, 0.01%)</title><rect x="87.6262%" y="245" width="0.0102%" height="15" fill="rgb(231,27,9)"/><text x="87.8762%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSArrayBuffer(std::__1::shared_ptr (1 samples, 0.01%)</title><rect x="87.6262%" y="229" width="0.0102%" height="15" fill="rgb(219,169,10)"/><text x="87.8762%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::Isolate::AdjustAmountOfExternalAllocatedMemory (1 samples, 0.01%)</title><rect x="87.6262%" y="213" width="0.0102%" height="15" fill="rgb(244,229,43)"/><text x="87.8762%" y="223.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::boxed_slice_to_uint8array (3 samples, 0.03%)</title><rect x="87.6160%" y="277" width="0.0306%" height="15" fill="rgb(254,38,20)"/><text x="87.8660%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::Uint8Array::New(v8::Local (1 samples, 0.01%)</title><rect x="87.6364%" y="261" width="0.0102%" height="15" fill="rgb(250,47,30)"/><text x="87.8864%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSTypedArray(v8::internal::ExternalArrayType, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.6364%" y="245" width="0.0102%" height="15" fill="rgb(224,124,36)"/><text x="87.8864%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::NewJSArrayBufferView(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::FixedArrayBase&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.6364%" y="229" width="0.0102%" height="15" fill="rgb(246,68,51)"/><text x="87.8864%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::GetHeaderSize (1 samples, 0.01%)</title><rect x="87.6364%" y="213" width="0.0102%" height="15" fill="rgb(253,43,49)"/><text x="87.8864%" y="223.50"></text></g><g><title>0x13720008582e (5 samples, 0.05%)</title><rect x="87.6160%" y="389" width="0.0510%" height="15" fill="rgb(219,54,36)"/><text x="87.8660%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (5 samples, 0.05%)</title><rect x="87.6160%" y="373" width="0.0510%" height="15" fill="rgb(227,133,34)"/><text x="87.8660%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_HandleApiCall (5 samples, 0.05%)</title><rect x="87.6160%" y="357" width="0.0510%" height="15" fill="rgb(247,227,15)"/><text x="87.8660%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (5 samples, 0.05%)</title><rect x="87.6160%" y="341" width="0.0510%" height="15" fill="rgb(229,96,14)"/><text x="87.8660%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::FunctionCallbackArguments::Call (5 samples, 0.05%)</title><rect x="87.6160%" y="325" width="0.0510%" height="15" fill="rgb(220,79,17)"/><text x="87.8660%" y="335.50"></text></g><g><title>deno_hyper_bin`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (5 samples, 0.05%)</title><rect x="87.6160%" y="309" width="0.0510%" height="15" fill="rgb(205,131,53)"/><text x="87.8660%" y="319.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::send (5 samples, 0.05%)</title><rect x="87.6160%" y="293" width="0.0510%" height="15" fill="rgb(209,50,29)"/><text x="87.8660%" y="303.50"></text></g><g><title>deno_hyper_bin`deno_core::ops::OpTable::route_op (2 samples, 0.02%)</title><rect x="87.6466%" y="277" width="0.0204%" height="15" fill="rgb(245,86,46)"/><text x="87.8966%" y="287.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.01%)</title><rect x="87.6568%" y="261" width="0.0102%" height="15" fill="rgb(235,66,46)"/><text x="87.9068%" y="271.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::bin_op_sync::_{{closure}} (1 samples, 0.01%)</title><rect x="87.6568%" y="245" width="0.0102%" height="15" fill="rgb(232,148,31)"/><text x="87.9068%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="87.6568%" y="229" width="0.0102%" height="15" fill="rgb(217,149,8)"/><text x="87.9068%" y="239.50"></text></g><g><title>0x137200085959 (1 samples, 0.01%)</title><rect x="87.6670%" y="389" width="0.0102%" height="15" fill="rgb(209,183,11)"/><text x="87.9170%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="87.6670%" y="373" width="0.0102%" height="15" fill="rgb(208,55,20)"/><text x="87.9170%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_TypedArrayPrototypeBuffer (1 samples, 0.01%)</title><rect x="87.6670%" y="357" width="0.0102%" height="15" fill="rgb(218,39,14)"/><text x="87.9170%" y="367.50"></text></g><g><title>0x1372000859ef (2 samples, 0.02%)</title><rect x="87.6772%" y="389" width="0.0204%" height="15" fill="rgb(216,169,33)"/><text x="87.9272%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (2 samples, 0.02%)</title><rect x="87.6772%" y="373" width="0.0204%" height="15" fill="rgb(233,80,24)"/><text x="87.9272%" y="383.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="87.6874%" y="357" width="0.0102%" height="15" fill="rgb(213,179,31)"/><text x="87.9374%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_DataViewConstructor (1 samples, 0.01%)</title><rect x="87.6874%" y="341" width="0.0102%" height="15" fill="rgb(209,19,5)"/><text x="87.9374%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::New(v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.6874%" y="325" width="0.0102%" height="15" fill="rgb(219,18,35)"/><text x="87.9374%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSFunction::GetDerivedMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.6874%" y="309" width="0.0102%" height="15" fill="rgb(209,169,16)"/><text x="87.9374%" y="319.50"></text></g><g><title>0x13720008629a (11 samples, 0.11%)</title><rect x="87.5956%" y="405" width="0.1122%" height="15" fill="rgb(245,90,51)"/><text x="87.8456%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_DataViewPrototypeSetBigUint64 (1 samples, 0.01%)</title><rect x="87.6976%" y="389" width="0.0102%" height="15" fill="rgb(220,99,45)"/><text x="87.9476%" y="399.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="87.7078%" y="293" width="0.0102%" height="15" fill="rgb(249,89,25)"/><text x="87.9578%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="87.7078%" y="277" width="0.0102%" height="15" fill="rgb(239,193,0)"/><text x="87.9578%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBufferView::Buffer (1 samples, 0.01%)</title><rect x="87.7078%" y="261" width="0.0102%" height="15" fill="rgb(231,126,1)"/><text x="87.9578%" y="271.50"></text></g><g><title>deno_hyper_bin`deno_core::ops::OpTable::route_op (1 samples, 0.01%)</title><rect x="87.7180%" y="293" width="0.0102%" height="15" fill="rgb(243,166,3)"/><text x="87.9680%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.01%)</title><rect x="87.7180%" y="277" width="0.0102%" height="15" fill="rgb(223,22,34)"/><text x="87.9680%" y="287.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::bin_op_async::_{{closure}} (1 samples, 0.01%)</title><rect x="87.7180%" y="261" width="0.0102%" height="15" fill="rgb(251,52,51)"/><text x="87.9680%" y="271.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="87.7180%" y="245" width="0.0102%" height="15" fill="rgb(221,165,28)"/><text x="87.9680%" y="255.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::send (3 samples, 0.03%)</title><rect x="87.7078%" y="309" width="0.0306%" height="15" fill="rgb(218,121,47)"/><text x="87.9578%" y="319.50"></text></g><g><title>deno_hyper_bin`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (1 samples, 0.01%)</title><rect x="87.7282%" y="293" width="0.0102%" height="15" fill="rgb(209,120,9)"/><text x="87.9782%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="87.7282%" y="277" width="0.0102%" height="15" fill="rgb(236,68,12)"/><text x="87.9782%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.01%)</title><rect x="87.7282%" y="261" width="0.0102%" height="15" fill="rgb(225,194,26)"/><text x="87.9782%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="87.7282%" y="245" width="0.0102%" height="15" fill="rgb(231,84,39)"/><text x="87.9782%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="87.7282%" y="229" width="0.0102%" height="15" fill="rgb(210,11,45)"/><text x="87.9782%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="87.7282%" y="213" width="0.0102%" height="15" fill="rgb(224,54,52)"/><text x="87.9782%" y="223.50"></text></g><g><title>0x137200086b27 (4 samples, 0.04%)</title><rect x="87.7078%" y="405" width="0.0408%" height="15" fill="rgb(238,102,14)"/><text x="87.9578%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (4 samples, 0.04%)</title><rect x="87.7078%" y="389" width="0.0408%" height="15" fill="rgb(243,160,52)"/><text x="87.9578%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_HandleApiCall (4 samples, 0.04%)</title><rect x="87.7078%" y="373" width="0.0408%" height="15" fill="rgb(216,114,19)"/><text x="87.9578%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="87.7078%" y="357" width="0.0408%" height="15" fill="rgb(244,166,37)"/><text x="87.9578%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::FunctionCallbackArguments::Call (4 samples, 0.04%)</title><rect x="87.7078%" y="341" width="0.0408%" height="15" fill="rgb(246,29,44)"/><text x="87.9578%" y="351.50"></text></g><g><title>deno_hyper_bin`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4 samples, 0.04%)</title><rect x="87.7078%" y="325" width="0.0408%" height="15" fill="rgb(215,56,53)"/><text x="87.9578%" y="335.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__SetData (1 samples, 0.01%)</title><rect x="87.7384%" y="309" width="0.0102%" height="15" fill="rgb(217,60,2)"/><text x="87.9884%" y="319.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="87.7486%" y="405" width="0.0102%" height="15" fill="rgb(207,26,24)"/><text x="87.9986%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (1 samples, 0.01%)</title><rect x="87.7486%" y="389" width="0.0102%" height="15" fill="rgb(252,210,15)"/><text x="87.9986%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.7486%" y="373" width="0.0102%" height="15" fill="rgb(253,209,26)"/><text x="87.9986%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.7486%" y="357" width="0.0102%" height="15" fill="rgb(238,170,14)"/><text x="87.9986%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.7486%" y="341" width="0.0102%" height="15" fill="rgb(216,178,15)"/><text x="87.9986%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (1 samples, 0.01%)</title><rect x="87.7486%" y="325" width="0.0102%" height="15" fill="rgb(250,197,2)"/><text x="87.9986%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (1 samples, 0.01%)</title><rect x="87.7486%" y="309" width="0.0102%" height="15" fill="rgb(212,70,42)"/><text x="87.9986%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (1 samples, 0.01%)</title><rect x="87.7486%" y="293" width="0.0102%" height="15" fill="rgb(227,213,9)"/><text x="87.9986%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (1 samples, 0.01%)</title><rect x="87.7486%" y="277" width="0.0102%" height="15" fill="rgb(245,99,25)"/><text x="87.9986%" y="287.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (1 samples, 0.01%)</title><rect x="87.7486%" y="261" width="0.0102%" height="15" fill="rgb(250,82,29)"/><text x="87.9986%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InliningPhase::Run (1 samples, 0.01%)</title><rect x="87.7486%" y="245" width="0.0102%" height="15" fill="rgb(241,226,54)"/><text x="87.9986%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.01%)</title><rect x="87.7486%" y="229" width="0.0102%" height="15" fill="rgb(221,99,41)"/><text x="87.9986%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.01%)</title><rect x="87.7486%" y="213" width="0.0102%" height="15" fill="rgb(213,90,21)"/><text x="87.9986%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.01%)</title><rect x="87.7486%" y="197" width="0.0102%" height="15" fill="rgb(205,208,24)"/><text x="87.9986%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSContextSpecialization::ReduceJSLoadContext (1 samples, 0.01%)</title><rect x="87.7486%" y="181" width="0.0102%" height="15" fill="rgb(246,31,12)"/><text x="87.9986%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::OperatorProperties::HasContextInput (1 samples, 0.01%)</title><rect x="87.7486%" y="165" width="0.0102%" height="15" fill="rgb(213,154,6)"/><text x="87.9986%" y="175.50"></text></g><g><title>deno_hyper_bin`Builtins_CreateFunctionContextHandler (1 samples, 0.01%)</title><rect x="87.7588%" y="405" width="0.0102%" height="15" fill="rgb(222,163,29)"/><text x="88.0088%" y="415.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.01%)</title><rect x="87.7691%" y="277" width="0.0102%" height="15" fill="rgb(227,201,8)"/><text x="88.0191%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSArrayBuffer::GetBackingStore (1 samples, 0.01%)</title><rect x="87.7793%" y="213" width="0.0102%" height="15" fill="rgb(233,9,32)"/><text x="88.0293%" y="223.50"></text></g><g><title>0x13720008582e (3 samples, 0.03%)</title><rect x="87.7691%" y="389" width="0.0306%" height="15" fill="rgb(217,54,24)"/><text x="88.0191%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (3 samples, 0.03%)</title><rect x="87.7691%" y="373" width="0.0306%" height="15" fill="rgb(235,192,0)"/><text x="88.0191%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_HandleApiCall (3 samples, 0.03%)</title><rect x="87.7691%" y="357" width="0.0306%" height="15" fill="rgb(235,45,9)"/><text x="88.0191%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (3 samples, 0.03%)</title><rect x="87.7691%" y="341" width="0.0306%" height="15" fill="rgb(246,42,40)"/><text x="88.0191%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::FunctionCallbackArguments::Call (3 samples, 0.03%)</title><rect x="87.7691%" y="325" width="0.0306%" height="15" fill="rgb(248,111,24)"/><text x="88.0191%" y="335.50"></text></g><g><title>deno_hyper_bin`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.03%)</title><rect x="87.7691%" y="309" width="0.0306%" height="15" fill="rgb(249,65,22)"/><text x="88.0191%" y="319.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::send (3 samples, 0.03%)</title><rect x="87.7691%" y="293" width="0.0306%" height="15" fill="rgb(238,111,51)"/><text x="88.0191%" y="303.50"></text></g><g><title>deno_hyper_bin`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="87.7793%" y="277" width="0.0204%" height="15" fill="rgb(250,118,22)"/><text x="88.0293%" y="287.50"></text></g><g><title>deno_hyper_bin`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="87.7793%" y="261" width="0.0204%" height="15" fill="rgb(234,84,26)"/><text x="88.0293%" y="271.50"></text></g><g><title>deno_hyper_bin`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::get_backing_store (2 samples, 0.02%)</title><rect x="87.7793%" y="245" width="0.0204%" height="15" fill="rgb(243,172,12)"/><text x="88.0293%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::ArrayBuffer::GetBackingStore (2 samples, 0.02%)</title><rect x="87.7793%" y="229" width="0.0204%" height="15" fill="rgb(236,150,49)"/><text x="88.0293%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="87.7895%" y="213" width="0.0102%" height="15" fill="rgb(225,197,26)"/><text x="88.0395%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::NativeContextData::Serialize (1 samples, 0.01%)</title><rect x="87.7997%" y="213" width="0.0102%" height="15" fill="rgb(214,17,42)"/><text x="88.0497%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ObjectData::IsMap (1 samples, 0.01%)</title><rect x="87.7997%" y="197" width="0.0102%" height="15" fill="rgb(224,165,40)"/><text x="88.0497%" y="207.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.02%)</title><rect x="87.7997%" y="389" width="0.0204%" height="15" fill="rgb(246,100,4)"/><text x="88.0497%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (2 samples, 0.02%)</title><rect x="87.7997%" y="373" width="0.0204%" height="15" fill="rgb(222,103,0)"/><text x="88.0497%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="87.7997%" y="357" width="0.0204%" height="15" fill="rgb(227,189,26)"/><text x="88.0497%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="87.7997%" y="341" width="0.0204%" height="15" fill="rgb(214,202,17)"/><text x="88.0497%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (2 samples, 0.02%)</title><rect x="87.7997%" y="325" width="0.0204%" height="15" fill="rgb(229,111,3)"/><text x="88.0497%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (2 samples, 0.02%)</title><rect x="87.7997%" y="309" width="0.0204%" height="15" fill="rgb(229,172,15)"/><text x="88.0497%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (2 samples, 0.02%)</title><rect x="87.7997%" y="293" width="0.0204%" height="15" fill="rgb(230,224,35)"/><text x="88.0497%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (2 samples, 0.02%)</title><rect x="87.7997%" y="277" width="0.0204%" height="15" fill="rgb(251,141,6)"/><text x="88.0497%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (2 samples, 0.02%)</title><rect x="87.7997%" y="261" width="0.0204%" height="15" fill="rgb(225,208,6)"/><text x="88.0497%" y="271.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::HeapBrokerInitializationPhase&gt; (2 samples, 0.02%)</title><rect x="87.7997%" y="245" width="0.0204%" height="15" fill="rgb(246,181,16)"/><text x="88.0497%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSHeapBroker::InitializeAndStartSerializing(v8::internal::Handle (2 samples, 0.02%)</title><rect x="87.7997%" y="229" width="0.0204%" height="15" fill="rgb(227,129,36)"/><text x="88.0497%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::NativeContextData::SerializeOnBackground (1 samples, 0.01%)</title><rect x="87.8099%" y="213" width="0.0102%" height="15" fill="rgb(248,117,24)"/><text x="88.0599%" y="223.50"></text></g><g><title>deno_hyper_bin`Builtins_CreateClosureHandler (1 samples, 0.01%)</title><rect x="87.8201%" y="389" width="0.0102%" height="15" fill="rgb(214,185,35)"/><text x="88.0701%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_IncHandler (1 samples, 0.01%)</title><rect x="87.8303%" y="389" width="0.0102%" height="15" fill="rgb(236,150,34)"/><text x="88.0803%" y="399.50"></text></g><g><title>0x137200084190 (1 samples, 0.01%)</title><rect x="87.8507%" y="373" width="0.0102%" height="15" fill="rgb(243,228,27)"/><text x="88.1007%" y="383.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="87.8507%" y="357" width="0.0102%" height="15" fill="rgb(245,77,44)"/><text x="88.1007%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_TypedArrayPrototypeBuffer (1 samples, 0.01%)</title><rect x="87.8507%" y="341" width="0.0102%" height="15" fill="rgb(235,214,42)"/><text x="88.1007%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSTypedArray::GetBuffer (1 samples, 0.01%)</title><rect x="87.8507%" y="325" width="0.0102%" height="15" fill="rgb(221,74,3)"/><text x="88.1007%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (4 samples, 0.04%)</title><rect x="87.8609%" y="373" width="0.0408%" height="15" fill="rgb(206,121,29)"/><text x="88.1109%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_HandleApiCall (4 samples, 0.04%)</title><rect x="87.8609%" y="357" width="0.0408%" height="15" fill="rgb(249,131,53)"/><text x="88.1109%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="87.8609%" y="341" width="0.0408%" height="15" fill="rgb(236,170,29)"/><text x="88.1109%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::FunctionCallbackArguments::Call (3 samples, 0.03%)</title><rect x="87.8711%" y="325" width="0.0306%" height="15" fill="rgb(247,96,15)"/><text x="88.1211%" y="335.50"></text></g><g><title>deno_hyper_bin`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.03%)</title><rect x="87.8711%" y="309" width="0.0306%" height="15" fill="rgb(211,210,7)"/><text x="88.1211%" y="319.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::send (3 samples, 0.03%)</title><rect x="87.8711%" y="293" width="0.0306%" height="15" fill="rgb(240,88,50)"/><text x="88.1211%" y="303.50"></text></g><g><title>deno_hyper_bin`deno_core::ops::OpTable::route_op (3 samples, 0.03%)</title><rect x="87.8711%" y="277" width="0.0306%" height="15" fill="rgb(209,229,26)"/><text x="88.1211%" y="287.50"></text></g><g><title>deno_hyper_bin`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2 samples, 0.02%)</title><rect x="87.8813%" y="261" width="0.0204%" height="15" fill="rgb(210,68,23)"/><text x="88.1313%" y="271.50"></text></g><g><title>deno_hyper_bin`deno_core::ops_bin::bin_op_sync::_{{closure}} (1 samples, 0.01%)</title><rect x="87.8915%" y="245" width="0.0102%" height="15" fill="rgb(229,180,13)"/><text x="88.1415%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="87.8915%" y="229" width="0.0102%" height="15" fill="rgb(236,53,44)"/><text x="88.1415%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.01%)</title><rect x="87.8915%" y="213" width="0.0102%" height="15" fill="rgb(244,214,29)"/><text x="88.1415%" y="223.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::CopyMetadataForConcurrentCompilePhase&gt; (1 samples, 0.01%)</title><rect x="87.9017%" y="229" width="0.0102%" height="15" fill="rgb(220,75,29)"/><text x="88.1517%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CopyMetadataForConcurrentCompilePhase::Run (1 samples, 0.01%)</title><rect x="87.9017%" y="213" width="0.0102%" height="15" fill="rgb(214,183,37)"/><text x="88.1517%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.01%)</title><rect x="87.9017%" y="197" width="0.0102%" height="15" fill="rgb(239,117,29)"/><text x="88.1517%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.01%)</title><rect x="87.9017%" y="181" width="0.0102%" height="15" fill="rgb(237,171,35)"/><text x="88.1517%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.01%)</title><rect x="87.9017%" y="165" width="0.0102%" height="15" fill="rgb(229,178,53)"/><text x="88.1517%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSHeapCopyReducer::Reduce (1 samples, 0.01%)</title><rect x="87.9017%" y="149" width="0.0102%" height="15" fill="rgb(210,102,19)"/><text x="88.1517%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ObjectRef::ObjectRef(v8::internal::compiler::JSHeapBroker*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9017%" y="133" width="0.0102%" height="15" fill="rgb(235,127,22)"/><text x="88.1517%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSHeapBroker::TryGetOrCreateData(v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9017%" y="117" width="0.0102%" height="15" fill="rgb(244,31,31)"/><text x="88.1517%" y="127.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::HeapObjectData::HeapObjectData(v8::internal::compiler::JSHeapBroker*, v8::internal::compiler::ObjectData**, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9017%" y="101" width="0.0102%" height="15" fill="rgb(231,43,21)"/><text x="88.1517%" y="111.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::JSHeapBroker::TryGetOrCreateData(v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9017%" y="85" width="0.0102%" height="15" fill="rgb(217,131,35)"/><text x="88.1517%" y="95.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::MapData::MapData(v8::internal::compiler::JSHeapBroker*, v8::internal::compiler::ObjectData**, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9017%" y="69" width="0.0102%" height="15" fill="rgb(221,149,4)"/><text x="88.1517%" y="79.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::HeapObjectData::HeapObjectData(v8::internal::compiler::JSHeapBroker*, v8::internal::compiler::ObjectData**, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9017%" y="53" width="0.0102%" height="15" fill="rgb(232,170,28)"/><text x="88.1517%" y="63.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ObjectData::ObjectData(v8::internal::compiler::JSHeapBroker*, v8::internal::compiler::ObjectData**, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9017%" y="37" width="0.0102%" height="15" fill="rgb(238,56,10)"/><text x="88.1517%" y="47.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.02%)</title><rect x="87.9017%" y="373" width="0.0204%" height="15" fill="rgb(235,196,14)"/><text x="88.1517%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (2 samples, 0.02%)</title><rect x="87.9017%" y="357" width="0.0204%" height="15" fill="rgb(216,45,48)"/><text x="88.1517%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="87.9017%" y="341" width="0.0204%" height="15" fill="rgb(238,213,17)"/><text x="88.1517%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="87.9017%" y="325" width="0.0204%" height="15" fill="rgb(212,13,2)"/><text x="88.1517%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (2 samples, 0.02%)</title><rect x="87.9017%" y="309" width="0.0204%" height="15" fill="rgb(240,114,20)"/><text x="88.1517%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (2 samples, 0.02%)</title><rect x="87.9017%" y="293" width="0.0204%" height="15" fill="rgb(228,41,40)"/><text x="88.1517%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (2 samples, 0.02%)</title><rect x="87.9017%" y="277" width="0.0204%" height="15" fill="rgb(244,132,35)"/><text x="88.1517%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (2 samples, 0.02%)</title><rect x="87.9017%" y="261" width="0.0204%" height="15" fill="rgb(253,189,4)"/><text x="88.1517%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (2 samples, 0.02%)</title><rect x="87.9017%" y="245" width="0.0204%" height="15" fill="rgb(224,37,19)"/><text x="88.1517%" y="255.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (1 samples, 0.01%)</title><rect x="87.9119%" y="229" width="0.0102%" height="15" fill="rgb(235,223,18)"/><text x="88.1619%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphBuilderPhase::Run (1 samples, 0.01%)</title><rect x="87.9119%" y="213" width="0.0102%" height="15" fill="rgb(235,163,25)"/><text x="88.1619%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BuildGraphFromBytecode(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::SharedFunctionInfoRef const&amp;, v8::internal::compiler::FeedbackCellRef const&amp;, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, int, v8::internal::CodeKind, v8::base::Flags (1 samples, 0.01%)</title><rect x="87.9119%" y="197" width="0.0102%" height="15" fill="rgb(217,145,28)"/><text x="88.1619%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (1 samples, 0.01%)</title><rect x="87.9119%" y="181" width="0.0102%" height="15" fill="rgb(223,223,32)"/><text x="88.1619%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (1 samples, 0.01%)</title><rect x="87.9119%" y="165" width="0.0102%" height="15" fill="rgb(227,189,39)"/><text x="88.1619%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::VisitSingleBytecode (1 samples, 0.01%)</title><rect x="87.9119%" y="149" width="0.0102%" height="15" fill="rgb(248,10,22)"/><text x="88.1619%" y="159.50"></text></g><g><title>deno_hyper_bin`Builtins_ConstructHandler (1 samples, 0.01%)</title><rect x="87.9221%" y="373" width="0.0102%" height="15" fill="rgb(248,46,39)"/><text x="88.1721%" y="383.50"></text></g><g><title>deno_hyper_bin`Builtins_JSBuiltinsConstructStub (1 samples, 0.01%)</title><rect x="87.9221%" y="357" width="0.0102%" height="15" fill="rgb(248,113,48)"/><text x="88.1721%" y="367.50"></text></g><g><title>deno_hyper_bin`Builtins_PromiseConstructor (1 samples, 0.01%)</title><rect x="87.9221%" y="341" width="0.0102%" height="15" fill="rgb(245,16,25)"/><text x="88.1721%" y="351.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (1 samples, 0.01%)</title><rect x="87.9221%" y="325" width="0.0102%" height="15" fill="rgb(249,152,16)"/><text x="88.1721%" y="335.50"></text></g><g><title>deno_hyper_bin`Builtins_StaInArrayLiteralHandler (1 samples, 0.01%)</title><rect x="87.9221%" y="309" width="0.0102%" height="15" fill="rgb(250,16,1)"/><text x="88.1721%" y="319.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="87.9323%" y="357" width="0.0102%" height="15" fill="rgb(249,138,3)"/><text x="88.1823%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (1 samples, 0.01%)</title><rect x="87.9323%" y="341" width="0.0102%" height="15" fill="rgb(227,71,41)"/><text x="88.1823%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9323%" y="325" width="0.0102%" height="15" fill="rgb(209,184,23)"/><text x="88.1823%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9323%" y="309" width="0.0102%" height="15" fill="rgb(223,215,31)"/><text x="88.1823%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9323%" y="293" width="0.0102%" height="15" fill="rgb(210,146,28)"/><text x="88.1823%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (1 samples, 0.01%)</title><rect x="87.9323%" y="277" width="0.0102%" height="15" fill="rgb(209,183,41)"/><text x="88.1823%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (1 samples, 0.01%)</title><rect x="87.9323%" y="261" width="0.0102%" height="15" fill="rgb(209,224,45)"/><text x="88.1823%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (1 samples, 0.01%)</title><rect x="87.9323%" y="245" width="0.0102%" height="15" fill="rgb(224,209,51)"/><text x="88.1823%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (1 samples, 0.01%)</title><rect x="87.9323%" y="229" width="0.0102%" height="15" fill="rgb(223,17,39)"/><text x="88.1823%" y="239.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (1 samples, 0.01%)</title><rect x="87.9323%" y="213" width="0.0102%" height="15" fill="rgb(234,204,37)"/><text x="88.1823%" y="223.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphBuilderPhase::Run (1 samples, 0.01%)</title><rect x="87.9323%" y="197" width="0.0102%" height="15" fill="rgb(236,120,5)"/><text x="88.1823%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BuildGraphFromBytecode(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::SharedFunctionInfoRef const&amp;, v8::internal::compiler::FeedbackCellRef const&amp;, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, int, v8::internal::CodeKind, v8::base::Flags (1 samples, 0.01%)</title><rect x="87.9323%" y="181" width="0.0102%" height="15" fill="rgb(248,97,27)"/><text x="88.1823%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeAnalysis::BytecodeAnalysis(v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9323%" y="165" width="0.0102%" height="15" fill="rgb(240,66,17)"/><text x="88.1823%" y="175.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.01%)</title><rect x="87.9425%" y="341" width="0.0102%" height="15" fill="rgb(210,79,3)"/><text x="88.1925%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Builtin_Impl_BigIntConstructor (1 samples, 0.01%)</title><rect x="87.9425%" y="325" width="0.0102%" height="15" fill="rgb(214,176,27)"/><text x="88.1925%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::MutableBigInt::NewFromInt (1 samples, 0.01%)</title><rect x="87.9425%" y="309" width="0.0102%" height="15" fill="rgb(235,185,3)"/><text x="88.1925%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewBigInt (1 samples, 0.01%)</title><rect x="87.9425%" y="293" width="0.0102%" height="15" fill="rgb(227,24,12)"/><text x="88.1925%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Factory::AllocateRaw (1 samples, 0.01%)</title><rect x="87.9425%" y="277" width="0.0102%" height="15" fill="rgb(252,169,48)"/><text x="88.1925%" y="287.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (3 samples, 0.03%)</title><rect x="87.9323%" y="373" width="0.0306%" height="15" fill="rgb(212,65,1)"/><text x="88.1823%" y="383.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (2 samples, 0.02%)</title><rect x="87.9425%" y="357" width="0.0204%" height="15" fill="rgb(242,39,24)"/><text x="88.1925%" y="367.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="87.9527%" y="341" width="0.0102%" height="15" fill="rgb(249,32,23)"/><text x="88.2027%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CompileOptimized_Concurrent (1 samples, 0.01%)</title><rect x="87.9527%" y="325" width="0.0102%" height="15" fill="rgb(251,195,23)"/><text x="88.2027%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9527%" y="309" width="0.0102%" height="15" fill="rgb(236,174,8)"/><text x="88.2027%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9527%" y="293" width="0.0102%" height="15" fill="rgb(220,197,8)"/><text x="88.2027%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (1 samples, 0.01%)</title><rect x="87.9527%" y="277" width="0.0102%" height="15" fill="rgb(240,108,37)"/><text x="88.2027%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (1 samples, 0.01%)</title><rect x="87.9527%" y="261" width="0.0102%" height="15" fill="rgb(232,176,24)"/><text x="88.2027%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::PrepareJob (1 samples, 0.01%)</title><rect x="87.9527%" y="245" width="0.0102%" height="15" fill="rgb(243,35,29)"/><text x="88.2027%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (1 samples, 0.01%)</title><rect x="87.9527%" y="229" width="0.0102%" height="15" fill="rgb(210,37,18)"/><text x="88.2027%" y="239.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::CreateGraph (1 samples, 0.01%)</title><rect x="87.9527%" y="213" width="0.0102%" height="15" fill="rgb(224,184,40)"/><text x="88.2027%" y="223.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (1 samples, 0.01%)</title><rect x="87.9527%" y="197" width="0.0102%" height="15" fill="rgb(236,39,29)"/><text x="88.2027%" y="207.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphBuilderPhase::Run (1 samples, 0.01%)</title><rect x="87.9527%" y="181" width="0.0102%" height="15" fill="rgb(232,48,39)"/><text x="88.2027%" y="191.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BuildGraphFromBytecode(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::SharedFunctionInfoRef const&amp;, v8::internal::compiler::FeedbackCellRef const&amp;, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, int, v8::internal::CodeKind, v8::base::Flags (1 samples, 0.01%)</title><rect x="87.9527%" y="165" width="0.0102%" height="15" fill="rgb(236,34,42)"/><text x="88.2027%" y="175.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (1 samples, 0.01%)</title><rect x="87.9527%" y="149" width="0.0102%" height="15" fill="rgb(243,106,37)"/><text x="88.2027%" y="159.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Graph::NewNode (1 samples, 0.01%)</title><rect x="87.9527%" y="133" width="0.0102%" height="15" fill="rgb(218,96,6)"/><text x="88.2027%" y="143.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::SourcePositionTable::Decorator::Decorate (1 samples, 0.01%)</title><rect x="87.9527%" y="117" width="0.0102%" height="15" fill="rgb(235,130,12)"/><text x="88.2027%" y="127.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (13 samples, 0.13%)</title><rect x="87.8405%" y="389" width="0.1326%" height="15" fill="rgb(231,95,0)"/><text x="88.0905%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_LdaKeyedPropertyHandler (1 samples, 0.01%)</title><rect x="87.9629%" y="373" width="0.0102%" height="15" fill="rgb(228,12,23)"/><text x="88.2129%" y="383.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadIC_Megamorphic (1 samples, 0.01%)</title><rect x="87.9629%" y="357" width="0.0102%" height="15" fill="rgb(216,12,1)"/><text x="88.2129%" y="367.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterPushArgsThenCallWithFinalSpread (1 samples, 0.01%)</title><rect x="87.9731%" y="389" width="0.0102%" height="15" fill="rgb(219,59,3)"/><text x="88.2231%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_JumpIfJSReceiverHandler (1 samples, 0.01%)</title><rect x="87.9833%" y="389" width="0.0102%" height="15" fill="rgb(215,208,46)"/><text x="88.2333%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (23 samples, 0.23%)</title><rect x="87.7691%" y="405" width="0.2346%" height="15" fill="rgb(254,224,29)"/><text x="88.0191%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_JumpIfNullHandler (1 samples, 0.01%)</title><rect x="87.9935%" y="389" width="0.0102%" height="15" fill="rgb(232,14,29)"/><text x="88.2435%" y="399.50"></text></g><g><title>deno_hyper_bin`Builtins_LdaNamedPropertyHandler (1 samples, 0.01%)</title><rect x="88.0037%" y="405" width="0.0102%" height="15" fill="rgb(208,45,52)"/><text x="88.2537%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (43 samples, 0.44%)</title><rect x="87.5854%" y="421" width="0.4386%" height="15" fill="rgb(234,191,28)"/><text x="87.8354%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadIC (1 samples, 0.01%)</title><rect x="88.0139%" y="405" width="0.0102%" height="15" fill="rgb(244,67,43)"/><text x="88.2639%" y="415.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedLoadIC_Megamorphic (1 samples, 0.01%)</title><rect x="88.0241%" y="421" width="0.0102%" height="15" fill="rgb(236,189,24)"/><text x="88.2741%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedStoreIC (2 samples, 0.02%)</title><rect x="88.0343%" y="421" width="0.0204%" height="15" fill="rgb(239,214,33)"/><text x="88.2843%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_KeyedStoreIC_Megamorphic (5 samples, 0.05%)</title><rect x="88.0547%" y="421" width="0.0510%" height="15" fill="rgb(226,176,41)"/><text x="88.3047%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_LoadIC (13 samples, 0.13%)</title><rect x="88.1057%" y="421" width="0.1326%" height="15" fill="rgb(248,47,8)"/><text x="88.3557%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_AsyncFunctionAwaitResolveClosure (1,553 samples, 15.84%)</title><rect x="72.5492%" y="437" width="15.8421%" height="15" fill="rgb(218,81,44)"/><text x="72.7992%" y="447.50">deno_hyper_bin`Builtins_..</text></g><g><title>deno_hyper_bin`Builtins_LoadICTrampoline (15 samples, 0.15%)</title><rect x="88.2383%" y="421" width="0.1530%" height="15" fill="rgb(213,98,6)"/><text x="88.4883%" y="431.50"></text></g><g><title>deno_hyper_bin`Builtins_JSRunMicrotasksEntry (1,613 samples, 16.45%)</title><rect x="72.0902%" y="485" width="16.4541%" height="15" fill="rgb(222,85,22)"/><text x="72.3402%" y="495.50">deno_hyper_bin`Builtins_J..</text></g><g><title>deno_hyper_bin`Builtins_RunMicrotasks (1,611 samples, 16.43%)</title><rect x="72.1106%" y="469" width="16.4337%" height="15" fill="rgb(239,46,39)"/><text x="72.3606%" y="479.50">deno_hyper_bin`Builtins_R..</text></g><g><title>deno_hyper_bin`Builtins_PromiseFulfillReactionJob (1,584 samples, 16.16%)</title><rect x="72.3860%" y="453" width="16.1583%" height="15" fill="rgb(237,12,29)"/><text x="72.6360%" y="463.50">deno_hyper_bin`Builtins_P..</text></g><g><title>deno_hyper_bin`Builtins_ResumeGeneratorTrampoline (15 samples, 0.15%)</title><rect x="88.3913%" y="437" width="0.1530%" height="15" fill="rgb(214,77,8)"/><text x="88.6413%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1,619 samples, 16.52%)</title><rect x="72.0392%" y="501" width="16.5154%" height="15" fill="rgb(217,168,37)"/><text x="72.2892%" y="511.50">deno_hyper_bin`v8::intern..</text></g><g><title>deno_hyper_bin`v8::internal::SaveContext::SaveContext (1 samples, 0.01%)</title><rect x="88.5443%" y="485" width="0.0102%" height="15" fill="rgb(221,217,23)"/><text x="88.7943%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::FireCallCompletedCallback (1,636 samples, 16.69%)</title><rect x="71.8760%" y="581" width="16.6888%" height="15" fill="rgb(243,229,36)"/><text x="72.1260%" y="591.50">deno_hyper_bin`v8::interna..</text></g><g><title>deno_hyper_bin`v8::internal::MicrotaskQueue::PerformCheckpoint (1,633 samples, 16.66%)</title><rect x="71.9066%" y="565" width="16.6582%" height="15" fill="rgb(251,163,40)"/><text x="72.1566%" y="575.50">deno_hyper_bin`v8::interna..</text></g><g><title>deno_hyper_bin`v8::internal::MicrotaskQueue::RunMicrotasks (1,630 samples, 16.63%)</title><rect x="71.9372%" y="549" width="16.6276%" height="15" fill="rgb(237,222,12)"/><text x="72.1872%" y="559.50">deno_hyper_bin`v8::interna..</text></g><g><title>deno_hyper_bin`v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*, v8::internal::MaybeHandle (1,623 samples, 16.56%)</title><rect x="72.0086%" y="533" width="16.5562%" height="15" fill="rgb(248,132,6)"/><text x="72.2586%" y="543.50">deno_hyper_bin`v8::interna..</text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (1,621 samples, 16.54%)</title><rect x="72.0290%" y="517" width="16.5358%" height="15" fill="rgb(227,167,50)"/><text x="72.2790%" y="527.50">deno_hyper_bin`v8::interna..</text></g><g><title>deno_hyper_bin`v8::internal::SaveContext::SaveContext (1 samples, 0.01%)</title><rect x="88.5545%" y="501" width="0.0102%" height="15" fill="rgb(242,84,37)"/><text x="88.8045%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::MicrotaskQueue::PerformCheckpoint (1 samples, 0.01%)</title><rect x="88.5647%" y="581" width="0.0102%" height="15" fill="rgb(212,4,50)"/><text x="88.8147%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2,184 samples, 22.28%)</title><rect x="66.3062%" y="597" width="22.2789%" height="15" fill="rgb(230,228,32)"/><text x="66.5562%" y="607.50">deno_hyper_bin`v8::Function::Call(v..</text></g><g><title>deno_hyper_bin`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (1 samples, 0.01%)</title><rect x="88.5749%" y="581" width="0.0102%" height="15" fill="rgb(248,217,23)"/><text x="88.8249%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (4 samples, 0.04%)</title><rect x="88.5851%" y="597" width="0.0408%" height="15" fill="rgb(238,197,32)"/><text x="88.8351%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::_&lt;impl rusty_v8::data::Function&gt;::call (2,195 samples, 22.39%)</title><rect x="66.2654%" y="613" width="22.3911%" height="15" fill="rgb(236,106,1)"/><text x="66.5154%" y="623.50">deno_hyper_bin`rusty_v8::function::..</text></g><g><title>deno_hyper_bin`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (3 samples, 0.03%)</title><rect x="88.6259%" y="597" width="0.0306%" height="15" fill="rgb(219,228,13)"/><text x="88.8759%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::get_annex (7 samples, 0.07%)</title><rect x="88.6565%" y="613" width="0.0714%" height="15" fill="rgb(238,30,35)"/><text x="88.9065%" y="623.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__GetData (7 samples, 0.07%)</title><rect x="88.6565%" y="597" width="0.0714%" height="15" fill="rgb(236,70,23)"/><text x="88.9065%" y="607.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="88.8095%" y="581" width="0.0102%" height="15" fill="rgb(249,104,48)"/><text x="89.0595%" y="591.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (6 samples, 0.06%)</title><rect x="88.8504%" y="565" width="0.0612%" height="15" fill="rgb(254,117,50)"/><text x="89.1004%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::Context::Exit (6 samples, 0.06%)</title><rect x="88.8504%" y="549" width="0.0612%" height="15" fill="rgb(223,152,4)"/><text x="89.1004%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::Context::Exit (1 samples, 0.01%)</title><rect x="88.9116%" y="565" width="0.0102%" height="15" fill="rgb(245,6,2)"/><text x="89.1616%" y="575.50"></text></g><g><title>deno_hyper_bin`&lt;rusty_v8::isolate::OwnedIsolate as rusty_v8::scope::getter::GetScopeData&gt;::get_scope_data_mut (17 samples, 0.17%)</title><rect x="88.7585%" y="597" width="0.1734%" height="15" fill="rgb(249,150,24)"/><text x="89.0085%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::try_exit_scope (11 samples, 0.11%)</title><rect x="88.8197%" y="581" width="0.1122%" height="15" fill="rgb(228,185,42)"/><text x="89.0697%" y="591.50"></text></g><g><title>deno_hyper_bin`v8__Context__Exit (1 samples, 0.01%)</title><rect x="88.9218%" y="565" width="0.0102%" height="15" fill="rgb(226,39,33)"/><text x="89.1718%" y="575.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::IsolateHandle::get_isolate_ptr (1 samples, 0.01%)</title><rect x="88.9320%" y="597" width="0.0102%" height="15" fill="rgb(221,166,19)"/><text x="89.1820%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::Context::Enter (4 samples, 0.04%)</title><rect x="88.9728%" y="581" width="0.0408%" height="15" fill="rgb(209,109,2)"/><text x="89.2228%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::HandleScopeImplementer::EnterContext (2 samples, 0.02%)</title><rect x="88.9932%" y="565" width="0.0204%" height="15" fill="rgb(252,216,26)"/><text x="89.2432%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::HandleScope::CreateHandle (2 samples, 0.02%)</title><rect x="89.0136%" y="581" width="0.0204%" height="15" fill="rgb(227,173,36)"/><text x="89.2636%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::HandleScope::Extend (2 samples, 0.02%)</title><rect x="89.0136%" y="565" width="0.0204%" height="15" fill="rgb(209,90,7)"/><text x="89.2636%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::HandleScope::HandleScope (3 samples, 0.03%)</title><rect x="89.0340%" y="581" width="0.0306%" height="15" fill="rgb(250,194,11)"/><text x="89.2840%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::Locker::IsActive (3 samples, 0.03%)</title><rect x="89.0340%" y="565" width="0.0306%" height="15" fill="rgb(220,72,50)"/><text x="89.2840%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::Locker::IsActive (2 samples, 0.02%)</title><rect x="89.0646%" y="581" width="0.0204%" height="15" fill="rgb(222,106,48)"/><text x="89.3146%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::HandleScope::Extend (3 samples, 0.03%)</title><rect x="89.0850%" y="581" width="0.0306%" height="15" fill="rgb(216,220,45)"/><text x="89.3350%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::HandleScopeImplementer::EnterContext (1 samples, 0.01%)</title><rect x="89.1156%" y="581" width="0.0102%" height="15" fill="rgb(234,112,18)"/><text x="89.3656%" y="591.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::new_handle_scope_data_with_context (19 samples, 0.19%)</title><rect x="88.9422%" y="597" width="0.1938%" height="15" fill="rgb(206,179,9)"/><text x="89.1922%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__Local__New (1 samples, 0.01%)</title><rect x="89.1258%" y="581" width="0.0102%" height="15" fill="rgb(215,115,40)"/><text x="89.3758%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (1 samples, 0.01%)</title><rect x="89.1360%" y="597" width="0.0102%" height="15" fill="rgb(222,69,34)"/><text x="89.3860%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__Context__Enter (1 samples, 0.01%)</title><rect x="89.1462%" y="597" width="0.0102%" height="15" fill="rgb(209,161,10)"/><text x="89.3962%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__HandleScope__CONSTRUCT (1 samples, 0.01%)</title><rect x="89.1564%" y="597" width="0.0102%" height="15" fill="rgb(217,6,38)"/><text x="89.4064%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::HandleScope::with_context (44 samples, 0.45%)</title><rect x="88.7279%" y="613" width="0.4488%" height="15" fill="rgb(229,229,48)"/><text x="88.9779%" y="623.50"></text></g><g><title>deno_hyper_bin`v8__Isolate__GetData (1 samples, 0.01%)</title><rect x="89.1666%" y="597" width="0.0102%" height="15" fill="rgb(225,21,28)"/><text x="89.4166%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::new_handle_scope_data_with_context (1 samples, 0.01%)</title><rect x="89.1768%" y="613" width="0.0102%" height="15" fill="rgb(206,33,13)"/><text x="89.4268%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::TryCatch::TryCatch (1 samples, 0.01%)</title><rect x="89.1972%" y="597" width="0.0102%" height="15" fill="rgb(242,178,17)"/><text x="89.4472%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::new_try_catch_data (4 samples, 0.04%)</title><rect x="89.1870%" y="613" width="0.0408%" height="15" fill="rgb(220,162,5)"/><text x="89.4370%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::GetCurrentStackPosition (2 samples, 0.02%)</title><rect x="89.2074%" y="597" width="0.0204%" height="15" fill="rgb(210,33,43)"/><text x="89.4574%" y="607.50"></text></g><g><title>deno_hyper_bin`mio::waker::Waker::wake (3 samples, 0.03%)</title><rect x="89.2890%" y="581" width="0.0306%" height="15" fill="rgb(216,116,54)"/><text x="89.5390%" y="591.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (121 samples, 1.23%)</title><rect x="89.2686%" y="597" width="1.2343%" height="15" fill="rgb(249,92,24)"/><text x="89.5186%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`kevent (116 samples, 1.18%)</title><rect x="89.3196%" y="581" width="1.1833%" height="15" fill="rgb(231,189,14)"/><text x="89.5696%" y="591.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (2 samples, 0.02%)</title><rect x="90.5029%" y="597" width="0.0204%" height="15" fill="rgb(230,8,41)"/><text x="90.7529%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::util::wake::wake_arc_raw (128 samples, 1.31%)</title><rect x="89.2278%" y="613" width="1.3057%" height="15" fill="rgb(249,7,27)"/><text x="89.4778%" y="623.50"></text></g><g><title>deno_hyper_bin`mio::waker::Waker::wake (1 samples, 0.01%)</title><rect x="90.5233%" y="597" width="0.0102%" height="15" fill="rgb(232,86,5)"/><text x="90.7733%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::BackingStore::ByteLength (1 samples, 0.01%)</title><rect x="90.5335%" y="613" width="0.0102%" height="15" fill="rgb(224,175,18)"/><text x="90.7835%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (1 samples, 0.01%)</title><rect x="90.5437%" y="613" width="0.0102%" height="15" fill="rgb(220,129,12)"/><text x="90.7937%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::TryCatch::TryCatch (1 samples, 0.01%)</title><rect x="90.5539%" y="613" width="0.0102%" height="15" fill="rgb(210,19,36)"/><text x="90.8039%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::V8::GlobalizeReference (2 samples, 0.02%)</title><rect x="90.5641%" y="613" width="0.0204%" height="15" fill="rgb(219,96,14)"/><text x="90.8141%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (5 samples, 0.05%)</title><rect x="90.5845%" y="613" width="0.0510%" height="15" fill="rgb(249,106,1)"/><text x="90.8345%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::RegisterTryCatchHandler (1 samples, 0.01%)</title><rect x="90.6355%" y="613" width="0.0102%" height="15" fill="rgb(249,155,20)"/><text x="90.8855%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::V8::GlobalizeReference (12 samples, 0.12%)</title><rect x="90.6559%" y="597" width="0.1224%" height="15" fill="rgb(244,168,9)"/><text x="90.9059%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalHandles::Create (9 samples, 0.09%)</title><rect x="90.6865%" y="581" width="0.0918%" height="15" fill="rgb(216,23,50)"/><text x="90.9365%" y="591.50"></text></g><g><title>deno_hyper_bin`v8__Global__New (20 samples, 0.20%)</title><rect x="90.6457%" y="613" width="0.2040%" height="15" fill="rgb(224,219,20)"/><text x="90.8957%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::GlobalHandles::Create (7 samples, 0.07%)</title><rect x="90.7783%" y="597" width="0.0714%" height="15" fill="rgb(222,156,15)"/><text x="91.0283%" y="607.50"></text></g><g><title>deno_hyper_bin`v8__Global__Reset (1 samples, 0.01%)</title><rect x="90.8497%" y="613" width="0.0102%" height="15" fill="rgb(231,97,17)"/><text x="91.0997%" y="623.50"></text></g><g><title>deno_hyper_bin`v8__TryCatch__CONSTRUCT (1 samples, 0.01%)</title><rect x="90.8599%" y="613" width="0.0102%" height="15" fill="rgb(218,70,48)"/><text x="91.1099%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.01%)</title><rect x="90.8701%" y="613" width="0.0102%" height="15" fill="rgb(212,196,52)"/><text x="91.1201%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.05%)</title><rect x="90.8905%" y="597" width="0.0510%" height="15" fill="rgb(243,203,18)"/><text x="91.1405%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="90.8905%" y="581" width="0.0510%" height="15" fill="rgb(252,125,41)"/><text x="91.1405%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.07%)</title><rect x="90.8803%" y="613" width="0.0714%" height="15" fill="rgb(223,180,33)"/><text x="91.1303%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="90.9415%" y="597" width="0.0102%" height="15" fill="rgb(254,159,46)"/><text x="91.1915%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="91.0742%" y="597" width="0.0102%" height="15" fill="rgb(254,38,10)"/><text x="91.3242%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.07%)</title><rect x="91.1558%" y="581" width="0.0714%" height="15" fill="rgb(208,217,32)"/><text x="91.4058%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.33%)</title><rect x="90.9517%" y="613" width="0.3264%" height="15" fill="rgb(221,120,13)"/><text x="91.2017%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.19%)</title><rect x="91.0844%" y="597" width="0.1938%" height="15" fill="rgb(246,54,52)"/><text x="91.3344%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.05%)</title><rect x="91.2272%" y="581" width="0.0510%" height="15" fill="rgb(242,34,25)"/><text x="91.4772%" y="591.50"></text></g><g><title>deno_hyper_bin`deno_core::runtime::JsRuntime::poll_event_loop (8,913 samples, 90.92%)</title><rect x="0.3672%" y="629" width="90.9211%" height="15" fill="rgb(247,209,9)"/><text x="0.6172%" y="639.50">deno_hyper_bin`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="91.2782%" y="613" width="0.0102%" height="15" fill="rgb(228,71,26)"/><text x="91.5282%" y="623.50"></text></g><g><title>deno_hyper_bin`deno_core::shared_queue::SharedQueue::push (2 samples, 0.02%)</title><rect x="91.2884%" y="629" width="0.0204%" height="15" fill="rgb(222,145,49)"/><text x="91.5384%" y="639.50"></text></g><g><title>deno_hyper_bin`deno_core::bindings::initialize_context (1 samples, 0.01%)</title><rect x="91.3088%" y="597" width="0.0102%" height="15" fill="rgb(218,121,17)"/><text x="91.5588%" y="607.50"></text></g><g><title>deno_hyper_bin`rusty_v8::context::_&lt;impl rusty_v8::data::Context&gt;::new (1 samples, 0.01%)</title><rect x="91.3088%" y="581" width="0.0102%" height="15" fill="rgb(244,50,7)"/><text x="91.5588%" y="591.50"></text></g><g><title>deno_hyper_bin`v8__Context__New (1 samples, 0.01%)</title><rect x="91.3088%" y="565" width="0.0102%" height="15" fill="rgb(246,229,37)"/><text x="91.5588%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::Context::New(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (1 samples, 0.01%)</title><rect x="91.3088%" y="549" width="0.0102%" height="15" fill="rgb(225,18,5)"/><text x="91.5588%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::NewContext(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (1 samples, 0.01%)</title><rect x="91.3088%" y="533" width="0.0102%" height="15" fill="rgb(213,204,8)"/><text x="91.5588%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::Bootstrapper::CreateEnvironment(v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (1 samples, 0.01%)</title><rect x="91.3088%" y="517" width="0.0102%" height="15" fill="rgb(238,103,6)"/><text x="91.5588%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::Genesis::Genesis(v8::internal::Isolate*, v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (1 samples, 0.01%)</title><rect x="91.3088%" y="501" width="0.0102%" height="15" fill="rgb(222,25,35)"/><text x="91.5588%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Snapshot::NewContextFromSnapshot(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3088%" y="485" width="0.0102%" height="15" fill="rgb(213,203,35)"/><text x="91.5588%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::ContextDeserializer::DeserializeContext(v8::internal::Isolate*, v8::internal::SnapshotData const*, bool, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3088%" y="469" width="0.0102%" height="15" fill="rgb(221,79,53)"/><text x="91.5588%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::ContextDeserializer::Deserialize(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3088%" y="453" width="0.0102%" height="15" fill="rgb(243,200,35)"/><text x="91.5588%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Deserializer::Rehash (1 samples, 0.01%)</title><rect x="91.3088%" y="437" width="0.0102%" height="15" fill="rgb(248,60,25)"/><text x="91.5588%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::HeapObject::RehashBasedOnMap (1 samples, 0.01%)</title><rect x="91.3088%" y="421" width="0.0102%" height="15" fill="rgb(227,53,46)"/><text x="91.5588%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::DescriptorArray::Sort (1 samples, 0.01%)</title><rect x="91.3088%" y="405" width="0.0102%" height="15" fill="rgb(216,120,32)"/><text x="91.5588%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::Script::Compile(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.01%)</title><rect x="91.3190%" y="581" width="0.0102%" height="15" fill="rgb(220,134,1)"/><text x="91.5690%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::ScriptCompiler::Compile(v8::Local (1 samples, 0.01%)</title><rect x="91.3190%" y="565" width="0.0102%" height="15" fill="rgb(237,168,5)"/><text x="91.5690%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::ScriptCompiler::CompileUnboundInternal (1 samples, 0.01%)</title><rect x="91.3190%" y="549" width="0.0102%" height="15" fill="rgb(231,100,33)"/><text x="91.5690%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3190%" y="533" width="0.0102%" height="15" fill="rgb(236,177,47)"/><text x="91.5690%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileScriptOnMainThread(v8::internal::UnoptimizedCompileFlags, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3190%" y="517" width="0.0102%" height="15" fill="rgb(235,7,49)"/><text x="91.5690%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CompileToplevel(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (1 samples, 0.01%)</title><rect x="91.3190%" y="501" width="0.0102%" height="15" fill="rgb(232,119,22)"/><text x="91.5690%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::parsing::ParseProgram(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (1 samples, 0.01%)</title><rect x="91.3190%" y="485" width="0.0102%" height="15" fill="rgb(254,73,53)"/><text x="91.5690%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Parser::ParseProgram(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::MaybeHandle (1 samples, 0.01%)</title><rect x="91.3190%" y="469" width="0.0102%" height="15" fill="rgb(251,35,20)"/><text x="91.5690%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::Parser::DoParseProgram (1 samples, 0.01%)</title><rect x="91.3190%" y="453" width="0.0102%" height="15" fill="rgb(241,119,20)"/><text x="91.5690%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionOrLabelledStatement(v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.01%)</title><rect x="91.3190%" y="437" width="0.0102%" height="15" fill="rgb(207,102,14)"/><text x="91.5690%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionCoverGrammar (1 samples, 0.01%)</title><rect x="91.3190%" y="421" width="0.0102%" height="15" fill="rgb(248,201,50)"/><text x="91.5690%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.01%)</title><rect x="91.3190%" y="405" width="0.0102%" height="15" fill="rgb(222,185,44)"/><text x="91.5690%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseLogicalExpression (1 samples, 0.01%)</title><rect x="91.3190%" y="389" width="0.0102%" height="15" fill="rgb(218,107,18)"/><text x="91.5690%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParsePrimaryExpression (1 samples, 0.01%)</title><rect x="91.3190%" y="373" width="0.0102%" height="15" fill="rgb(237,177,39)"/><text x="91.5690%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionCoverGrammar (1 samples, 0.01%)</title><rect x="91.3190%" y="357" width="0.0102%" height="15" fill="rgb(246,69,6)"/><text x="91.5690%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.01%)</title><rect x="91.3190%" y="341" width="0.0102%" height="15" fill="rgb(234,208,37)"/><text x="91.5690%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseArrowFunctionLiteral (1 samples, 0.01%)</title><rect x="91.3190%" y="325" width="0.0102%" height="15" fill="rgb(225,4,6)"/><text x="91.5690%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseFunctionBody(v8::internal::ScopedList&lt;v8::internal::Statement*, void*&gt;*, v8::internal::AstRawString const*, int, v8::internal::ParserFormalParameters const&amp;, v8::internal::FunctionKind, v8::internal::FunctionSyntaxKind, v8::internal::ParserBase (1 samples, 0.01%)</title><rect x="91.3190%" y="309" width="0.0102%" height="15" fill="rgb(233,45,0)"/><text x="91.5690%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseStatementListItem (1 samples, 0.01%)</title><rect x="91.3190%" y="293" width="0.0102%" height="15" fill="rgb(226,136,5)"/><text x="91.5690%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseVariableDeclarations(v8::internal::ParserBase&lt;v8::internal::Parser&gt;::VariableDeclarationContext, v8::internal::ParserBase&lt;v8::internal::Parser&gt;::DeclarationParsingResult*, v8::internal::ZoneList (1 samples, 0.01%)</title><rect x="91.3190%" y="277" width="0.0102%" height="15" fill="rgb(211,91,47)"/><text x="91.5690%" y="287.50"></text></g><g><title>deno_hyper_bin`deno_core::runtime::JsRuntime::execute (2 samples, 0.02%)</title><rect x="91.3190%" y="597" width="0.0204%" height="15" fill="rgb(242,88,51)"/><text x="91.5690%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::Script::Run(v8::Local (1 samples, 0.01%)</title><rect x="91.3292%" y="581" width="0.0102%" height="15" fill="rgb(230,91,28)"/><text x="91.5792%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="565" width="0.0102%" height="15" fill="rgb(254,186,29)"/><text x="91.5792%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.01%)</title><rect x="91.3292%" y="549" width="0.0102%" height="15" fill="rgb(238,6,4)"/><text x="91.5792%" y="559.50"></text></g><g><title>deno_hyper_bin`Builtins_JSEntry (1 samples, 0.01%)</title><rect x="91.3292%" y="533" width="0.0102%" height="15" fill="rgb(221,151,16)"/><text x="91.5792%" y="543.50"></text></g><g><title>deno_hyper_bin`Builtins_JSEntryTrampoline (1 samples, 0.01%)</title><rect x="91.3292%" y="517" width="0.0102%" height="15" fill="rgb(251,143,52)"/><text x="91.5792%" y="527.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (1 samples, 0.01%)</title><rect x="91.3292%" y="501" width="0.0102%" height="15" fill="rgb(206,90,15)"/><text x="91.5792%" y="511.50"></text></g><g><title>deno_hyper_bin`Builtins_InterpreterEntryTrampoline (1 samples, 0.01%)</title><rect x="91.3292%" y="485" width="0.0102%" height="15" fill="rgb(218,35,8)"/><text x="91.5792%" y="495.50"></text></g><g><title>deno_hyper_bin`Builtins_CreateObjectLiteralHandler (1 samples, 0.01%)</title><rect x="91.3292%" y="469" width="0.0102%" height="15" fill="rgb(239,215,6)"/><text x="91.5792%" y="479.50"></text></g><g><title>deno_hyper_bin`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.01%)</title><rect x="91.3292%" y="453" width="0.0102%" height="15" fill="rgb(245,116,39)"/><text x="91.5792%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Runtime_CreateObjectLiteral (1 samples, 0.01%)</title><rect x="91.3292%" y="437" width="0.0102%" height="15" fill="rgb(242,65,28)"/><text x="91.5792%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CreateObjectLiteral(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="421" width="0.0102%" height="15" fill="rgb(252,132,53)"/><text x="91.5792%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::SetOwnPropertyIgnoreAttributes(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="405" width="0.0102%" height="15" fill="rgb(224,159,50)"/><text x="91.5792%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::JSObject::DefineOwnPropertyIgnoreAttributes(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (1 samples, 0.01%)</title><rect x="91.3292%" y="389" width="0.0102%" height="15" fill="rgb(224,93,4)"/><text x="91.5792%" y="399.50"></text></g><g><title>deno_hyper_bin`v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (1 samples, 0.01%)</title><rect x="91.3292%" y="373" width="0.0102%" height="15" fill="rgb(208,81,34)"/><text x="91.5792%" y="383.50"></text></g><g><title>deno_hyper_bin`v8::internal::LookupIterator::PrepareTransitionToDataProperty(v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="357" width="0.0102%" height="15" fill="rgb(233,92,54)"/><text x="91.5792%" y="367.50"></text></g><g><title>deno_hyper_bin`v8::internal::Map::TransitionToDataProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="341" width="0.0102%" height="15" fill="rgb(237,21,14)"/><text x="91.5792%" y="351.50"></text></g><g><title>deno_hyper_bin`v8::internal::Map::CopyWithField(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="325" width="0.0102%" height="15" fill="rgb(249,128,51)"/><text x="91.5792%" y="335.50"></text></g><g><title>deno_hyper_bin`v8::internal::Map::CopyAddDescriptor(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="309" width="0.0102%" height="15" fill="rgb(223,129,24)"/><text x="91.5792%" y="319.50"></text></g><g><title>deno_hyper_bin`v8::internal::Map::ShareDescriptor(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="293" width="0.0102%" height="15" fill="rgb(231,168,25)"/><text x="91.5792%" y="303.50"></text></g><g><title>deno_hyper_bin`v8::internal::Map::EnsureDescriptorSlack(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.01%)</title><rect x="91.3292%" y="277" width="0.0102%" height="15" fill="rgb(224,39,20)"/><text x="91.5792%" y="287.50"></text></g><g><title>deno_hyper_bin`v8::internal::Map::SetInstanceDescriptors (1 samples, 0.01%)</title><rect x="91.3292%" y="261" width="0.0102%" height="15" fill="rgb(225,152,53)"/><text x="91.5792%" y="271.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap_GenerationalBarrierSlow (1 samples, 0.01%)</title><rect x="91.3292%" y="245" width="0.0102%" height="15" fill="rgb(252,17,24)"/><text x="91.5792%" y="255.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::SetUp (1 samples, 0.01%)</title><rect x="91.3394%" y="501" width="0.0102%" height="15" fill="rgb(250,114,30)"/><text x="91.5894%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::MarkCompactCollector::MarkCompactCollector (1 samples, 0.01%)</title><rect x="91.3394%" y="485" width="0.0102%" height="15" fill="rgb(229,5,4)"/><text x="91.5894%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::Isolate::Initialize (2 samples, 0.02%)</title><rect x="91.3394%" y="565" width="0.0204%" height="15" fill="rgb(225,176,49)"/><text x="91.5894%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::Snapshot::Initialize (2 samples, 0.02%)</title><rect x="91.3394%" y="549" width="0.0204%" height="15" fill="rgb(224,221,49)"/><text x="91.5894%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::InitWithSnapshot (2 samples, 0.02%)</title><rect x="91.3394%" y="533" width="0.0204%" height="15" fill="rgb(253,169,27)"/><text x="91.5894%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::Init (2 samples, 0.02%)</title><rect x="91.3394%" y="517" width="0.0204%" height="15" fill="rgb(211,206,16)"/><text x="91.5894%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::StartupDeserializer::DeserializeIntoIsolate (1 samples, 0.01%)</title><rect x="91.3496%" y="501" width="0.0102%" height="15" fill="rgb(244,87,35)"/><text x="91.5996%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (1 samples, 0.01%)</title><rect x="91.3496%" y="485" width="0.0102%" height="15" fill="rgb(246,28,10)"/><text x="91.5996%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::Deserializer::VisitRootPointers (1 samples, 0.01%)</title><rect x="91.3496%" y="469" width="0.0102%" height="15" fill="rgb(229,12,44)"/><text x="91.5996%" y="479.50"></text></g><g><title>deno_hyper_bin`int v8::internal::Deserializer::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (1 samples, 0.01%)</title><rect x="91.3496%" y="453" width="0.0102%" height="15" fill="rgb(210,145,37)"/><text x="91.5996%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::Deserializer::ReadObject (1 samples, 0.01%)</title><rect x="91.3496%" y="437" width="0.0102%" height="15" fill="rgb(227,112,52)"/><text x="91.5996%" y="447.50"></text></g><g><title>deno_hyper_bin`deno_hyper_bin::create_js_runtime (6 samples, 0.06%)</title><rect x="91.3088%" y="629" width="0.0612%" height="15" fill="rgb(238,155,34)"/><text x="91.5588%" y="639.50"></text></g><g><title>deno_hyper_bin`deno_core::runtime::JsRuntime::new (6 samples, 0.06%)</title><rect x="91.3088%" y="613" width="0.0612%" height="15" fill="rgb(239,226,36)"/><text x="91.5588%" y="623.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::new (3 samples, 0.03%)</title><rect x="91.3394%" y="597" width="0.0306%" height="15" fill="rgb(230,16,23)"/><text x="91.5894%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::Isolate::New (3 samples, 0.03%)</title><rect x="91.3394%" y="581" width="0.0306%" height="15" fill="rgb(236,171,36)"/><text x="91.5894%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::Isolate::New (1 samples, 0.01%)</title><rect x="91.3598%" y="565" width="0.0102%" height="15" fill="rgb(221,22,14)"/><text x="91.6098%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::IsolateAllocator::IsolateAllocator (1 samples, 0.01%)</title><rect x="91.3598%" y="549" width="0.0102%" height="15" fill="rgb(242,43,11)"/><text x="91.6098%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::VirtualMemory::Reset (1 samples, 0.01%)</title><rect x="91.3598%" y="533" width="0.0102%" height="15" fill="rgb(232,69,23)"/><text x="91.6098%" y="543.50"></text></g><g><title>deno_hyper_bin`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.01%)</title><rect x="91.3700%" y="629" width="0.0102%" height="15" fill="rgb(216,180,54)"/><text x="91.6200%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::context::_&lt;impl rusty_v8::data::Context&gt;::global (3 samples, 0.03%)</title><rect x="91.3802%" y="629" width="0.0306%" height="15" fill="rgb(216,5,24)"/><text x="91.6302%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::data::_&lt;impl core::convert::From&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Map&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Data&gt;&gt;::from (1 samples, 0.01%)</title><rect x="91.4108%" y="629" width="0.0102%" height="15" fill="rgb(225,89,9)"/><text x="91.6608%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::function::_&lt;impl rusty_v8::data::Function&gt;::call (1 samples, 0.01%)</title><rect x="91.4210%" y="629" width="0.0102%" height="15" fill="rgb(243,75,33)"/><text x="91.6710%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::handle::HandleHost::get_isolate (2 samples, 0.02%)</title><rect x="91.4312%" y="629" width="0.0204%" height="15" fill="rgb(247,141,45)"/><text x="91.6812%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::isolate::Isolate::get_annex (1 samples, 0.01%)</title><rect x="91.4516%" y="629" width="0.0102%" height="15" fill="rgb(232,177,36)"/><text x="91.7016%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::HandleScope::get_current_context (3 samples, 0.03%)</title><rect x="91.4618%" y="629" width="0.0306%" height="15" fill="rgb(219,125,36)"/><text x="91.7118%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::HandleScope::with_context (1 samples, 0.01%)</title><rect x="91.4924%" y="629" width="0.0102%" height="15" fill="rgb(227,94,9)"/><text x="91.7424%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::get_try_catch (1 samples, 0.01%)</title><rect x="91.5026%" y="629" width="0.0102%" height="15" fill="rgb(240,34,52)"/><text x="91.7526%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::new_try_catch_data (1 samples, 0.01%)</title><rect x="91.5128%" y="629" width="0.0102%" height="15" fill="rgb(216,45,12)"/><text x="91.7628%" y="639.50"></text></g><g><title>deno_hyper_bin`rusty_v8::scope::data::ScopeData::notify_scope_dropped (1 samples, 0.01%)</title><rect x="91.5230%" y="629" width="0.0102%" height="15" fill="rgb(246,21,19)"/><text x="91.7730%" y="639.50"></text></g><g><title>deno_hyper_bin`tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.01%)</title><rect x="91.5332%" y="629" width="0.0102%" height="15" fill="rgb(213,98,42)"/><text x="91.7832%" y="639.50"></text></g><g><title>deno_hyper_bin`tokio::runtime::blocking::pool::Spawner::spawn (1 samples, 0.01%)</title><rect x="91.5332%" y="613" width="0.0102%" height="15" fill="rgb(250,136,47)"/><text x="91.7832%" y="623.50"></text></g><g><title>deno_hyper_bin`std::thread::Builder::spawn (1 samples, 0.01%)</title><rect x="91.5332%" y="597" width="0.0102%" height="15" fill="rgb(251,124,27)"/><text x="91.7832%" y="607.50"></text></g><g><title>deno_hyper_bin`std::sys_common::thread::min_stack (1 samples, 0.01%)</title><rect x="91.5332%" y="581" width="0.0102%" height="15" fill="rgb(229,180,14)"/><text x="91.7832%" y="591.50"></text></g><g><title>deno_hyper_bin`_dyld_private (1 samples, 0.01%)</title><rect x="91.5332%" y="565" width="0.0102%" height="15" fill="rgb(245,216,25)"/><text x="91.7832%" y="575.50"></text></g><g><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.01%)</title><rect x="91.5332%" y="549" width="0.0102%" height="15" fill="rgb(251,43,5)"/><text x="91.7832%" y="559.50"></text></g><g><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.01%)</title><rect x="91.5332%" y="533" width="0.0102%" height="15" fill="rgb(250,128,24)"/><text x="91.7832%" y="543.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.01%)</title><rect x="91.5332%" y="517" width="0.0102%" height="15" fill="rgb(217,117,27)"/><text x="91.7832%" y="527.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.01%)</title><rect x="91.5332%" y="501" width="0.0102%" height="15" fill="rgb(245,147,4)"/><text x="91.7832%" y="511.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.01%)</title><rect x="91.5332%" y="485" width="0.0102%" height="15" fill="rgb(242,201,35)"/><text x="91.7832%" y="495.50"></text></g><g><title>dyld`ImageLoader::interposedAddress (1 samples, 0.01%)</title><rect x="91.5332%" y="469" width="0.0102%" height="15" fill="rgb(218,181,1)"/><text x="91.7832%" y="479.50"></text></g><g><title>deno_hyper_bin`tokio::util::wake::wake_arc_raw (1 samples, 0.01%)</title><rect x="91.5434%" y="629" width="0.0102%" height="15" fill="rgb(222,6,29)"/><text x="91.7934%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::V8::DisposeGlobal (1 samples, 0.01%)</title><rect x="91.5536%" y="629" width="0.0102%" height="15" fill="rgb(208,186,3)"/><text x="91.8036%" y="639.50"></text></g><g><title>deno_hyper_bin`v8__Global__New (1 samples, 0.01%)</title><rect x="91.5638%" y="629" width="0.0102%" height="15" fill="rgb(216,36,26)"/><text x="91.8138%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,966 samples, 91.46%)</title><rect x="0.1224%" y="645" width="91.4618%" height="15" fill="rgb(248,201,23)"/><text x="0.3724%" y="655.50">deno_hyper_bin`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>deno_hyper_bin`v8__Global__Reset (1 samples, 0.01%)</title><rect x="91.5740%" y="629" width="0.0102%" height="15" fill="rgb(251,170,31)"/><text x="91.8240%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="91.5842%" y="645" width="0.0204%" height="15" fill="rgb(207,110,25)"/><text x="91.8342%" y="655.50"></text></g><g><title>deno_hyper_bin`std::time::Instant::now (1 samples, 0.01%)</title><rect x="91.6148%" y="629" width="0.0102%" height="15" fill="rgb(250,54,15)"/><text x="91.8648%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="91.7780%" y="597" width="0.0204%" height="15" fill="rgb(227,68,33)"/><text x="92.0280%" y="607.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::is_read_closed (2 samples, 0.02%)</title><rect x="91.7984%" y="597" width="0.0204%" height="15" fill="rgb(238,34,41)"/><text x="92.0484%" y="607.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::is_writable (3 samples, 0.03%)</title><rect x="91.8188%" y="597" width="0.0306%" height="15" fill="rgb(220,11,15)"/><text x="92.0688%" y="607.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::is_write_closed (2 samples, 0.02%)</title><rect x="91.8494%" y="597" width="0.0204%" height="15" fill="rgb(246,111,35)"/><text x="92.0994%" y="607.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::token (1 samples, 0.01%)</title><rect x="91.8698%" y="597" width="0.0102%" height="15" fill="rgb(209,88,53)"/><text x="92.1198%" y="607.50"></text></g><g><title>deno_hyper_bin`mio::poll::Poll::poll (1 samples, 0.01%)</title><rect x="91.8800%" y="597" width="0.0102%" height="15" fill="rgb(231,185,47)"/><text x="92.1300%" y="607.50"></text></g><g><title>deno_hyper_bin`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="92.0739%" y="581" width="0.0204%" height="15" fill="rgb(233,154,1)"/><text x="92.3239%" y="591.50"></text></g><g><title>deno_hyper_bin`core::array::_&lt;impl core::default::Default for [T (2 samples, 0.02%)</title><rect x="92.0943%" y="581" width="0.0204%" height="15" fill="rgb(225,15,46)"/><text x="92.3443%" y="591.50"></text></g><g><title> 32]&gt;::default (2 samples, 0.02%)</title><rect x="92.0943%" y="565" width="0.0204%" height="15" fill="rgb(211,135,41)"/><text x="92.3443%" y="575.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="92.1147%" y="581" width="0.0102%" height="15" fill="rgb(208,54,0)"/><text x="92.3647%" y="591.50"></text></g><g><title>deno_hyper_bin`futures_task::arc_wake::ArcWake::wake (2 samples, 0.02%)</title><rect x="92.1249%" y="581" width="0.0204%" height="15" fill="rgb(244,136,14)"/><text x="92.3749%" y="591.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::wake_arc_raw (2 samples, 0.02%)</title><rect x="92.1453%" y="581" width="0.0204%" height="15" fill="rgb(241,56,14)"/><text x="92.3953%" y="591.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::is_read_closed (1 samples, 0.01%)</title><rect x="92.1657%" y="581" width="0.0102%" height="15" fill="rgb(205,80,24)"/><text x="92.4157%" y="591.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::is_readable (3 samples, 0.03%)</title><rect x="92.1759%" y="581" width="0.0306%" height="15" fill="rgb(220,57,4)"/><text x="92.4259%" y="591.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::is_write_closed (1 samples, 0.01%)</title><rect x="92.2065%" y="581" width="0.0102%" height="15" fill="rgb(226,193,50)"/><text x="92.4565%" y="591.50"></text></g><g><title>deno_hyper_bin`mio::event::event::Event::token (1 samples, 0.01%)</title><rect x="92.2167%" y="581" width="0.0102%" height="15" fill="rgb(231,168,22)"/><text x="92.4667%" y="591.50"></text></g><g><title>deno_hyper_bin`mio::poll::Poll::poll (1 samples, 0.01%)</title><rect x="92.2269%" y="581" width="0.0102%" height="15" fill="rgb(254,215,14)"/><text x="92.4769%" y="591.50"></text></g><g><title>deno_hyper_bin`core::array::_&lt;impl core::default::Default for [T (3 samples, 0.03%)</title><rect x="92.4411%" y="565" width="0.0306%" height="15" fill="rgb(211,115,16)"/><text x="92.6911%" y="575.50"></text></g><g><title> 32]&gt;::default (3 samples, 0.03%)</title><rect x="92.4411%" y="549" width="0.0306%" height="15" fill="rgb(236,210,16)"/><text x="92.6911%" y="559.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (12 samples, 0.12%)</title><rect x="92.4717%" y="565" width="0.1224%" height="15" fill="rgb(221,94,12)"/><text x="92.7217%" y="575.50"></text></g><g><title>deno_hyper_bin`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (6 samples, 0.06%)</title><rect x="92.8185%" y="549" width="0.0612%" height="15" fill="rgb(235,218,49)"/><text x="93.0685%" y="559.50"></text></g><g><title>deno_hyper_bin`mio::waker::Waker::wake (2 samples, 0.02%)</title><rect x="92.8899%" y="517" width="0.0204%" height="15" fill="rgb(217,114,14)"/><text x="93.1399%" y="527.50"></text></g><g><title>deno_hyper_bin`futures_task::arc_wake::ArcWake::wake (76 samples, 0.78%)</title><rect x="92.5941%" y="565" width="0.7753%" height="15" fill="rgb(216,145,22)"/><text x="92.8441%" y="575.50"></text></g><g><title>deno_hyper_bin`tokio::util::wake::wake_arc_raw (48 samples, 0.49%)</title><rect x="92.8797%" y="549" width="0.4896%" height="15" fill="rgb(217,112,39)"/><text x="93.1297%" y="559.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (48 samples, 0.49%)</title><rect x="92.8797%" y="533" width="0.4896%" height="15" fill="rgb(225,85,32)"/><text x="93.1297%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`kevent (45 samples, 0.46%)</title><rect x="92.9103%" y="517" width="0.4590%" height="15" fill="rgb(245,209,47)"/><text x="93.1603%" y="527.50"></text></g><g><title>deno_hyper_bin`futures_task::waker::wake_arc_raw (1 samples, 0.01%)</title><rect x="93.3694%" y="565" width="0.0102%" height="15" fill="rgb(218,220,15)"/><text x="93.6194%" y="575.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (113 samples, 1.15%)</title><rect x="92.2371%" y="581" width="1.1527%" height="15" fill="rgb(222,202,31)"/><text x="92.4871%" y="591.50"></text></g><g><title>deno_hyper_bin`tokio::util::wake::wake_arc_raw (1 samples, 0.01%)</title><rect x="93.3796%" y="565" width="0.0102%" height="15" fill="rgb(243,203,4)"/><text x="93.6296%" y="575.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::Driver::turn (420 samples, 4.28%)</title><rect x="91.8902%" y="597" width="4.2844%" height="15" fill="rgb(237,92,17)"/><text x="92.1402%" y="607.50">deno_..</text></g><g><title>libsystem_kernel.dylib`kevent (273 samples, 2.78%)</title><rect x="93.3898%" y="581" width="2.7849%" height="15" fill="rgb(231,119,7)"/><text x="93.6398%" y="591.50">li..</text></g><g><title>deno_hyper_bin`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.02%)</title><rect x="96.1848%" y="565" width="0.0204%" height="15" fill="rgb(237,82,41)"/><text x="96.4348%" y="575.50"></text></g><g><title>deno_hyper_bin`tokio::signal::unix::driver::Driver::process (7 samples, 0.07%)</title><rect x="96.1746%" y="597" width="0.0714%" height="15" fill="rgb(226,81,48)"/><text x="96.4246%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::registration::Registration::poll_ready (6 samples, 0.06%)</title><rect x="96.1848%" y="581" width="0.0612%" height="15" fill="rgb(234,70,51)"/><text x="96.4348%" y="591.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="96.2052%" y="565" width="0.0408%" height="15" fill="rgb(251,86,4)"/><text x="96.4552%" y="575.50"></text></g><g><title>deno_hyper_bin`tokio::signal::unix::driver::noop (1 samples, 0.01%)</title><rect x="96.2460%" y="597" width="0.0102%" height="15" fill="rgb(244,144,28)"/><text x="96.4960%" y="607.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::process::imp::driver::Driver as tokio::park::Park&gt;::park (443 samples, 4.52%)</title><rect x="91.7474%" y="613" width="4.5190%" height="15" fill="rgb(232,161,39)"/><text x="91.9974%" y="623.50">deno_..</text></g><g><title>deno_hyper_bin`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="96.2562%" y="597" width="0.0102%" height="15" fill="rgb(247,34,51)"/><text x="96.5062%" y="607.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="96.2664%" y="613" width="0.0204%" height="15" fill="rgb(225,132,2)"/><text x="96.5164%" y="623.50"></text></g><g><title>deno_hyper_bin`std::time::Instant::checked_duration_since (3 samples, 0.03%)</title><rect x="96.2869%" y="613" width="0.0306%" height="15" fill="rgb(209,159,44)"/><text x="96.5369%" y="623.50"></text></g><g><title>deno_hyper_bin`tokio::io::driver::Driver::turn (1 samples, 0.01%)</title><rect x="96.3175%" y="613" width="0.0102%" height="15" fill="rgb(251,214,1)"/><text x="96.5675%" y="623.50"></text></g><g><title>deno_hyper_bin`tokio::signal::unix::driver::Driver::process (2 samples, 0.02%)</title><rect x="96.3277%" y="613" width="0.0204%" height="15" fill="rgb(247,84,47)"/><text x="96.5777%" y="623.50"></text></g><g><title>deno_hyper_bin`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="96.3481%" y="613" width="0.0204%" height="15" fill="rgb(240,111,43)"/><text x="96.5981%" y="623.50"></text></g><g><title>deno_hyper_bin`core::ptr::drop_in_place (6 samples, 0.06%)</title><rect x="96.3991%" y="597" width="0.0612%" height="15" fill="rgb(215,214,35)"/><text x="96.6491%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::wheel::Wheel::next_expiration_time (1 samples, 0.01%)</title><rect x="96.4603%" y="597" width="0.0102%" height="15" fill="rgb(248,207,23)"/><text x="96.7103%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (14 samples, 0.14%)</title><rect x="96.3685%" y="613" width="0.1428%" height="15" fill="rgb(214,186,4)"/><text x="96.6185%" y="623.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::wheel::Wheel::poll (4 samples, 0.04%)</title><rect x="96.4705%" y="597" width="0.0408%" height="15" fill="rgb(220,133,22)"/><text x="96.7205%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="96.5011%" y="581" width="0.0102%" height="15" fill="rgb(239,134,19)"/><text x="96.7511%" y="591.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::wheel::Wheel::next_expiration_time (10 samples, 0.10%)</title><rect x="96.5113%" y="613" width="0.1020%" height="15" fill="rgb(250,140,9)"/><text x="96.7613%" y="623.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::wheel::level::Level::next_expiration (9 samples, 0.09%)</title><rect x="96.5215%" y="597" width="0.0918%" height="15" fill="rgb(225,59,14)"/><text x="96.7715%" y="607.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="96.6133%" y="613" width="0.0102%" height="15" fill="rgb(214,152,51)"/><text x="96.8633%" y="623.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::Driver&lt;P&gt;::park_internal (493 samples, 5.03%)</title><rect x="91.6250%" y="629" width="5.0291%" height="15" fill="rgb(251,227,43)"/><text x="91.8750%" y="639.50">deno_h..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (3 samples, 0.03%)</title><rect x="96.6235%" y="613" width="0.0306%" height="15" fill="rgb(241,96,17)"/><text x="96.8735%" y="623.50"></text></g><g><title>deno_hyper_bin`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (1 samples, 0.01%)</title><rect x="96.6541%" y="629" width="0.0102%" height="15" fill="rgb(234,198,43)"/><text x="96.9041%" y="639.50"></text></g><g><title>deno_hyper_bin`&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (499 samples, 5.09%)</title><rect x="91.6046%" y="645" width="5.0903%" height="15" fill="rgb(220,108,29)"/><text x="91.8546%" y="655.50">deno_h..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (3 samples, 0.03%)</title><rect x="96.6643%" y="629" width="0.0306%" height="15" fill="rgb(226,163,33)"/><text x="96.9143%" y="639.50"></text></g><g><title>deno_hyper_bin`tokio::runtime::basic_scheduler::Spawner::pop (2 samples, 0.02%)</title><rect x="96.6949%" y="645" width="0.0204%" height="15" fill="rgb(205,194,45)"/><text x="96.9449%" y="655.50"></text></g><g><title>deno_hyper_bin`tokio::runtime::Runtime::block_on (9,482 samples, 96.73%)</title><rect x="0.0000%" y="677" width="96.7255%" height="15" fill="rgb(206,143,44)"/><text x="0.2500%" y="687.50">deno_hyper_bin`tokio::runtime::Runtime::block_on</text></g><g><title>deno_hyper_bin`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (9,477 samples, 96.67%)</title><rect x="0.0510%" y="661" width="96.6745%" height="15" fill="rgb(236,136,36)"/><text x="0.3010%" y="671.50">deno_hyper_bin`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on</text></g><g><title>deno_hyper_bin`tokio::time::driver::Driver&lt;P&gt;::park_internal (1 samples, 0.01%)</title><rect x="96.7153%" y="645" width="0.0102%" height="15" fill="rgb(249,172,42)"/><text x="96.9653%" y="655.50"></text></g><g><title>deno_hyper_bin`0x1 (9,483 samples, 96.74%)</title><rect x="0.0000%" y="789" width="96.7357%" height="15" fill="rgb(216,139,23)"/><text x="0.2500%" y="799.50">deno_hyper_bin`0x1</text></g><g><title>libdyld.dylib`start (9,483 samples, 96.74%)</title><rect x="0.0000%" y="773" width="96.7357%" height="15" fill="rgb(207,166,20)"/><text x="0.2500%" y="783.50">libdyld.dylib`start</text></g><g><title>deno_hyper_bin`main (9,483 samples, 96.74%)</title><rect x="0.0000%" y="757" width="96.7357%" height="15" fill="rgb(210,209,22)"/><text x="0.2500%" y="767.50">deno_hyper_bin`main</text></g><g><title>deno_hyper_bin`std::rt::lang_start_internal (9,483 samples, 96.74%)</title><rect x="0.0000%" y="741" width="96.7357%" height="15" fill="rgb(232,118,20)"/><text x="0.2500%" y="751.50">deno_hyper_bin`std::rt::lang_start_internal</text></g><g><title>deno_hyper_bin`std::rt::lang_start::_{{closure}} (9,483 samples, 96.74%)</title><rect x="0.0000%" y="725" width="96.7357%" height="15" fill="rgb(238,113,42)"/><text x="0.2500%" y="735.50">deno_hyper_bin`std::rt::lang_start::_{{closure}}</text></g><g><title>deno_hyper_bin`std::sys_common::backtrace::__rust_begin_short_backtrace (9,483 samples, 96.74%)</title><rect x="0.0000%" y="709" width="96.7357%" height="15" fill="rgb(231,42,5)"/><text x="0.2500%" y="719.50">deno_hyper_bin`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>deno_hyper_bin`deno_hyper_bin::main (9,483 samples, 96.74%)</title><rect x="0.0000%" y="693" width="96.7357%" height="15" fill="rgb(243,166,24)"/><text x="0.2500%" y="703.50">deno_hyper_bin`deno_hyper_bin::main</text></g><g><title>deno_hyper_bin`tokio::runtime::builder::Builder::build (1 samples, 0.01%)</title><rect x="96.7255%" y="677" width="0.0102%" height="15" fill="rgb(237,226,12)"/><text x="96.9755%" y="687.50"></text></g><g><title>deno_hyper_bin`tokio::runtime::driver::Driver::new (1 samples, 0.01%)</title><rect x="96.7255%" y="661" width="0.0102%" height="15" fill="rgb(229,133,24)"/><text x="96.9755%" y="671.50"></text></g><g><title>deno_hyper_bin`tokio::signal::unix::driver::Driver::new (1 samples, 0.01%)</title><rect x="96.7255%" y="645" width="0.0102%" height="15" fill="rgb(238,33,43)"/><text x="96.9755%" y="655.50"></text></g><g><title>deno_hyper_bin`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="96.7255%" y="629" width="0.0102%" height="15" fill="rgb(227,59,38)"/><text x="96.9755%" y="639.50"></text></g><g><title>deno_hyper_bin`once_cell::imp::initialize_inner (1 samples, 0.01%)</title><rect x="96.7255%" y="613" width="0.0102%" height="15" fill="rgb(230,97,0)"/><text x="96.9755%" y="623.50"></text></g><g><title>deno_hyper_bin`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.01%)</title><rect x="96.7255%" y="597" width="0.0102%" height="15" fill="rgb(250,173,50)"/><text x="96.9755%" y="607.50"></text></g><g><title>deno_hyper_bin`core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="96.7255%" y="581" width="0.0102%" height="15" fill="rgb(240,15,50)"/><text x="96.9755%" y="591.50"></text></g><g><title>deno_hyper_bin`tokio::signal::unix::_&lt;impl tokio::signal::registry::Init for alloc::vec::Vec&lt;tokio::signal::unix::SignalInfo&gt;&gt;::init (1 samples, 0.01%)</title><rect x="96.7255%" y="565" width="0.0102%" height="15" fill="rgb(221,93,22)"/><text x="96.9755%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::(anonymous namespace)::CancelableFuncTask::RunInternal (1 samples, 0.01%)</title><rect x="96.7357%" y="741" width="0.0102%" height="15" fill="rgb(245,180,53)"/><text x="96.9857%" y="751.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$pthread_cond_broadcast (1 samples, 0.01%)</title><rect x="96.7459%" y="725" width="0.0102%" height="15" fill="rgb(231,88,51)"/><text x="96.9959%" y="735.50"></text></g><g><title>deno_hyper_bin`non-virtual thunk to v8::internal::(anonymous namespace)::CancelableFuncTask::~CancelableFuncTask (1 samples, 0.01%)</title><rect x="96.7561%" y="725" width="0.0102%" height="15" fill="rgb(240,58,21)"/><text x="97.0061%" y="735.50"></text></g><g><title>deno_hyper_bin`v8::internal::CancelableTaskManager::RemoveFinishedTask (1 samples, 0.01%)</title><rect x="96.7561%" y="709" width="0.0102%" height="15" fill="rgb(237,21,10)"/><text x="97.0061%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="96.7561%" y="693" width="0.0102%" height="15" fill="rgb(218,43,11)"/><text x="97.0061%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="96.7561%" y="677" width="0.0102%" height="15" fill="rgb(218,221,29)"/><text x="97.0061%" y="687.50"></text></g><g><title>deno_hyper_bin`v8::internal::Cancelable::~Cancelable (1 samples, 0.01%)</title><rect x="96.7663%" y="725" width="0.0102%" height="15" fill="rgb(214,118,42)"/><text x="97.0163%" y="735.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::AssembleArchInstruction (1 samples, 0.01%)</title><rect x="96.7765%" y="597" width="0.0102%" height="15" fill="rgb(251,200,26)"/><text x="97.0265%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::RecordCallPosition (1 samples, 0.01%)</title><rect x="96.7765%" y="581" width="0.0102%" height="15" fill="rgb(237,101,39)"/><text x="97.0265%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::BuildTranslation (1 samples, 0.01%)</title><rect x="96.7765%" y="565" width="0.0102%" height="15" fill="rgb(251,117,11)"/><text x="97.0265%" y="575.50"></text></g><g><title>deno_hyper_bin`std::__1::deque&lt;v8::internal::compiler::DeoptimizationExit*, v8::internal::RecyclingZoneAllocator&lt;v8::internal::compiler::DeoptimizationExit*&gt; &gt;::__add_back_capacity (1 samples, 0.01%)</title><rect x="96.7765%" y="549" width="0.0102%" height="15" fill="rgb(216,223,23)"/><text x="97.0265%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::Zone::NewExpand (1 samples, 0.01%)</title><rect x="96.7765%" y="533" width="0.0102%" height="15" fill="rgb(251,54,12)"/><text x="97.0265%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::AccountingAllocator::AllocateSegment (1 samples, 0.01%)</title><rect x="96.7765%" y="517" width="0.0102%" height="15" fill="rgb(254,176,54)"/><text x="97.0265%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="96.7765%" y="501" width="0.0102%" height="15" fill="rgb(210,32,8)"/><text x="97.0265%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::AssembleCode(v8::internal::compiler::Linkage*, std::__1::unique_ptr&lt;v8::internal::AssemblerBuffer, std::__1::default_delete (2 samples, 0.02%)</title><rect x="96.7765%" y="661" width="0.0204%" height="15" fill="rgb(235,52,38)"/><text x="97.0265%" y="671.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AssembleCodePhase&gt; (2 samples, 0.02%)</title><rect x="96.7765%" y="645" width="0.0204%" height="15" fill="rgb(231,4,44)"/><text x="97.0265%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::AssembleCode (2 samples, 0.02%)</title><rect x="96.7765%" y="629" width="0.0204%" height="15" fill="rgb(249,2,32)"/><text x="97.0265%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::AssembleInstruction (2 samples, 0.02%)</title><rect x="96.7765%" y="613" width="0.0204%" height="15" fill="rgb(224,65,26)"/><text x="97.0265%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GapResolver::Resolve (1 samples, 0.01%)</title><rect x="96.7867%" y="597" width="0.0102%" height="15" fill="rgb(250,73,40)"/><text x="97.0367%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::AssembleMove (1 samples, 0.01%)</title><rect x="96.7867%" y="581" width="0.0102%" height="15" fill="rgb(253,177,16)"/><text x="97.0367%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CodeGenerator::AssembleMove(v8::internal::compiler::InstructionOperand*, v8::internal::compiler::InstructionOperand*)::$_1::operator() (1 samples, 0.01%)</title><rect x="96.7867%" y="565" width="0.0102%" height="15" fill="rgb(217,32,34)"/><text x="97.0367%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::TurboAssembler::Move(v8::internal::Register, v8::internal::Handle (1 samples, 0.01%)</title><rect x="96.7867%" y="549" width="0.0102%" height="15" fill="rgb(212,7,10)"/><text x="97.0367%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::AssemblerBase::AddEmbeddedObject(v8::internal::Handle (1 samples, 0.01%)</title><rect x="96.7867%" y="533" width="0.0102%" height="15" fill="rgb(245,89,8)"/><text x="97.0367%" y="543.50"></text></g><g><title>libsystem_m.dylib`ceilf (1 samples, 0.01%)</title><rect x="96.7867%" y="517" width="0.0102%" height="15" fill="rgb(237,16,53)"/><text x="97.0367%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LinearScanAllocator::FindFreeRegistersForRange(v8::internal::compiler::LiveRange*, v8::internal::Vector (1 samples, 0.01%)</title><rect x="96.7969%" y="581" width="0.0102%" height="15" fill="rgb(250,204,30)"/><text x="97.0469%" y="591.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateGeneralRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt; &gt; (2 samples, 0.02%)</title><rect x="96.7969%" y="613" width="0.0204%" height="15" fill="rgb(208,77,27)"/><text x="97.0469%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LinearScanAllocator::AllocateRegisters (2 samples, 0.02%)</title><rect x="96.7969%" y="597" width="0.0204%" height="15" fill="rgb(250,204,28)"/><text x="97.0469%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LinearScanAllocator::UpdateDeferredFixedRanges (1 samples, 0.01%)</title><rect x="96.8071%" y="581" width="0.0102%" height="15" fill="rgb(244,63,21)"/><text x="97.0571%" y="591.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AssignSpillSlotsPhase&gt; (1 samples, 0.01%)</title><rect x="96.8173%" y="613" width="0.0102%" height="15" fill="rgb(236,85,44)"/><text x="97.0673%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::OperandAssigner::AssignSpillSlots (1 samples, 0.01%)</title><rect x="96.8173%" y="597" width="0.0102%" height="15" fill="rgb(215,98,4)"/><text x="97.0673%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (4 samples, 0.04%)</title><rect x="96.7969%" y="629" width="0.0408%" height="15" fill="rgb(235,38,11)"/><text x="97.0469%" y="639.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::BuildLiveRangesPhase&gt; (1 samples, 0.01%)</title><rect x="96.8275%" y="613" width="0.0102%" height="15" fill="rgb(254,186,25)"/><text x="97.0775%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LiveRangeBuilder::BuildLiveRanges (1 samples, 0.01%)</title><rect x="96.8275%" y="597" width="0.0102%" height="15" fill="rgb(225,55,31)"/><text x="97.0775%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LiveRangeBuilder::ProcessInstructions (1 samples, 0.01%)</title><rect x="96.8275%" y="581" width="0.0102%" height="15" fill="rgb(211,15,21)"/><text x="97.0775%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LiveRangeBuilder::Use (1 samples, 0.01%)</title><rect x="96.8275%" y="565" width="0.0102%" height="15" fill="rgb(215,187,41)"/><text x="97.0775%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::TopLevelLiveRange::AddUseInterval (1 samples, 0.01%)</title><rect x="96.8275%" y="549" width="0.0102%" height="15" fill="rgb(248,69,32)"/><text x="97.0775%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::GetVirtualRegister (1 samples, 0.01%)</title><rect x="96.8479%" y="549" width="0.0102%" height="15" fill="rgb(252,102,52)"/><text x="97.0979%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::VisitCall (2 samples, 0.02%)</title><rect x="96.8479%" y="565" width="0.0204%" height="15" fill="rgb(253,140,32)"/><text x="97.0979%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::InitializeCallBuffer(v8::internal::compiler::Node*, v8::internal::compiler::CallBuffer*, v8::base::Flags (1 samples, 0.01%)</title><rect x="96.8581%" y="549" width="0.0102%" height="15" fill="rgb(216,56,42)"/><text x="97.1081%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::VisitDeoptimizeIf (1 samples, 0.01%)</title><rect x="96.8683%" y="565" width="0.0102%" height="15" fill="rgb(216,184,14)"/><text x="97.1183%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::VisitWordCompareZero (1 samples, 0.01%)</title><rect x="96.8683%" y="549" width="0.0102%" height="15" fill="rgb(237,187,27)"/><text x="97.1183%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::VisitBinop (1 samples, 0.01%)</title><rect x="96.8683%" y="533" width="0.0102%" height="15" fill="rgb(219,65,3)"/><text x="97.1183%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::EmitWithContinuation (1 samples, 0.01%)</title><rect x="96.8683%" y="517" width="0.0102%" height="15" fill="rgb(245,83,25)"/><text x="97.1183%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::EmitWithContinuation (1 samples, 0.01%)</title><rect x="96.8683%" y="501" width="0.0102%" height="15" fill="rgb(214,205,45)"/><text x="97.1183%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::Emit (1 samples, 0.01%)</title><rect x="96.8683%" y="485" width="0.0102%" height="15" fill="rgb(241,20,18)"/><text x="97.1183%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Instruction::Instruction (1 samples, 0.01%)</title><rect x="96.8683%" y="469" width="0.0102%" height="15" fill="rgb(232,163,23)"/><text x="97.1183%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::SelectInstructions (9 samples, 0.09%)</title><rect x="96.7969%" y="645" width="0.0918%" height="15" fill="rgb(214,5,46)"/><text x="97.0469%" y="655.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InstructionSelectionPhase, v8::internal::compiler::Linkage*&amp;&gt; (5 samples, 0.05%)</title><rect x="96.8377%" y="629" width="0.0510%" height="15" fill="rgb(229,78,17)"/><text x="97.0877%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelectionPhase::Run (5 samples, 0.05%)</title><rect x="96.8377%" y="613" width="0.0510%" height="15" fill="rgb(248,89,10)"/><text x="97.0877%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::SelectInstructions (5 samples, 0.05%)</title><rect x="96.8377%" y="597" width="0.0510%" height="15" fill="rgb(248,54,15)"/><text x="97.0877%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::VisitBlock (5 samples, 0.05%)</title><rect x="96.8377%" y="581" width="0.0510%" height="15" fill="rgb(223,116,6)"/><text x="97.0877%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::VisitDeoptimizeUnless (1 samples, 0.01%)</title><rect x="96.8785%" y="565" width="0.0102%" height="15" fill="rgb(205,125,38)"/><text x="97.1285%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::VisitWordCompareZero (1 samples, 0.01%)</title><rect x="96.8785%" y="549" width="0.0102%" height="15" fill="rgb(251,78,38)"/><text x="97.1285%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::(anonymous namespace)::VisitWord32EqualImpl (1 samples, 0.01%)</title><rect x="96.8785%" y="533" width="0.0102%" height="15" fill="rgb(253,78,28)"/><text x="97.1285%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::(anonymous namespace)::VisitWordCompare (1 samples, 0.01%)</title><rect x="96.8785%" y="517" width="0.0102%" height="15" fill="rgb(209,120,3)"/><text x="97.1285%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::EmitWithContinuation (1 samples, 0.01%)</title><rect x="96.8785%" y="501" width="0.0102%" height="15" fill="rgb(238,229,9)"/><text x="97.1285%" y="511.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::EmitWithContinuation (1 samples, 0.01%)</title><rect x="96.8785%" y="485" width="0.0102%" height="15" fill="rgb(253,159,18)"/><text x="97.1285%" y="495.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::AppendDeoptimizeArguments(v8::internal::ZoneVector (1 samples, 0.01%)</title><rect x="96.8785%" y="469" width="0.0102%" height="15" fill="rgb(244,42,34)"/><text x="97.1285%" y="479.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::AddInputsToFrameStateDescriptor(v8::internal::compiler::FrameStateDescriptor*, v8::internal::compiler::FrameState, v8::internal::compiler::OperandGenerator*, v8::internal::compiler::StateObjectDeduplicator*, v8::internal::ZoneVector (1 samples, 0.01%)</title><rect x="96.8785%" y="453" width="0.0102%" height="15" fill="rgb(224,8,7)"/><text x="97.1285%" y="463.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::AddInputsToFrameStateDescriptor(v8::internal::compiler::StateValueList*, v8::internal::ZoneVector (1 samples, 0.01%)</title><rect x="96.8785%" y="437" width="0.0102%" height="15" fill="rgb(210,201,45)"/><text x="97.1285%" y="447.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSelector::AddOperandToStateValueDescriptor(v8::internal::compiler::StateValueList*, v8::internal::ZoneVector (1 samples, 0.01%)</title><rect x="96.8785%" y="421" width="0.0102%" height="15" fill="rgb(252,185,21)"/><text x="97.1285%" y="431.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::InstructionSequence::AddImmediate (1 samples, 0.01%)</title><rect x="96.8785%" y="405" width="0.0102%" height="15" fill="rgb(223,131,1)"/><text x="97.1285%" y="415.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::BuildCFG (1 samples, 0.01%)</title><rect x="96.8887%" y="613" width="0.0102%" height="15" fill="rgb(245,141,16)"/><text x="97.1387%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CFGBuilder::Run (1 samples, 0.01%)</title><rect x="96.8887%" y="597" width="0.0102%" height="15" fill="rgb(229,55,45)"/><text x="97.1387%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::CFGBuilder::Queue (1 samples, 0.01%)</title><rect x="96.8887%" y="581" width="0.0102%" height="15" fill="rgb(208,92,15)"/><text x="97.1387%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::PrepareUses (1 samples, 0.01%)</title><rect x="96.8989%" y="613" width="0.0102%" height="15" fill="rgb(234,185,47)"/><text x="97.1489%" y="623.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ComputeSchedulePhase&gt; (3 samples, 0.03%)</title><rect x="96.8887%" y="645" width="0.0306%" height="15" fill="rgb(253,104,50)"/><text x="97.1387%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (3 samples, 0.03%)</title><rect x="96.8887%" y="629" width="0.0306%" height="15" fill="rgb(205,70,7)"/><text x="97.1387%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::ScheduleLate (1 samples, 0.01%)</title><rect x="96.9091%" y="613" width="0.0102%" height="15" fill="rgb(240,178,43)"/><text x="97.1591%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ScheduleLateNodeVisitor::ProcessQueue (1 samples, 0.01%)</title><rect x="96.9091%" y="597" width="0.0102%" height="15" fill="rgb(214,112,2)"/><text x="97.1591%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ScheduleLateNodeVisitor::VisitNode (1 samples, 0.01%)</title><rect x="96.9091%" y="581" width="0.0102%" height="15" fill="rgb(206,46,17)"/><text x="97.1591%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ScheduleLateNodeVisitor::GetBlockForUse (1 samples, 0.01%)</title><rect x="96.9091%" y="565" width="0.0102%" height="15" fill="rgb(225,220,16)"/><text x="97.1591%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::DeadCodeElimination::ReduceNode (1 samples, 0.01%)</title><rect x="96.9397%" y="565" width="0.0102%" height="15" fill="rgb(238,65,40)"/><text x="97.1897%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::NodeProperties::GetControlInput (1 samples, 0.01%)</title><rect x="96.9397%" y="549" width="0.0102%" height="15" fill="rgb(230,151,21)"/><text x="97.1897%" y="559.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EarlyOptimizationPhase&gt; (4 samples, 0.04%)</title><rect x="96.9193%" y="645" width="0.0408%" height="15" fill="rgb(218,58,49)"/><text x="97.1693%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::EarlyOptimizationPhase::Run (4 samples, 0.04%)</title><rect x="96.9193%" y="629" width="0.0408%" height="15" fill="rgb(219,179,14)"/><text x="97.1693%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (4 samples, 0.04%)</title><rect x="96.9193%" y="613" width="0.0408%" height="15" fill="rgb(223,72,1)"/><text x="97.1693%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (4 samples, 0.04%)</title><rect x="96.9193%" y="597" width="0.0408%" height="15" fill="rgb(238,126,10)"/><text x="97.1693%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (2 samples, 0.02%)</title><rect x="96.9397%" y="581" width="0.0204%" height="15" fill="rgb(224,206,38)"/><text x="97.1897%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ValueNumberingReducer::Reduce (1 samples, 0.01%)</title><rect x="96.9499%" y="565" width="0.0102%" height="15" fill="rgb(212,201,54)"/><text x="97.1999%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::PrepareUses (1 samples, 0.01%)</title><rect x="96.9601%" y="597" width="0.0102%" height="15" fill="rgb(218,154,48)"/><text x="97.2101%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::ScheduleEarly (1 samples, 0.01%)</title><rect x="96.9703%" y="597" width="0.0102%" height="15" fill="rgb(232,93,24)"/><text x="97.2203%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ScheduleEarlyNodeVisitor::Run(v8::internal::ZoneVector (1 samples, 0.01%)</title><rect x="96.9703%" y="581" width="0.0102%" height="15" fill="rgb(245,30,21)"/><text x="97.2203%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ScheduleLateNodeVisitor::ScheduleRegion (1 samples, 0.01%)</title><rect x="96.9805%" y="565" width="0.0102%" height="15" fill="rgb(242,148,29)"/><text x="97.2305%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::UpdatePlacement (1 samples, 0.01%)</title><rect x="96.9805%" y="549" width="0.0102%" height="15" fill="rgb(244,153,54)"/><text x="97.2305%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::DecrementUnscheduledUseCount (1 samples, 0.01%)</title><rect x="96.9805%" y="533" width="0.0102%" height="15" fill="rgb(252,87,22)"/><text x="97.2305%" y="543.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EffectControlLinearizationPhase&gt; (4 samples, 0.04%)</title><rect x="96.9601%" y="645" width="0.0408%" height="15" fill="rgb(210,51,29)"/><text x="97.2101%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::EffectControlLinearizationPhase::Run (4 samples, 0.04%)</title><rect x="96.9601%" y="629" width="0.0408%" height="15" fill="rgb(242,136,47)"/><text x="97.2101%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (4 samples, 0.04%)</title><rect x="96.9601%" y="613" width="0.0408%" height="15" fill="rgb(238,68,4)"/><text x="97.2101%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Scheduler::ScheduleLate (2 samples, 0.02%)</title><rect x="96.9805%" y="597" width="0.0204%" height="15" fill="rgb(242,161,30)"/><text x="97.2305%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ScheduleLateNodeVisitor::ProcessQueue (2 samples, 0.02%)</title><rect x="96.9805%" y="581" width="0.0204%" height="15" fill="rgb(218,58,44)"/><text x="97.2305%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ScheduleLateNodeVisitor::VisitNode (1 samples, 0.01%)</title><rect x="96.9907%" y="565" width="0.0102%" height="15" fill="rgb(252,125,32)"/><text x="97.2407%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::EscapeAnalysisTracker::Scope::~Scope (1 samples, 0.01%)</title><rect x="97.0009%" y="581" width="0.0102%" height="15" fill="rgb(219,178,0)"/><text x="97.2509%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::SparseSidetable&lt;v8::internal::compiler::VirtualObject*&gt;::Set (1 samples, 0.01%)</title><rect x="97.0009%" y="565" width="0.0102%" height="15" fill="rgb(213,152,7)"/><text x="97.2509%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::VariableTracker::Scope::Scope (1 samples, 0.01%)</title><rect x="97.0111%" y="581" width="0.0102%" height="15" fill="rgb(249,109,34)"/><text x="97.2611%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::VariableTracker::MergeInputs (1 samples, 0.01%)</title><rect x="97.0111%" y="565" width="0.0102%" height="15" fill="rgb(232,96,21)"/><text x="97.2611%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::VariableTracker::State::Get (1 samples, 0.01%)</title><rect x="97.0111%" y="549" width="0.0102%" height="15" fill="rgb(228,27,39)"/><text x="97.2611%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::EffectGraphReducer::ReduceFrom (4 samples, 0.04%)</title><rect x="97.0009%" y="613" width="0.0408%" height="15" fill="rgb(211,182,52)"/><text x="97.2509%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::EscapeAnalysis::Reduce (4 samples, 0.04%)</title><rect x="97.0009%" y="597" width="0.0408%" height="15" fill="rgb(234,178,38)"/><text x="97.2509%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::VariableTracker::Scope::~Scope (2 samples, 0.02%)</title><rect x="97.0213%" y="581" width="0.0204%" height="15" fill="rgb(221,111,3)"/><text x="97.2713%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::operator==(v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash (2 samples, 0.02%)</title><rect x="97.0213%" y="565" width="0.0204%" height="15" fill="rgb(228,175,21)"/><text x="97.2713%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::iterator::operator++ (2 samples, 0.02%)</title><rect x="97.0213%" y="549" width="0.0204%" height="15" fill="rgb(228,174,43)"/><text x="97.2713%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::EscapeAnalysis::Reduce (1 samples, 0.01%)</title><rect x="97.0417%" y="613" width="0.0102%" height="15" fill="rgb(211,191,0)"/><text x="97.2917%" y="623.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (6 samples, 0.06%)</title><rect x="97.0009%" y="645" width="0.0612%" height="15" fill="rgb(253,117,3)"/><text x="97.2509%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::EscapeAnalysisPhase::Run (6 samples, 0.06%)</title><rect x="97.0009%" y="629" width="0.0612%" height="15" fill="rgb(241,127,19)"/><text x="97.2509%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.01%)</title><rect x="97.0519%" y="613" width="0.0102%" height="15" fill="rgb(218,103,12)"/><text x="97.3019%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.01%)</title><rect x="97.0519%" y="597" width="0.0102%" height="15" fill="rgb(236,214,43)"/><text x="97.3019%" y="607.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LateOptimizationPhase&gt; (1 samples, 0.01%)</title><rect x="97.0621%" y="645" width="0.0102%" height="15" fill="rgb(244,144,19)"/><text x="97.3121%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LateOptimizationPhase::Run (1 samples, 0.01%)</title><rect x="97.0621%" y="629" width="0.0102%" height="15" fill="rgb(246,188,10)"/><text x="97.3121%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.01%)</title><rect x="97.0621%" y="613" width="0.0102%" height="15" fill="rgb(212,193,33)"/><text x="97.3121%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.01%)</title><rect x="97.0621%" y="597" width="0.0102%" height="15" fill="rgb(241,51,29)"/><text x="97.3121%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.01%)</title><rect x="97.0621%" y="581" width="0.0102%" height="15" fill="rgb(211,58,19)"/><text x="97.3121%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::DeadCodeElimination::Reduce (1 samples, 0.01%)</title><rect x="97.0621%" y="565" width="0.0102%" height="15" fill="rgb(229,111,26)"/><text x="97.3121%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::TickCounter::TickAndMaybeEnterSafepoint (2 samples, 0.02%)</title><rect x="97.0825%" y="565" width="0.0204%" height="15" fill="rgb(213,115,40)"/><text x="97.3325%" y="575.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoadEliminationPhase&gt; (4 samples, 0.04%)</title><rect x="97.0723%" y="645" width="0.0408%" height="15" fill="rgb(209,56,44)"/><text x="97.3223%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LoadEliminationPhase::Run (4 samples, 0.04%)</title><rect x="97.0723%" y="629" width="0.0408%" height="15" fill="rgb(230,108,32)"/><text x="97.3223%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (4 samples, 0.04%)</title><rect x="97.0723%" y="613" width="0.0408%" height="15" fill="rgb(216,165,31)"/><text x="97.3223%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (4 samples, 0.04%)</title><rect x="97.0723%" y="597" width="0.0408%" height="15" fill="rgb(218,122,21)"/><text x="97.3223%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (4 samples, 0.04%)</title><rect x="97.0723%" y="581" width="0.0408%" height="15" fill="rgb(223,224,47)"/><text x="97.3223%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LoadElimination::Reduce (1 samples, 0.01%)</title><rect x="97.1029%" y="565" width="0.0102%" height="15" fill="rgb(238,102,44)"/><text x="97.3529%" y="575.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoopPeelingPhase&gt; (1 samples, 0.01%)</title><rect x="97.1131%" y="645" width="0.0102%" height="15" fill="rgb(236,46,40)"/><text x="97.3631%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LoopPeelingPhase::Run (1 samples, 0.01%)</title><rect x="97.1131%" y="629" width="0.0102%" height="15" fill="rgb(247,202,50)"/><text x="97.3631%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LoopFinder::BuildLoopTree (1 samples, 0.01%)</title><rect x="97.1131%" y="613" width="0.0102%" height="15" fill="rgb(209,99,20)"/><text x="97.3631%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::LoopFinderImpl::PropagateBackward (1 samples, 0.01%)</title><rect x="97.1131%" y="597" width="0.0102%" height="15" fill="rgb(252,27,34)"/><text x="97.3631%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::MachineOperatorReducer::Reduce (1 samples, 0.01%)</title><rect x="97.1233%" y="565" width="0.0102%" height="15" fill="rgb(215,206,23)"/><text x="97.3733%" y="575.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MachineOperatorOptimizationPhase&gt; (2 samples, 0.02%)</title><rect x="97.1233%" y="645" width="0.0204%" height="15" fill="rgb(212,135,36)"/><text x="97.3733%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::MachineOperatorOptimizationPhase::Run (2 samples, 0.02%)</title><rect x="97.1233%" y="629" width="0.0204%" height="15" fill="rgb(240,189,1)"/><text x="97.3733%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (2 samples, 0.02%)</title><rect x="97.1233%" y="613" width="0.0204%" height="15" fill="rgb(242,56,20)"/><text x="97.3733%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (2 samples, 0.02%)</title><rect x="97.1233%" y="597" width="0.0204%" height="15" fill="rgb(247,132,33)"/><text x="97.3733%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (2 samples, 0.02%)</title><rect x="97.1233%" y="581" width="0.0204%" height="15" fill="rgb(208,149,11)"/><text x="97.3733%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ValueNumberingReducer::Reduce (1 samples, 0.01%)</title><rect x="97.1335%" y="565" width="0.0102%" height="15" fill="rgb(211,33,11)"/><text x="97.3835%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::ValueNumberingReducer::Grow (1 samples, 0.01%)</title><rect x="97.1335%" y="549" width="0.0102%" height="15" fill="rgb(221,29,38)"/><text x="97.3835%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::NodeProperties::HashCode (1 samples, 0.01%)</title><rect x="97.1335%" y="533" width="0.0102%" height="15" fill="rgb(206,182,49)"/><text x="97.3835%" y="543.50"></text></g><g><title>deno_hyper_bin`v8::base::hash_value (1 samples, 0.01%)</title><rect x="97.1335%" y="517" width="0.0102%" height="15" fill="rgb(216,140,1)"/><text x="97.3835%" y="527.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphTrimmer::TrimGraph (1 samples, 0.01%)</title><rect x="97.1437%" y="613" width="0.0102%" height="15" fill="rgb(232,57,40)"/><text x="97.3937%" y="623.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MemoryOptimizationPhase&gt; (2 samples, 0.02%)</title><rect x="97.1437%" y="645" width="0.0204%" height="15" fill="rgb(224,186,18)"/><text x="97.3937%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::MemoryOptimizationPhase::Run (2 samples, 0.02%)</title><rect x="97.1437%" y="629" width="0.0204%" height="15" fill="rgb(215,121,11)"/><text x="97.3937%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::MemoryOptimizer::Optimize (1 samples, 0.01%)</title><rect x="97.1539%" y="613" width="0.0102%" height="15" fill="rgb(245,147,10)"/><text x="97.4039%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::MemoryOptimizer::VisitAllocateRaw (1 samples, 0.01%)</title><rect x="97.1539%" y="597" width="0.0102%" height="15" fill="rgb(238,153,13)"/><text x="97.4039%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::MemoryLowering::ReduceAllocateRaw (1 samples, 0.01%)</title><rect x="97.1539%" y="581" width="0.0102%" height="15" fill="rgb(233,108,0)"/><text x="97.4039%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphAssembler::UniqueIntPtrConstant (1 samples, 0.01%)</title><rect x="97.1539%" y="565" width="0.0102%" height="15" fill="rgb(212,157,17)"/><text x="97.4039%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::Graph::NewNode (1 samples, 0.01%)</title><rect x="97.1539%" y="549" width="0.0102%" height="15" fill="rgb(225,213,38)"/><text x="97.4039%" y="559.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::RepresentationSelector::RunLowerPhase (2 samples, 0.02%)</title><rect x="97.1641%" y="597" width="0.0204%" height="15" fill="rgb(248,16,11)"/><text x="97.4141%" y="607.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::RepresentationSelector::VisitFrameState&lt;(v8::internal::compiler::Phase)2&gt; (2 samples, 0.02%)</title><rect x="97.1641%" y="581" width="0.0204%" height="15" fill="rgb(241,33,4)"/><text x="97.4141%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::RepresentationSelector::ConvertInput (1 samples, 0.01%)</title><rect x="97.1743%" y="565" width="0.0102%" height="15" fill="rgb(222,26,43)"/><text x="97.4243%" y="575.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::SimplifiedLoweringPhase, v8::internal::compiler::Linkage*&amp;&gt; (3 samples, 0.03%)</title><rect x="97.1641%" y="645" width="0.0306%" height="15" fill="rgb(243,29,36)"/><text x="97.4141%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::SimplifiedLoweringPhase::Run (3 samples, 0.03%)</title><rect x="97.1641%" y="629" width="0.0306%" height="15" fill="rgb(241,9,27)"/><text x="97.4141%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::SimplifiedLowering::LowerAllNodes (3 samples, 0.03%)</title><rect x="97.1641%" y="613" width="0.0306%" height="15" fill="rgb(205,117,26)"/><text x="97.4141%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::RepresentationSelector::RunPropagatePhase (1 samples, 0.01%)</title><rect x="97.1845%" y="597" width="0.0102%" height="15" fill="rgb(209,80,39)"/><text x="97.4345%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.01%)</title><rect x="97.2049%" y="581" width="0.0102%" height="15" fill="rgb(239,155,6)"/><text x="97.4549%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::SimplifiedOperatorReducer::Reduce (1 samples, 0.01%)</title><rect x="97.2049%" y="565" width="0.0102%" height="15" fill="rgb(212,104,12)"/><text x="97.4549%" y="575.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (44 samples, 0.45%)</title><rect x="96.7765%" y="677" width="0.4488%" height="15" fill="rgb(234,204,3)"/><text x="97.0265%" y="687.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::OptimizeGraph (42 samples, 0.43%)</title><rect x="96.7969%" y="661" width="0.4284%" height="15" fill="rgb(251,218,7)"/><text x="97.0469%" y="671.50"></text></g><g><title>deno_hyper_bin`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::TypedLoweringPhase&gt; (3 samples, 0.03%)</title><rect x="97.1947%" y="645" width="0.0306%" height="15" fill="rgb(221,81,32)"/><text x="97.4447%" y="655.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::TypedLoweringPhase::Run (3 samples, 0.03%)</title><rect x="97.1947%" y="629" width="0.0306%" height="15" fill="rgb(214,152,26)"/><text x="97.4447%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceNode (3 samples, 0.03%)</title><rect x="97.1947%" y="613" width="0.0306%" height="15" fill="rgb(223,22,3)"/><text x="97.4447%" y="623.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::GraphReducer::ReduceTop (3 samples, 0.03%)</title><rect x="97.1947%" y="597" width="0.0306%" height="15" fill="rgb(207,174,7)"/><text x="97.4447%" y="607.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::TypedOptimization::ReducePhi (1 samples, 0.01%)</title><rect x="97.2151%" y="581" width="0.0102%" height="15" fill="rgb(224,19,52)"/><text x="97.4651%" y="591.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (45 samples, 0.46%)</title><rect x="96.7765%" y="725" width="0.4590%" height="15" fill="rgb(228,24,14)"/><text x="97.0265%" y="735.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizingCompileDispatcher::CompileNext (45 samples, 0.46%)</title><rect x="96.7765%" y="709" width="0.4590%" height="15" fill="rgb(230,153,43)"/><text x="97.0265%" y="719.50"></text></g><g><title>deno_hyper_bin`v8::internal::OptimizedCompilationJob::ExecuteJob (45 samples, 0.46%)</title><rect x="96.7765%" y="693" width="0.4590%" height="15" fill="rgb(231,106,12)"/><text x="97.0265%" y="703.50"></text></g><g><title>deno_hyper_bin`v8::internal::compiler::PipelineImpl::OptimizeGraph (1 samples, 0.01%)</title><rect x="97.2253%" y="677" width="0.0102%" height="15" fill="rgb(215,92,2)"/><text x="97.4753%" y="687.50"></text></g><g><title>deno_hyper_bin`v8::platform::DefaultJobWorker::~DefaultJobWorker (1 samples, 0.01%)</title><rect x="97.2355%" y="725" width="0.0102%" height="15" fill="rgb(249,143,25)"/><text x="97.4855%" y="735.50"></text></g><g><title>deno_hyper_bin`std::__1::__shared_weak_count::__release_weak (1 samples, 0.01%)</title><rect x="97.2355%" y="709" width="0.0102%" height="15" fill="rgb(252,7,35)"/><text x="97.4855%" y="719.50"></text></g><g><title>deno_hyper_bin`v8::platform::(anonymous namespace)::DefaultTimeFunction (3 samples, 0.03%)</title><rect x="97.2457%" y="709" width="0.0306%" height="15" fill="rgb(216,69,40)"/><text x="97.4957%" y="719.50"></text></g><g><title>deno_hyper_bin`DYLD-STUB$$mach_absolute_time (1 samples, 0.01%)</title><rect x="97.2661%" y="693" width="0.0102%" height="15" fill="rgb(240,36,33)"/><text x="97.5161%" y="703.50"></text></g><g><title>deno_hyper_bin`v8::platform::DelayedTaskQueue::GetNext (12 samples, 0.12%)</title><rect x="97.2457%" y="725" width="0.1224%" height="15" fill="rgb(231,128,14)"/><text x="97.4957%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (9 samples, 0.09%)</title><rect x="97.2763%" y="709" width="0.0918%" height="15" fill="rgb(245,143,14)"/><text x="97.5263%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (4 samples, 0.04%)</title><rect x="97.6742%" y="661" width="0.0408%" height="15" fill="rgb(222,130,28)"/><text x="97.9242%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="97.7150%" y="661" width="0.0204%" height="15" fill="rgb(212,10,48)"/><text x="97.9650%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.08%)</title><rect x="97.7354%" y="661" width="0.0816%" height="15" fill="rgb(254,118,45)"/><text x="97.9854%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.08%)</title><rect x="97.7354%" y="645" width="0.0816%" height="15" fill="rgb(228,6,45)"/><text x="97.9854%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.08%)</title><rect x="97.7354%" y="629" width="0.0816%" height="15" fill="rgb(241,18,35)"/><text x="97.9854%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.05%)</title><rect x="97.9190%" y="645" width="0.0510%" height="15" fill="rgb(227,214,53)"/><text x="98.1690%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.08%)</title><rect x="98.0822%" y="629" width="0.0816%" height="15" fill="rgb(224,107,51)"/><text x="98.3322%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.28%)</title><rect x="97.9700%" y="645" width="0.2754%" height="15" fill="rgb(248,60,28)"/><text x="98.2200%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.08%)</title><rect x="98.1638%" y="629" width="0.0816%" height="15" fill="rgb(249,101,23)"/><text x="98.4138%" y="639.50"></text></g><g><title>deno_hyper_bin`v8::internal::BackingStore::~BackingStore (62 samples, 0.63%)</title><rect x="97.6334%" y="677" width="0.6325%" height="15" fill="rgb(228,51,19)"/><text x="97.8834%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.45%)</title><rect x="97.8170%" y="661" width="0.4488%" height="15" fill="rgb(213,20,6)"/><text x="98.0670%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (2 samples, 0.02%)</title><rect x="98.2454%" y="645" width="0.0204%" height="15" fill="rgb(212,124,10)"/><text x="98.4954%" y="655.50"></text></g><g><title>deno_hyper_bin`std::__1::__shared_ptr_pointer&lt;v8::BackingStore*, std::__1::shared_ptr&lt;v8::BackingStore&gt;::__shared_ptr_default_delete&lt;v8::BackingStore, v8::BackingStore&gt;, std::__1::allocator&lt;v8::BackingStore&gt; &gt;::__on_zero_shared (63 samples, 0.64%)</title><rect x="97.6334%" y="693" width="0.6427%" height="15" fill="rgb(248,3,40)"/><text x="97.8834%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.01%)</title><rect x="98.2658%" y="677" width="0.0102%" height="15" fill="rgb(223,178,23)"/><text x="98.5158%" y="687.50"></text></g><g><title>deno_hyper_bin`v8::internal::BackingStore::~BackingStore (1 samples, 0.01%)</title><rect x="98.2760%" y="693" width="0.0102%" height="15" fill="rgb(240,132,45)"/><text x="98.5260%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (8 samples, 0.08%)</title><rect x="98.2862%" y="693" width="0.0816%" height="15" fill="rgb(245,164,36)"/><text x="98.5362%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="98.3678%" y="693" width="0.0204%" height="15" fill="rgb(231,188,53)"/><text x="98.6178%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.33%)</title><rect x="98.3882%" y="693" width="0.3264%" height="15" fill="rgb(237,198,39)"/><text x="98.6382%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.23%)</title><rect x="98.4801%" y="677" width="0.2346%" height="15" fill="rgb(223,120,35)"/><text x="98.7301%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.21%)</title><rect x="98.5005%" y="661" width="0.2142%" height="15" fill="rgb(253,107,49)"/><text x="98.7505%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.11%)</title><rect x="98.9493%" y="677" width="0.1122%" height="15" fill="rgb(216,44,31)"/><text x="99.1993%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.19%)</title><rect x="99.5512%" y="661" width="0.1938%" height="15" fill="rgb(253,87,21)"/><text x="99.8012%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (88 samples, 0.90%)</title><rect x="99.0615%" y="677" width="0.8977%" height="15" fill="rgb(226,18,2)"/><text x="99.3115%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (21 samples, 0.21%)</title><rect x="99.7450%" y="661" width="0.2142%" height="15" fill="rgb(216,8,46)"/><text x="99.9950%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (123 samples, 1.25%)</title><rect x="98.7147%" y="693" width="1.2547%" height="15" fill="rgb(226,140,39)"/><text x="98.9647%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.01%)</title><rect x="99.9592%" y="677" width="0.0102%" height="15" fill="rgb(221,194,54)"/><text x="100.2092%" y="687.50"></text></g><g><title>deno_hyper_bin`v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (257 samples, 2.62%)</title><rect x="97.3682%" y="709" width="2.6216%" height="15" fill="rgb(213,92,11)"/><text x="97.6182%" y="719.50">de..</text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="99.9694%" y="693" width="0.0204%" height="15" fill="rgb(229,162,46)"/><text x="100.2194%" y="703.50"></text></g><g><title>all (9,803 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(214,111,36)"/><text x="0.2500%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (320 samples, 3.26%)</title><rect x="96.7357%" y="789" width="3.2643%" height="15" fill="rgb(207,6,21)"/><text x="96.9857%" y="799.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (320 samples, 3.26%)</title><rect x="96.7357%" y="773" width="3.2643%" height="15" fill="rgb(213,127,38)"/><text x="96.9857%" y="783.50">lib..</text></g><g><title>deno_hyper_bin`v8::base::ThreadEntry (320 samples, 3.26%)</title><rect x="96.7357%" y="757" width="3.2643%" height="15" fill="rgb(238,118,32)"/><text x="96.9857%" y="767.50">den..</text></g><g><title>deno_hyper_bin`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (319 samples, 3.25%)</title><rect x="96.7459%" y="741" width="3.2541%" height="15" fill="rgb(240,139,39)"/><text x="96.9959%" y="751.50">den..</text></g><g><title>deno_hyper_bin`void std::__1::__function::__policy_invoker&lt;void ()&gt;::__call_impl&lt;std::__1::__function::__default_alloc_func&lt;v8::internal::ArrayBufferSweeper::RequestSweep(v8::internal::ArrayBufferSweeper::SweepingScope)::$_0, void ()&gt; &gt; (258 samples, 2.63%)</title><rect x="97.3682%" y="725" width="2.6318%" height="15" fill="rgb(235,10,37)"/><text x="97.6182%" y="735.50">de..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="99.9898%" y="709" width="0.0102%" height="15" fill="rgb(249,171,38)"/><text x="100.2398%" y="719.50"></text></g></svg></svg>