<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="805.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="805.00"> </text><svg id="frames" x="10" width="1180"><g><title>dyper_ops`&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="0.0345%" y="597" width="0.0172%" height="15" fill="rgb(227,0,7)"/><text x="0.2845%" y="607.50"></text></g><g><title>dyper_ops`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="0.1035%" y="549" width="0.0103%" height="15" fill="rgb(217,0,24)"/><text x="0.3535%" y="559.50"></text></g><g><title>dyper_ops`mio::event::event::Event::is_writable (4 samples, 0.01%)</title><rect x="0.1172%" y="549" width="0.0138%" height="15" fill="rgb(221,193,54)"/><text x="0.3672%" y="559.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="0.2655%" y="533" width="0.0207%" height="15" fill="rgb(248,212,6)"/><text x="0.5155%" y="543.50"></text></g><g><title>dyper_ops`futures_task::waker::wake_arc_raw (3 samples, 0.01%)</title><rect x="0.2931%" y="533" width="0.0103%" height="15" fill="rgb(208,68,35)"/><text x="0.5431%" y="543.50"></text></g><g><title>dyper_ops`mio::event::event::Event::token (3 samples, 0.01%)</title><rect x="0.3069%" y="533" width="0.0103%" height="15" fill="rgb(232,128,0)"/><text x="0.5569%" y="543.50"></text></g><g><title>dyper_ops`core::array::_&lt;impl core::default::Default for [T (8 samples, 0.03%)</title><rect x="0.3931%" y="517" width="0.0276%" height="15" fill="rgb(207,160,47)"/><text x="0.6431%" y="527.50"></text></g><g><title> 32]&gt;::default (8 samples, 0.03%)</title><rect x="0.3931%" y="501" width="0.0276%" height="15" fill="rgb(228,23,34)"/><text x="0.6431%" y="511.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (25 samples, 0.09%)</title><rect x="0.4207%" y="517" width="0.0862%" height="15" fill="rgb(218,30,26)"/><text x="0.6707%" y="527.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (6 samples, 0.02%)</title><rect x="0.5794%" y="501" width="0.0207%" height="15" fill="rgb(220,122,19)"/><text x="0.8294%" y="511.50"></text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (158 samples, 0.54%)</title><rect x="0.3242%" y="533" width="0.5449%" height="15" fill="rgb(250,228,42)"/><text x="0.5742%" y="543.50"></text></g><g><title>dyper_ops`futures_task::arc_wake::ArcWake::wake (104 samples, 0.36%)</title><rect x="0.5104%" y="517" width="0.3586%" height="15" fill="rgb(240,193,28)"/><text x="0.7604%" y="527.50"></text></g><g><title>dyper_ops`tokio::util::wake::wake_arc_raw (78 samples, 0.27%)</title><rect x="0.6000%" y="501" width="0.2690%" height="15" fill="rgb(216,20,37)"/><text x="0.8500%" y="511.50"></text></g><g><title>dyper_ops`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (77 samples, 0.27%)</title><rect x="0.6035%" y="485" width="0.2655%" height="15" fill="rgb(206,188,39)"/><text x="0.8535%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`kevent (76 samples, 0.26%)</title><rect x="0.6069%" y="469" width="0.2621%" height="15" fill="rgb(217,207,13)"/><text x="0.8569%" y="479.50"></text></g><g><title>dyper_ops`tokio::io::driver::Driver::turn (614 samples, 2.12%)</title><rect x="0.1448%" y="549" width="2.1174%" height="15" fill="rgb(231,73,38)"/><text x="0.3948%" y="559.50">d..</text></g><g><title>libsystem_kernel.dylib`kevent (404 samples, 1.39%)</title><rect x="0.8690%" y="533" width="1.3932%" height="15" fill="rgb(225,20,46)"/><text x="1.1190%" y="543.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (7 samples, 0.02%)</title><rect x="2.2622%" y="549" width="0.0241%" height="15" fill="rgb(210,31,41)"/><text x="2.5122%" y="559.50"></text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.02%)</title><rect x="2.3105%" y="517" width="0.0207%" height="15" fill="rgb(221,200,47)"/><text x="2.5605%" y="527.50"></text></g><g><title>dyper_ops`tokio::signal::unix::driver::Driver::process (14 samples, 0.05%)</title><rect x="2.2933%" y="549" width="0.0483%" height="15" fill="rgb(226,26,5)"/><text x="2.5433%" y="559.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (10 samples, 0.03%)</title><rect x="2.3071%" y="533" width="0.0345%" height="15" fill="rgb(249,33,26)"/><text x="2.5571%" y="543.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.01%)</title><rect x="2.3312%" y="517" width="0.0103%" height="15" fill="rgb(235,183,28)"/><text x="2.5812%" y="527.50"></text></g><g><title>dyper_ops`&lt;tokio::process::imp::driver::Driver as tokio::park::Park&gt;::park (658 samples, 2.27%)</title><rect x="0.0966%" y="565" width="2.2691%" height="15" fill="rgb(221,5,38)"/><text x="0.3466%" y="575.50">d..</text></g><g><title>dyper_ops`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (6 samples, 0.02%)</title><rect x="2.3450%" y="549" width="0.0207%" height="15" fill="rgb(247,18,42)"/><text x="2.5950%" y="559.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="2.3657%" y="565" width="0.0138%" height="15" fill="rgb(241,131,45)"/><text x="2.6157%" y="575.50"></text></g><g><title>dyper_ops`std::time::Instant::checked_duration_since (6 samples, 0.02%)</title><rect x="2.3795%" y="565" width="0.0207%" height="15" fill="rgb(249,31,29)"/><text x="2.6295%" y="575.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (16 samples, 0.06%)</title><rect x="2.4278%" y="549" width="0.0552%" height="15" fill="rgb(225,111,53)"/><text x="2.6778%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::Wheel::next_expiration_time (4 samples, 0.01%)</title><rect x="2.4829%" y="549" width="0.0138%" height="15" fill="rgb(238,160,17)"/><text x="2.7329%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::Wheel::poll (10 samples, 0.03%)</title><rect x="2.4967%" y="549" width="0.0345%" height="15" fill="rgb(214,148,48)"/><text x="2.7467%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::level::Level::next_expiration (5 samples, 0.02%)</title><rect x="2.5140%" y="533" width="0.0172%" height="15" fill="rgb(232,36,49)"/><text x="2.7640%" y="543.50"></text></g><g><title>dyper_ops`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (37 samples, 0.13%)</title><rect x="2.4174%" y="565" width="0.1276%" height="15" fill="rgb(209,103,24)"/><text x="2.6674%" y="575.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::level::Level::next_expiration (4 samples, 0.01%)</title><rect x="2.5312%" y="549" width="0.0138%" height="15" fill="rgb(229,88,8)"/><text x="2.7812%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::Wheel::next_expiration_time (11 samples, 0.04%)</title><rect x="2.5450%" y="565" width="0.0379%" height="15" fill="rgb(213,181,19)"/><text x="2.7950%" y="575.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::level::Level::next_expiration (10 samples, 0.03%)</title><rect x="2.5485%" y="549" width="0.0345%" height="15" fill="rgb(254,191,54)"/><text x="2.7985%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::Driver&lt;P&gt;::park_internal (741 samples, 2.56%)</title><rect x="0.0690%" y="581" width="2.5553%" height="15" fill="rgb(241,83,37)"/><text x="0.3190%" y="591.50">dy..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.03%)</title><rect x="2.5933%" y="565" width="0.0310%" height="15" fill="rgb(233,36,39)"/><text x="2.8433%" y="575.50"></text></g><g><title>dyper_ops`&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (750 samples, 2.59%)</title><rect x="0.0517%" y="597" width="2.5864%" height="15" fill="rgb(226,3,54)"/><text x="0.3017%" y="607.50">dy..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (3 samples, 0.01%)</title><rect x="2.6278%" y="581" width="0.0103%" height="15" fill="rgb(245,192,40)"/><text x="2.8778%" y="591.50"></text></g><g><title>dyper_ops`&lt;T as core::any::Any&gt;::type_id (4 samples, 0.01%)</title><rect x="2.7209%" y="565" width="0.0138%" height="15" fill="rgb(238,167,29)"/><text x="2.9709%" y="575.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="2.7347%" y="565" width="0.0103%" height="15" fill="rgb(232,182,51)"/><text x="2.9847%" y="575.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::HandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.01%)</title><rect x="2.7588%" y="565" width="0.0103%" height="15" fill="rgb(231,60,39)"/><text x="3.0088%" y="575.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::BuildTypeIdHasher as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.02%)</title><rect x="2.7726%" y="565" width="0.0207%" height="15" fill="rgb(208,69,12)"/><text x="3.0226%" y="575.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (5 samples, 0.02%)</title><rect x="2.8002%" y="565" width="0.0172%" height="15" fill="rgb(235,93,37)"/><text x="3.0502%" y="575.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::global_context (3 samples, 0.01%)</title><rect x="2.8312%" y="565" width="0.0103%" height="15" fill="rgb(213,116,39)"/><text x="3.0812%" y="575.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="3.1623%" y="549" width="0.0345%" height="15" fill="rgb(222,207,29)"/><text x="3.4123%" y="559.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="3.1968%" y="549" width="0.0103%" height="15" fill="rgb(206,96,30)"/><text x="3.4468%" y="559.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (3 samples, 0.01%)</title><rect x="3.2106%" y="549" width="0.0103%" height="15" fill="rgb(218,138,4)"/><text x="3.4606%" y="559.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::handle::HandleHost as core::convert::From&lt;&amp;rusty_v8::isolate::IsolateHandle&gt;&gt;::from (4 samples, 0.01%)</title><rect x="3.2209%" y="549" width="0.0138%" height="15" fill="rgb(250,191,14)"/><text x="3.4709%" y="559.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (4 samples, 0.01%)</title><rect x="3.2485%" y="549" width="0.0138%" height="15" fill="rgb(239,60,40)"/><text x="3.4985%" y="559.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="3.2726%" y="549" width="0.0103%" height="15" fill="rgb(206,27,48)"/><text x="3.5226%" y="559.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="3.3106%" y="533" width="0.0103%" height="15" fill="rgb(225,35,8)"/><text x="3.5606%" y="543.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::check_promise_exceptions (12 samples, 0.04%)</title><rect x="3.2830%" y="549" width="0.0414%" height="15" fill="rgb(250,213,24)"/><text x="3.5330%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::GlobalHandles::Create (14 samples, 0.05%)</title><rect x="3.3692%" y="501" width="0.0483%" height="15" fill="rgb(247,123,22)"/><text x="3.6192%" y="511.50"></text></g><g><title>dyper_ops`v8::V8::GlobalizeReference (16 samples, 0.06%)</title><rect x="3.3657%" y="517" width="0.0552%" height="15" fill="rgb(231,138,38)"/><text x="3.6157%" y="527.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::global_context (30 samples, 0.10%)</title><rect x="3.3244%" y="549" width="0.1035%" height="15" fill="rgb(231,145,46)"/><text x="3.5744%" y="559.50"></text></g><g><title>dyper_ops`v8__Global__New (19 samples, 0.07%)</title><rect x="3.3623%" y="533" width="0.0655%" height="15" fill="rgb(251,118,11)"/><text x="3.6123%" y="543.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (3 samples, 0.01%)</title><rect x="3.4278%" y="549" width="0.0103%" height="15" fill="rgb(217,147,25)"/><text x="3.6778%" y="559.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="3.5140%" y="533" width="0.0172%" height="15" fill="rgb(247,81,37)"/><text x="3.7640%" y="543.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (15 samples, 0.05%)</title><rect x="3.5313%" y="533" width="0.0517%" height="15" fill="rgb(209,12,38)"/><text x="3.7813%" y="543.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="3.5968%" y="517" width="0.0138%" height="15" fill="rgb(227,1,9)"/><text x="3.8468%" y="527.50"></text></g><g><title>dyper_ops`v8::BackingStore::ByteLength (7 samples, 0.02%)</title><rect x="3.6140%" y="517" width="0.0241%" height="15" fill="rgb(248,47,43)"/><text x="3.8640%" y="527.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (17 samples, 0.06%)</title><rect x="3.5830%" y="533" width="0.0586%" height="15" fill="rgb(221,10,30)"/><text x="3.8330%" y="543.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="3.6416%" y="517" width="0.0138%" height="15" fill="rgb(210,229,1)"/><text x="3.8916%" y="527.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice_mut (9 samples, 0.03%)</title><rect x="3.6416%" y="533" width="0.0310%" height="15" fill="rgb(222,148,37)"/><text x="3.8916%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::BackingStore::byte_length (7 samples, 0.02%)</title><rect x="3.6727%" y="533" width="0.0241%" height="15" fill="rgb(234,67,33)"/><text x="3.9227%" y="543.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__get (9 samples, 0.03%)</title><rect x="3.6968%" y="533" width="0.0310%" height="15" fill="rgb(247,98,35)"/><text x="3.9468%" y="543.50"></text></g><g><title>dyper_ops`v8::BackingStore::ByteLength (13 samples, 0.04%)</title><rect x="3.7278%" y="533" width="0.0448%" height="15" fill="rgb(247,138,52)"/><text x="3.9778%" y="543.50"></text></g><g><title>dyper_ops`v8__BackingStore__ByteLength (7 samples, 0.02%)</title><rect x="3.7796%" y="533" width="0.0241%" height="15" fill="rgb(213,79,30)"/><text x="4.0296%" y="543.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::push (110 samples, 0.38%)</title><rect x="3.4451%" y="549" width="0.3793%" height="15" fill="rgb(246,177,23)"/><text x="3.6951%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="3.8037%" y="533" width="0.0207%" height="15" fill="rgb(230,62,27)"/><text x="4.0537%" y="543.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::register (5 samples, 0.02%)</title><rect x="3.8244%" y="549" width="0.0172%" height="15" fill="rgb(216,154,8)"/><text x="4.0744%" y="559.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (3 samples, 0.01%)</title><rect x="3.8416%" y="549" width="0.0103%" height="15" fill="rgb(244,35,45)"/><text x="4.0916%" y="559.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="4.2175%" y="517" width="0.0414%" height="15" fill="rgb(251,115,12)"/><text x="4.4675%" y="527.50"></text></g><g><title>dyper_ops`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (3 samples, 0.01%)</title><rect x="4.3865%" y="501" width="0.0103%" height="15" fill="rgb(240,54,50)"/><text x="4.6365%" y="511.50"></text></g><g><title>dyper_ops`__rdl_realloc (3 samples, 0.01%)</title><rect x="4.5693%" y="469" width="0.0103%" height="15" fill="rgb(233,84,52)"/><text x="4.8193%" y="479.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="4.5796%" y="469" width="0.0138%" height="15" fill="rgb(207,117,47)"/><text x="4.8296%" y="479.50"></text></g><g><title>dyper_ops`__rdl_dealloc (3 samples, 0.01%)</title><rect x="4.8969%" y="437" width="0.0103%" height="15" fill="rgb(249,43,39)"/><text x="5.1469%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="4.9762%" y="389" width="0.0103%" height="15" fill="rgb(209,38,44)"/><text x="5.2262%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.08%)</title><rect x="4.9866%" y="389" width="0.0793%" height="15" fill="rgb(236,212,23)"/><text x="5.2366%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.06%)</title><rect x="5.0038%" y="373" width="0.0621%" height="15" fill="rgb(242,79,21)"/><text x="5.2538%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.05%)</title><rect x="5.0141%" y="357" width="0.0517%" height="15" fill="rgb(211,96,35)"/><text x="5.2641%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.07%)</title><rect x="5.2142%" y="357" width="0.0690%" height="15" fill="rgb(253,215,40)"/><text x="5.4642%" y="367.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.32%)</title><rect x="4.9693%" y="405" width="0.3242%" height="15" fill="rgb(211,81,21)"/><text x="5.2193%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (66 samples, 0.23%)</title><rect x="5.0659%" y="389" width="0.2276%" height="15" fill="rgb(208,190,38)"/><text x="5.3159%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (51 samples, 0.18%)</title><rect x="5.1176%" y="373" width="0.1759%" height="15" fill="rgb(235,213,38)"/><text x="5.3676%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.01%)</title><rect x="5.2831%" y="357" width="0.0103%" height="15" fill="rgb(237,122,38)"/><text x="5.5331%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="5.3107%" y="405" width="0.0310%" height="15" fill="rgb(244,218,35)"/><text x="5.5607%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.02%)</title><rect x="5.3245%" y="389" width="0.0172%" height="15" fill="rgb(240,68,47)"/><text x="5.5745%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="5.3245%" y="373" width="0.0172%" height="15" fill="rgb(210,16,53)"/><text x="5.5745%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.09%)</title><rect x="5.3417%" y="405" width="0.0897%" height="15" fill="rgb(235,124,12)"/><text x="5.5917%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.06%)</title><rect x="5.3693%" y="389" width="0.0621%" height="15" fill="rgb(224,169,11)"/><text x="5.6193%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.03%)</title><rect x="5.4004%" y="373" width="0.0310%" height="15" fill="rgb(250,166,2)"/><text x="5.6504%" y="383.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (140 samples, 0.48%)</title><rect x="4.9521%" y="421" width="0.4828%" height="15" fill="rgb(242,216,29)"/><text x="5.2021%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="5.4659%" y="373" width="0.0103%" height="15" fill="rgb(230,116,27)"/><text x="5.7159%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.03%)</title><rect x="5.4969%" y="357" width="0.0345%" height="15" fill="rgb(228,99,48)"/><text x="5.7469%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.03%)</title><rect x="5.5038%" y="341" width="0.0276%" height="15" fill="rgb(253,11,6)"/><text x="5.7538%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.06%)</title><rect x="5.4762%" y="373" width="0.0621%" height="15" fill="rgb(247,143,39)"/><text x="5.7262%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.06%)</title><rect x="5.6107%" y="357" width="0.0586%" height="15" fill="rgb(236,97,10)"/><text x="5.8607%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.04%)</title><rect x="5.6314%" y="341" width="0.0379%" height="15" fill="rgb(233,208,19)"/><text x="5.8814%" y="351.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.22%)</title><rect x="5.4487%" y="389" width="0.2242%" height="15" fill="rgb(216,164,2)"/><text x="5.6987%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.13%)</title><rect x="5.5383%" y="373" width="0.1345%" height="15" fill="rgb(220,129,5)"/><text x="5.7883%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="5.6763%" y="389" width="0.0103%" height="15" fill="rgb(242,17,10)"/><text x="5.9263%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.08%)</title><rect x="5.6866%" y="389" width="0.0759%" height="15" fill="rgb(242,107,0)"/><text x="5.9366%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.05%)</title><rect x="5.7107%" y="373" width="0.0517%" height="15" fill="rgb(251,28,31)"/><text x="5.9607%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="5.7521%" y="357" width="0.0103%" height="15" fill="rgb(233,223,10)"/><text x="6.0021%" y="367.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.33%)</title><rect x="5.4418%" y="405" width="0.3311%" height="15" fill="rgb(215,21,27)"/><text x="5.6918%" y="415.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (104 samples, 0.36%)</title><rect x="5.4349%" y="421" width="0.3586%" height="15" fill="rgb(232,23,21)"/><text x="5.6849%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (11 samples, 0.04%)</title><rect x="5.8004%" y="421" width="0.0379%" height="15" fill="rgb(244,5,23)"/><text x="6.0504%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.17%)</title><rect x="5.8383%" y="421" width="0.1724%" height="15" fill="rgb(226,81,46)"/><text x="6.0883%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (37 samples, 0.13%)</title><rect x="5.8832%" y="405" width="0.1276%" height="15" fill="rgb(247,70,30)"/><text x="6.1332%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (36 samples, 0.12%)</title><rect x="5.8866%" y="389" width="0.1241%" height="15" fill="rgb(212,68,19)"/><text x="6.1366%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.02%)</title><rect x="6.2487%" y="405" width="0.0172%" height="15" fill="rgb(240,187,13)"/><text x="6.4987%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (59 samples, 0.20%)</title><rect x="6.5177%" y="389" width="0.2035%" height="15" fill="rgb(223,113,26)"/><text x="6.7677%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (142 samples, 0.49%)</title><rect x="6.2659%" y="405" width="0.4897%" height="15" fill="rgb(206,192,2)"/><text x="6.5159%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.03%)</title><rect x="6.7212%" y="389" width="0.0345%" height="15" fill="rgb(241,108,4)"/><text x="6.9712%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (217 samples, 0.75%)</title><rect x="6.0108%" y="421" width="0.7483%" height="15" fill="rgb(247,173,49)"/><text x="6.2608%" y="431.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (542 samples, 1.87%)</title><rect x="4.9107%" y="437" width="1.8691%" height="15" fill="rgb(224,114,35)"/><text x="5.1607%" y="447.50">d..</text></g><g><title>libsystem_kernel.dylib`__ulock_wake (3 samples, 0.01%)</title><rect x="6.7798%" y="437" width="0.0103%" height="15" fill="rgb(245,159,27)"/><text x="7.0298%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (14 samples, 0.05%)</title><rect x="6.7901%" y="437" width="0.0483%" height="15" fill="rgb(245,172,44)"/><text x="7.0401%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (59 samples, 0.20%)</title><rect x="6.9867%" y="421" width="0.2035%" height="15" fill="rgb(236,23,11)"/><text x="7.2367%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (50 samples, 0.17%)</title><rect x="7.0177%" y="405" width="0.1724%" height="15" fill="rgb(205,117,38)"/><text x="7.2677%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (107 samples, 0.37%)</title><rect x="6.8384%" y="437" width="0.3690%" height="15" fill="rgb(237,72,25)"/><text x="7.0884%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="7.1902%" y="421" width="0.0172%" height="15" fill="rgb(244,70,9)"/><text x="7.4402%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (13 samples, 0.04%)</title><rect x="7.6178%" y="421" width="0.0448%" height="15" fill="rgb(217,125,39)"/><text x="7.8678%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="7.6626%" y="421" width="0.0103%" height="15" fill="rgb(235,36,10)"/><text x="7.9126%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (79 samples, 0.27%)</title><rect x="8.0902%" y="405" width="0.2724%" height="15" fill="rgb(251,123,47)"/><text x="8.3402%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (214 samples, 0.74%)</title><rect x="7.6729%" y="421" width="0.7380%" height="15" fill="rgb(221,13,13)"/><text x="7.9229%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.05%)</title><rect x="8.3626%" y="405" width="0.0483%" height="15" fill="rgb(238,131,9)"/><text x="8.6126%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (352 samples, 1.21%)</title><rect x="7.2074%" y="437" width="1.2139%" height="15" fill="rgb(211,50,8)"/><text x="7.4574%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (3 samples, 0.01%)</title><rect x="8.4109%" y="421" width="0.0103%" height="15" fill="rgb(245,182,24)"/><text x="8.6609%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (6 samples, 0.02%)</title><rect x="8.4213%" y="437" width="0.0207%" height="15" fill="rgb(242,14,37)"/><text x="8.6713%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.03%)</title><rect x="8.4420%" y="437" width="0.0276%" height="15" fill="rgb(246,228,12)"/><text x="8.6920%" y="447.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (1,056 samples, 3.64%)</title><rect x="4.8314%" y="453" width="3.6416%" height="15" fill="rgb(213,55,15)"/><text x="5.0814%" y="463.50">dype..</text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="8.6144%" y="437" width="0.0345%" height="15" fill="rgb(209,9,3)"/><text x="8.8644%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="8.8282%" y="325" width="0.0207%" height="15" fill="rgb(230,59,30)"/><text x="9.0782%" y="335.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (35 samples, 0.12%)</title><rect x="8.7523%" y="405" width="0.1207%" height="15" fill="rgb(209,121,21)"/><text x="9.0023%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.12%)</title><rect x="8.7558%" y="389" width="0.1172%" height="15" fill="rgb(220,109,13)"/><text x="9.0058%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.12%)</title><rect x="8.7558%" y="373" width="0.1172%" height="15" fill="rgb(232,18,1)"/><text x="9.0058%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.11%)</title><rect x="8.7627%" y="357" width="0.1104%" height="15" fill="rgb(215,41,42)"/><text x="9.0127%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.10%)</title><rect x="8.7730%" y="341" width="0.1000%" height="15" fill="rgb(224,123,36)"/><text x="9.0230%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="8.8489%" y="325" width="0.0241%" height="15" fill="rgb(240,125,3)"/><text x="9.0989%" y="335.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (40 samples, 0.14%)</title><rect x="8.7385%" y="421" width="0.1379%" height="15" fill="rgb(205,98,50)"/><text x="8.9885%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="9.0075%" y="309" width="0.0103%" height="15" fill="rgb(205,185,37)"/><text x="9.2575%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (37 samples, 0.13%)</title><rect x="8.9282%" y="357" width="0.1276%" height="15" fill="rgb(238,207,15)"/><text x="9.1782%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.11%)</title><rect x="8.9420%" y="341" width="0.1138%" height="15" fill="rgb(213,199,42)"/><text x="9.1920%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.11%)</title><rect x="8.9420%" y="325" width="0.1138%" height="15" fill="rgb(235,201,11)"/><text x="9.1920%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.04%)</title><rect x="9.0179%" y="309" width="0.0379%" height="15" fill="rgb(207,46,11)"/><text x="9.2679%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (41 samples, 0.14%)</title><rect x="8.9213%" y="373" width="0.1414%" height="15" fill="rgb(241,35,35)"/><text x="9.1713%" y="383.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (44 samples, 0.15%)</title><rect x="8.9144%" y="389" width="0.1517%" height="15" fill="rgb(243,32,47)"/><text x="9.1644%" y="399.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (57 samples, 0.20%)</title><rect x="8.8765%" y="421" width="0.1966%" height="15" fill="rgb(247,202,23)"/><text x="9.1265%" y="431.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (50 samples, 0.17%)</title><rect x="8.9006%" y="405" width="0.1724%" height="15" fill="rgb(219,102,11)"/><text x="9.1506%" y="415.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (129 samples, 0.44%)</title><rect x="8.6489%" y="437" width="0.4449%" height="15" fill="rgb(243,110,44)"/><text x="8.8989%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="9.0730%" y="421" width="0.0207%" height="15" fill="rgb(222,74,54)"/><text x="9.3230%" y="431.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (183 samples, 0.63%)</title><rect x="8.4730%" y="453" width="0.6311%" height="15" fill="rgb(216,99,12)"/><text x="8.7230%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="9.0937%" y="437" width="0.0103%" height="15" fill="rgb(226,22,26)"/><text x="9.3437%" y="447.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (4 samples, 0.01%)</title><rect x="9.1041%" y="453" width="0.0138%" height="15" fill="rgb(217,163,10)"/><text x="9.3541%" y="463.50"></text></g><g><title>dyper_ops`serde_json::ser::format_escaped_str (28 samples, 0.10%)</title><rect x="9.1799%" y="437" width="0.0966%" height="15" fill="rgb(213,25,53)"/><text x="9.4299%" y="447.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="9.4179%" y="421" width="0.0207%" height="15" fill="rgb(252,105,26)"/><text x="9.6679%" y="431.50"></text></g><g><title>dyper_ops`serde::ser::Serializer::collect_seq (3 samples, 0.01%)</title><rect x="9.4386%" y="421" width="0.0103%" height="15" fill="rgb(220,39,43)"/><text x="9.6886%" y="431.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="9.5041%" y="405" width="0.0138%" height="15" fill="rgb(229,68,48)"/><text x="9.7541%" y="415.50"></text></g><g><title>dyper_ops`serde_json::ser::format_escaped_str (28 samples, 0.10%)</title><rect x="9.4489%" y="421" width="0.0966%" height="15" fill="rgb(252,8,32)"/><text x="9.6989%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="9.5179%" y="405" width="0.0276%" height="15" fill="rgb(223,20,43)"/><text x="9.7679%" y="415.50"></text></g><g><title>dyper_ops`serde_json::ser::format_escaped_str (28 samples, 0.10%)</title><rect x="9.6558%" y="341" width="0.0966%" height="15" fill="rgb(229,81,49)"/><text x="9.9058%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="9.7421%" y="325" width="0.0103%" height="15" fill="rgb(236,28,36)"/><text x="9.9921%" y="335.50"></text></g><g><title>dyper_ops`serde::ser::Serializer::collect_seq (50 samples, 0.17%)</title><rect x="9.5869%" y="405" width="0.1724%" height="15" fill="rgb(249,185,26)"/><text x="9.8369%" y="415.50"></text></g><g><title>dyper_ops`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 0.16%)</title><rect x="9.6041%" y="389" width="0.1552%" height="15" fill="rgb(249,174,33)"/><text x="9.8541%" y="399.50"></text></g><g><title>dyper_ops`serde::ser::Serializer::collect_seq (41 samples, 0.14%)</title><rect x="9.6179%" y="373" width="0.1414%" height="15" fill="rgb(233,201,37)"/><text x="9.8679%" y="383.50"></text></g><g><title>dyper_ops`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 0.12%)</title><rect x="9.6386%" y="357" width="0.1207%" height="15" fill="rgb(221,78,26)"/><text x="9.8886%" y="367.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="9.8076%" y="389" width="0.0103%" height="15" fill="rgb(250,127,30)"/><text x="10.0576%" y="399.50"></text></g><g><title>dyper_ops`serde_json::ser::format_escaped_str (20 samples, 0.07%)</title><rect x="9.7593%" y="405" width="0.0690%" height="15" fill="rgb(230,49,44)"/><text x="10.0093%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="9.8179%" y="389" width="0.0103%" height="15" fill="rgb(229,67,23)"/><text x="10.0679%" y="399.50"></text></g><g><title>dyper_ops`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (84 samples, 0.29%)</title><rect x="9.5455%" y="421" width="0.2897%" height="15" fill="rgb(249,83,47)"/><text x="9.7955%" y="431.50"></text></g><g><title>dyper_ops`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (164 samples, 0.57%)</title><rect x="9.2765%" y="437" width="0.5656%" height="15" fill="rgb(215,43,3)"/><text x="9.5265%" y="447.50"></text></g><g><title>dyper_ops`serde::ser::SerializeMap::serialize_entry (212 samples, 0.73%)</title><rect x="9.1179%" y="453" width="0.7311%" height="15" fill="rgb(238,154,13)"/><text x="9.3679%" y="463.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (9 samples, 0.03%)</title><rect x="9.8938%" y="437" width="0.0310%" height="15" fill="rgb(219,56,2)"/><text x="10.1438%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="9.8972%" y="421" width="0.0276%" height="15" fill="rgb(233,0,4)"/><text x="10.1472%" y="431.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (4 samples, 0.01%)</title><rect x="9.9248%" y="437" width="0.0138%" height="15" fill="rgb(235,30,7)"/><text x="10.1748%" y="447.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.06%)</title><rect x="10.2766%" y="405" width="0.0586%" height="15" fill="rgb(250,79,13)"/><text x="10.5266%" y="415.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="10.3386%" y="405" width="0.0241%" height="15" fill="rgb(211,146,34)"/><text x="10.5886%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.03%)</title><rect x="10.5800%" y="293" width="0.0310%" height="15" fill="rgb(228,22,38)"/><text x="10.8300%" y="303.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (57 samples, 0.20%)</title><rect x="10.4904%" y="373" width="0.1966%" height="15" fill="rgb(235,168,5)"/><text x="10.7404%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc (55 samples, 0.19%)</title><rect x="10.4973%" y="357" width="0.1897%" height="15" fill="rgb(221,155,16)"/><text x="10.7473%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (52 samples, 0.18%)</title><rect x="10.5076%" y="341" width="0.1793%" height="15" fill="rgb(215,215,53)"/><text x="10.7576%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.17%)</title><rect x="10.5145%" y="325" width="0.1724%" height="15" fill="rgb(223,4,10)"/><text x="10.7645%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.17%)</title><rect x="10.5180%" y="309" width="0.1690%" height="15" fill="rgb(234,103,6)"/><text x="10.7680%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.08%)</title><rect x="10.6111%" y="293" width="0.0759%" height="15" fill="rgb(227,97,0)"/><text x="10.8611%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="10.6697%" y="277" width="0.0172%" height="15" fill="rgb(234,150,53)"/><text x="10.9197%" y="287.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (60 samples, 0.21%)</title><rect x="10.4835%" y="389" width="0.2069%" height="15" fill="rgb(228,201,54)"/><text x="10.7335%" y="399.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="10.6904%" y="389" width="0.0103%" height="15" fill="rgb(222,22,37)"/><text x="10.9404%" y="399.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (4 samples, 0.01%)</title><rect x="10.7801%" y="373" width="0.0138%" height="15" fill="rgb(237,53,32)"/><text x="11.0301%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.02%)</title><rect x="10.9352%" y="277" width="0.0241%" height="15" fill="rgb(233,25,53)"/><text x="11.1852%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.09%)</title><rect x="10.8904%" y="293" width="0.0897%" height="15" fill="rgb(210,40,34)"/><text x="11.1404%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.02%)</title><rect x="10.9594%" y="277" width="0.0207%" height="15" fill="rgb(241,220,44)"/><text x="11.2094%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (32 samples, 0.11%)</title><rect x="10.8732%" y="325" width="0.1104%" height="15" fill="rgb(235,28,35)"/><text x="11.1232%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.10%)</title><rect x="10.8801%" y="309" width="0.1035%" height="15" fill="rgb(210,56,17)"/><text x="11.1301%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (36 samples, 0.12%)</title><rect x="10.8663%" y="341" width="0.1241%" height="15" fill="rgb(224,130,29)"/><text x="11.1163%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="10.9904%" y="341" width="0.0172%" height="15" fill="rgb(235,212,8)"/><text x="11.2404%" y="351.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (51 samples, 0.18%)</title><rect x="10.8352%" y="357" width="0.1759%" height="15" fill="rgb(223,33,50)"/><text x="11.0852%" y="367.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (92 samples, 0.32%)</title><rect x="10.7007%" y="389" width="0.3173%" height="15" fill="rgb(219,149,13)"/><text x="10.9507%" y="399.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (65 samples, 0.22%)</title><rect x="10.7938%" y="373" width="0.2242%" height="15" fill="rgb(250,156,29)"/><text x="11.0438%" y="383.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (199 samples, 0.69%)</title><rect x="10.3628%" y="405" width="0.6863%" height="15" fill="rgb(216,193,19)"/><text x="10.6128%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.03%)</title><rect x="11.0180%" y="389" width="0.0310%" height="15" fill="rgb(216,135,14)"/><text x="11.2680%" y="399.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (293 samples, 1.01%)</title><rect x="10.0421%" y="421" width="1.0104%" height="15" fill="rgb(241,47,5)"/><text x="10.2921%" y="431.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (5 samples, 0.02%)</title><rect x="11.1387%" y="389" width="0.0172%" height="15" fill="rgb(233,42,35)"/><text x="11.3887%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="11.1766%" y="341" width="0.0103%" height="15" fill="rgb(231,13,6)"/><text x="11.4266%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.05%)</title><rect x="11.2284%" y="309" width="0.0483%" height="15" fill="rgb(207,181,40)"/><text x="11.4784%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="11.2559%" y="293" width="0.0207%" height="15" fill="rgb(254,173,49)"/><text x="11.5059%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (30 samples, 0.10%)</title><rect x="11.1766%" y="357" width="0.1035%" height="15" fill="rgb(221,1,38)"/><text x="11.4266%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.09%)</title><rect x="11.1870%" y="341" width="0.0931%" height="15" fill="rgb(206,124,46)"/><text x="11.4370%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.09%)</title><rect x="11.1870%" y="325" width="0.0931%" height="15" fill="rgb(249,21,11)"/><text x="11.4370%" y="335.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (38 samples, 0.13%)</title><rect x="11.1559%" y="389" width="0.1310%" height="15" fill="rgb(222,201,40)"/><text x="11.4059%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.12%)</title><rect x="11.1697%" y="373" width="0.1172%" height="15" fill="rgb(235,61,29)"/><text x="11.4197%" y="383.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (4 samples, 0.01%)</title><rect x="11.3456%" y="357" width="0.0138%" height="15" fill="rgb(219,207,3)"/><text x="11.5956%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="11.4491%" y="277" width="0.0138%" height="15" fill="rgb(222,56,46)"/><text x="11.6991%" y="287.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (49 samples, 0.17%)</title><rect x="11.3594%" y="357" width="0.1690%" height="15" fill="rgb(239,76,54)"/><text x="11.6094%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (48 samples, 0.17%)</title><rect x="11.3629%" y="341" width="0.1655%" height="15" fill="rgb(231,124,27)"/><text x="11.6129%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (48 samples, 0.17%)</title><rect x="11.3629%" y="325" width="0.1655%" height="15" fill="rgb(249,195,6)"/><text x="11.6129%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.15%)</title><rect x="11.3766%" y="309" width="0.1517%" height="15" fill="rgb(237,174,47)"/><text x="11.6266%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (42 samples, 0.14%)</title><rect x="11.3835%" y="293" width="0.1448%" height="15" fill="rgb(206,201,31)"/><text x="11.6335%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.07%)</title><rect x="11.4629%" y="277" width="0.0655%" height="15" fill="rgb(231,57,52)"/><text x="11.7129%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.05%)</title><rect x="11.4767%" y="261" width="0.0517%" height="15" fill="rgb(248,177,22)"/><text x="11.7267%" y="271.50"></text></g><g><title>dyper_ops`__rust_alloc (3 samples, 0.01%)</title><rect x="11.5284%" y="357" width="0.0103%" height="15" fill="rgb(215,211,37)"/><text x="11.7784%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="11.5698%" y="309" width="0.0138%" height="15" fill="rgb(241,128,51)"/><text x="11.8198%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (57 samples, 0.20%)</title><rect x="11.5663%" y="325" width="0.1966%" height="15" fill="rgb(227,165,31)"/><text x="11.8163%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.18%)</title><rect x="11.5836%" y="309" width="0.1793%" height="15" fill="rgb(228,167,24)"/><text x="11.8336%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (50 samples, 0.17%)</title><rect x="11.5905%" y="293" width="0.1724%" height="15" fill="rgb(228,143,12)"/><text x="11.8405%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.04%)</title><rect x="11.7215%" y="277" width="0.0414%" height="15" fill="rgb(249,149,8)"/><text x="11.9715%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (59 samples, 0.20%)</title><rect x="11.5629%" y="341" width="0.2035%" height="15" fill="rgb(243,35,44)"/><text x="11.8129%" y="351.50"></text></g><g><title>dyper_ops`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (69 samples, 0.24%)</title><rect x="11.5387%" y="357" width="0.2379%" height="15" fill="rgb(246,89,9)"/><text x="11.7887%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="11.7663%" y="341" width="0.0103%" height="15" fill="rgb(233,213,13)"/><text x="12.0163%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.01%)</title><rect x="11.7767%" y="357" width="0.0138%" height="15" fill="rgb(233,141,41)"/><text x="12.0267%" y="367.50"></text></g><g><title>dyper_ops`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (149 samples, 0.51%)</title><rect x="11.2973%" y="389" width="0.5138%" height="15" fill="rgb(239,167,4)"/><text x="11.5473%" y="399.50"></text></g><g><title>dyper_ops`serde::ser::Serializer::collect_seq (146 samples, 0.50%)</title><rect x="11.3077%" y="373" width="0.5035%" height="15" fill="rgb(209,217,16)"/><text x="11.5577%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="11.7905%" y="357" width="0.0207%" height="15" fill="rgb(219,88,35)"/><text x="12.0405%" y="367.50"></text></g><g><title>dyper_ops`serde::ser::Serializer::collect_seq (207 samples, 0.71%)</title><rect x="11.1042%" y="405" width="0.7138%" height="15" fill="rgb(220,193,23)"/><text x="11.3542%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="11.9836%" y="341" width="0.0138%" height="15" fill="rgb(230,90,52)"/><text x="12.2336%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.01%)</title><rect x="12.0008%" y="341" width="0.0138%" height="15" fill="rgb(252,106,19)"/><text x="12.2508%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (56 samples, 0.19%)</title><rect x="11.8284%" y="389" width="0.1931%" height="15" fill="rgb(206,74,20)"/><text x="12.0784%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (55 samples, 0.19%)</title><rect x="11.8319%" y="373" width="0.1897%" height="15" fill="rgb(230,138,44)"/><text x="12.0819%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (52 samples, 0.18%)</title><rect x="11.8422%" y="357" width="0.1793%" height="15" fill="rgb(235,182,43)"/><text x="12.0922%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (60 samples, 0.21%)</title><rect x="11.8181%" y="405" width="0.2069%" height="15" fill="rgb(242,16,51)"/><text x="12.0681%" y="415.50"></text></g><g><title>dyper_ops`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (288 samples, 0.99%)</title><rect x="11.0594%" y="421" width="0.9932%" height="15" fill="rgb(248,9,4)"/><text x="11.3094%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="12.0250%" y="405" width="0.0276%" height="15" fill="rgb(210,31,22)"/><text x="12.2750%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (92 samples, 0.32%)</title><rect x="12.0595%" y="405" width="0.3173%" height="15" fill="rgb(239,54,39)"/><text x="12.3095%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (87 samples, 0.30%)</title><rect x="12.0767%" y="389" width="0.3000%" height="15" fill="rgb(230,99,41)"/><text x="12.3267%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (83 samples, 0.29%)</title><rect x="12.0905%" y="373" width="0.2862%" height="15" fill="rgb(253,106,12)"/><text x="12.3405%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.07%)</title><rect x="12.3112%" y="357" width="0.0655%" height="15" fill="rgb(213,46,41)"/><text x="12.5612%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (95 samples, 0.33%)</title><rect x="12.0526%" y="421" width="0.3276%" height="15" fill="rgb(215,133,35)"/><text x="12.3026%" y="431.50"></text></g><g><title>dyper_ops`serde::ser::SerializeMap::serialize_entry (711 samples, 2.45%)</title><rect x="9.9490%" y="437" width="2.4519%" height="15" fill="rgb(213,28,5)"/><text x="10.1990%" y="447.50">dy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="12.3836%" y="421" width="0.0172%" height="15" fill="rgb(215,77,49)"/><text x="12.6336%" y="431.50"></text></g><g><title>dyper_ops`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (744 samples, 2.57%)</title><rect x="9.8490%" y="453" width="2.5657%" height="15" fill="rgb(248,100,22)"/><text x="10.0990%" y="463.50">dy..</text></g><g><title>dyper_ops`serde_json::ser::format_escaped_str (3 samples, 0.01%)</title><rect x="12.4146%" y="453" width="0.0103%" height="15" fill="rgb(208,67,9)"/><text x="12.6646%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.07%)</title><rect x="12.4319%" y="453" width="0.0655%" height="15" fill="rgb(219,133,21)"/><text x="12.6819%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.03%)</title><rect x="12.4664%" y="437" width="0.0310%" height="15" fill="rgb(246,46,29)"/><text x="12.7164%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.03%)</title><rect x="12.4698%" y="421" width="0.0276%" height="15" fill="rgb(246,185,52)"/><text x="12.7198%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="12.5698%" y="437" width="0.0138%" height="15" fill="rgb(252,136,11)"/><text x="12.8198%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.08%)</title><rect x="12.6836%" y="421" width="0.0828%" height="15" fill="rgb(219,138,53)"/><text x="12.9336%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (83 samples, 0.29%)</title><rect x="12.4974%" y="453" width="0.2862%" height="15" fill="rgb(211,51,23)"/><text x="12.7474%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (58 samples, 0.20%)</title><rect x="12.5836%" y="437" width="0.2000%" height="15" fill="rgb(247,221,28)"/><text x="12.8336%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.02%)</title><rect x="12.7664%" y="421" width="0.0172%" height="15" fill="rgb(251,222,45)"/><text x="13.0164%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (78 samples, 0.27%)</title><rect x="12.8043%" y="437" width="0.2690%" height="15" fill="rgb(217,162,53)"/><text x="13.0543%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (73 samples, 0.25%)</title><rect x="12.8216%" y="421" width="0.2517%" height="15" fill="rgb(229,93,14)"/><text x="13.0716%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 0.23%)</title><rect x="12.8423%" y="405" width="0.2311%" height="15" fill="rgb(209,67,49)"/><text x="13.0923%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.10%)</title><rect x="12.9733%" y="389" width="0.1000%" height="15" fill="rgb(213,87,29)"/><text x="13.2233%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.03%)</title><rect x="13.0388%" y="373" width="0.0345%" height="15" fill="rgb(205,151,52)"/><text x="13.2888%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc (85 samples, 0.29%)</title><rect x="12.7836%" y="453" width="0.2931%" height="15" fill="rgb(253,215,39)"/><text x="13.0336%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.06%)</title><rect x="13.0871%" y="437" width="0.0621%" height="15" fill="rgb(221,220,41)"/><text x="13.3371%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.05%)</title><rect x="13.0975%" y="421" width="0.0517%" height="15" fill="rgb(218,133,21)"/><text x="13.3475%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="13.1285%" y="405" width="0.0207%" height="15" fill="rgb(221,193,43)"/><text x="13.3785%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.01%)</title><rect x="13.1354%" y="389" width="0.0138%" height="15" fill="rgb(240,128,52)"/><text x="13.3854%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="13.1492%" y="437" width="0.0207%" height="15" fill="rgb(253,114,12)"/><text x="13.3992%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.02%)</title><rect x="13.1492%" y="421" width="0.0207%" height="15" fill="rgb(215,223,47)"/><text x="13.3992%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (27 samples, 0.09%)</title><rect x="13.0802%" y="453" width="0.0931%" height="15" fill="rgb(248,225,23)"/><text x="13.3302%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (7 samples, 0.02%)</title><rect x="13.1733%" y="453" width="0.0241%" height="15" fill="rgb(250,108,0)"/><text x="13.4233%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="13.1975%" y="453" width="0.0103%" height="15" fill="rgb(228,208,7)"/><text x="13.4475%" y="463.50"></text></g><g><title>dyper_ops`deno_core::ops::json_serialize_op_result (2,499 samples, 8.62%)</title><rect x="4.5934%" y="469" width="8.6178%" height="15" fill="rgb(244,45,10)"/><text x="4.8434%" y="479.50">dyper_ops`de..</text></g><g><title>dyper_ops`serde::ser::SerializeMap::serialize_entry (3 samples, 0.01%)</title><rect x="13.2147%" y="469" width="0.0103%" height="15" fill="rgb(207,125,25)"/><text x="13.4647%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="13.2354%" y="469" width="0.0103%" height="15" fill="rgb(210,195,18)"/><text x="13.4854%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.02%)</title><rect x="13.2526%" y="469" width="0.0172%" height="15" fill="rgb(249,80,12)"/><text x="13.5026%" y="479.50"></text></g><g><title>dyper_ops`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (2,537 samples, 8.75%)</title><rect x="4.5348%" y="485" width="8.7489%" height="15" fill="rgb(221,65,9)"/><text x="4.7848%" y="495.50">dyper_ops`&lt;T..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (4 samples, 0.01%)</title><rect x="13.2699%" y="469" width="0.0138%" height="15" fill="rgb(235,49,36)"/><text x="13.5199%" y="479.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="13.2837%" y="485" width="0.0138%" height="15" fill="rgb(225,32,20)"/><text x="13.5337%" y="495.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="13.5768%" y="469" width="0.0414%" height="15" fill="rgb(215,141,46)"/><text x="13.8268%" y="479.50"></text></g><g><title>dyper_ops`&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="14.0975%" y="453" width="0.0207%" height="15" fill="rgb(250,160,47)"/><text x="14.3475%" y="463.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="14.1182%" y="453" width="0.0103%" height="15" fill="rgb(216,222,40)"/><text x="14.3682%" y="463.50"></text></g><g><title>dyper_ops`&lt;http::header::name::HeaderName as core::fmt::Display&gt;::fmt (5 samples, 0.02%)</title><rect x="14.1286%" y="453" width="0.0172%" height="15" fill="rgb(234,217,39)"/><text x="14.3786%" y="463.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (5 samples, 0.02%)</title><rect x="14.1527%" y="453" width="0.0172%" height="15" fill="rgb(207,178,40)"/><text x="14.4027%" y="463.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_tuple (3 samples, 0.01%)</title><rect x="14.1699%" y="453" width="0.0103%" height="15" fill="rgb(221,136,13)"/><text x="14.4199%" y="463.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="14.1803%" y="453" width="0.0172%" height="15" fill="rgb(249,199,10)"/><text x="14.4303%" y="463.50"></text></g><g><title>dyper_ops`__rdl_alloc (4 samples, 0.01%)</title><rect x="14.2079%" y="453" width="0.0138%" height="15" fill="rgb(249,222,13)"/><text x="14.4579%" y="463.50"></text></g><g><title>dyper_ops`&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.01%)</title><rect x="14.2424%" y="437" width="0.0103%" height="15" fill="rgb(244,185,38)"/><text x="14.4924%" y="447.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="14.2527%" y="437" width="0.0138%" height="15" fill="rgb(236,202,9)"/><text x="14.5027%" y="447.50"></text></g><g><title>dyper_ops`&lt;http::uri::path::PathAndQuery as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="14.2734%" y="437" width="0.0138%" height="15" fill="rgb(250,229,37)"/><text x="14.5234%" y="447.50"></text></g><g><title>dyper_ops`__rdl_realloc (4 samples, 0.01%)</title><rect x="14.3251%" y="405" width="0.0138%" height="15" fill="rgb(206,174,23)"/><text x="14.5751%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (5 samples, 0.02%)</title><rect x="14.4389%" y="357" width="0.0172%" height="15" fill="rgb(211,33,43)"/><text x="14.6889%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (10 samples, 0.03%)</title><rect x="14.4596%" y="357" width="0.0345%" height="15" fill="rgb(245,58,50)"/><text x="14.7096%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="14.5010%" y="357" width="0.0103%" height="15" fill="rgb(244,68,36)"/><text x="14.7510%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.05%)</title><rect x="14.5424%" y="341" width="0.0517%" height="15" fill="rgb(232,229,15)"/><text x="14.7924%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="14.6838%" y="309" width="0.0172%" height="15" fill="rgb(254,30,23)"/><text x="14.9338%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.12%)</title><rect x="14.5941%" y="341" width="0.1207%" height="15" fill="rgb(235,160,14)"/><text x="14.8441%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.11%)</title><rect x="14.6079%" y="325" width="0.1069%" height="15" fill="rgb(212,155,44)"/><text x="14.8579%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.01%)</title><rect x="14.7010%" y="309" width="0.0138%" height="15" fill="rgb(226,2,50)"/><text x="14.9510%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="14.7148%" y="341" width="0.0241%" height="15" fill="rgb(234,177,6)"/><text x="14.9648%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="14.7148%" y="325" width="0.0241%" height="15" fill="rgb(217,24,9)"/><text x="14.9648%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (15 samples, 0.05%)</title><rect x="14.7389%" y="341" width="0.0517%" height="15" fill="rgb(220,13,46)"/><text x="14.9889%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="14.7803%" y="325" width="0.0103%" height="15" fill="rgb(239,221,27)"/><text x="15.0303%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (83 samples, 0.29%)</title><rect x="14.5113%" y="357" width="0.2862%" height="15" fill="rgb(222,198,25)"/><text x="14.7613%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (4 samples, 0.01%)</title><rect x="14.7976%" y="357" width="0.0138%" height="15" fill="rgb(211,99,13)"/><text x="15.0476%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (3 samples, 0.01%)</title><rect x="14.8114%" y="357" width="0.0103%" height="15" fill="rgb(232,111,31)"/><text x="15.0614%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (124 samples, 0.43%)</title><rect x="14.4182%" y="373" width="0.4276%" height="15" fill="rgb(245,82,37)"/><text x="14.6682%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="14.8217%" y="357" width="0.0241%" height="15" fill="rgb(227,149,46)"/><text x="15.0717%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (147 samples, 0.51%)</title><rect x="14.3838%" y="389" width="0.5069%" height="15" fill="rgb(218,36,50)"/><text x="14.6338%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.04%)</title><rect x="14.8459%" y="373" width="0.0448%" height="15" fill="rgb(226,80,48)"/><text x="15.0959%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.04%)</title><rect x="14.8493%" y="357" width="0.0414%" height="15" fill="rgb(238,224,15)"/><text x="15.0993%" y="367.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (160 samples, 0.55%)</title><rect x="14.3458%" y="405" width="0.5518%" height="15" fill="rgb(241,136,10)"/><text x="14.5958%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.01%)</title><rect x="14.8976%" y="405" width="0.0103%" height="15" fill="rgb(208,32,45)"/><text x="15.1476%" y="415.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (183 samples, 0.63%)</title><rect x="14.3079%" y="421" width="0.6311%" height="15" fill="rgb(207,135,9)"/><text x="14.5579%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.03%)</title><rect x="14.9079%" y="405" width="0.0310%" height="15" fill="rgb(206,86,44)"/><text x="15.1579%" y="415.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="14.9976%" y="373" width="0.0276%" height="15" fill="rgb(245,177,15)"/><text x="15.2476%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="15.0079%" y="357" width="0.0172%" height="15" fill="rgb(206,64,50)"/><text x="15.2579%" y="367.50"></text></g><g><title>dyper_ops`&lt;http::uri::path::PathAndQuery as core::fmt::Display&gt;::fmt (28 samples, 0.10%)</title><rect x="14.9390%" y="421" width="0.0966%" height="15" fill="rgb(234,36,40)"/><text x="15.1890%" y="431.50"></text></g><g><title>dyper_ops`core::fmt::Formatter::write_fmt (22 samples, 0.08%)</title><rect x="14.9597%" y="405" width="0.0759%" height="15" fill="rgb(213,64,8)"/><text x="15.2097%" y="415.50"></text></g><g><title>dyper_ops`core::fmt::write (22 samples, 0.08%)</title><rect x="14.9597%" y="389" width="0.0759%" height="15" fill="rgb(210,75,36)"/><text x="15.2097%" y="399.50"></text></g><g><title>dyper_ops`core::fmt::Formatter::pad (3 samples, 0.01%)</title><rect x="15.0424%" y="421" width="0.0103%" height="15" fill="rgb(229,88,21)"/><text x="15.2924%" y="431.50"></text></g><g><title>dyper_ops`core::fmt::write (225 samples, 0.78%)</title><rect x="14.2906%" y="437" width="0.7759%" height="15" fill="rgb(252,204,47)"/><text x="14.5406%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="15.0528%" y="421" width="0.0138%" height="15" fill="rgb(208,77,27)"/><text x="15.3028%" y="431.50"></text></g><g><title>dyper_ops`alloc::fmt::format (274 samples, 0.94%)</title><rect x="14.2217%" y="453" width="0.9449%" height="15" fill="rgb(221,76,26)"/><text x="14.4717%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc (29 samples, 0.10%)</title><rect x="15.0666%" y="437" width="0.1000%" height="15" fill="rgb(225,139,18)"/><text x="15.3166%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.10%)</title><rect x="15.0700%" y="421" width="0.0966%" height="15" fill="rgb(230,137,11)"/><text x="15.3200%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.09%)</title><rect x="15.0769%" y="405" width="0.0897%" height="15" fill="rgb(212,28,1)"/><text x="15.3269%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.09%)</title><rect x="15.0804%" y="389" width="0.0862%" height="15" fill="rgb(248,164,17)"/><text x="15.3304%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="15.1424%" y="373" width="0.0241%" height="15" fill="rgb(222,171,42)"/><text x="15.3924%" y="383.50"></text></g><g><title>dyper_ops`core::fmt::Formatter::pad (5 samples, 0.02%)</title><rect x="15.1735%" y="453" width="0.0172%" height="15" fill="rgb(243,84,45)"/><text x="15.4235%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.03%)</title><rect x="15.3080%" y="357" width="0.0310%" height="15" fill="rgb(252,49,23)"/><text x="15.5580%" y="367.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (67 samples, 0.23%)</title><rect x="15.2700%" y="405" width="0.2311%" height="15" fill="rgb(215,19,7)"/><text x="15.5200%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (65 samples, 0.22%)</title><rect x="15.2769%" y="389" width="0.2242%" height="15" fill="rgb(238,81,41)"/><text x="15.5269%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (60 samples, 0.21%)</title><rect x="15.2942%" y="373" width="0.2069%" height="15" fill="rgb(210,199,37)"/><text x="15.5442%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.16%)</title><rect x="15.3390%" y="357" width="0.1621%" height="15" fill="rgb(244,192,49)"/><text x="15.5890%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.16%)</title><rect x="15.3459%" y="341" width="0.1552%" height="15" fill="rgb(226,211,11)"/><text x="15.5959%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.02%)</title><rect x="15.4804%" y="325" width="0.0207%" height="15" fill="rgb(236,162,54)"/><text x="15.7304%" y="335.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (77 samples, 0.27%)</title><rect x="15.2493%" y="421" width="0.2655%" height="15" fill="rgb(220,229,9)"/><text x="15.4993%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.01%)</title><rect x="15.5011%" y="405" width="0.0138%" height="15" fill="rgb(250,87,22)"/><text x="15.7511%" y="415.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="15.5149%" y="421" width="0.0138%" height="15" fill="rgb(239,43,17)"/><text x="15.7649%" y="431.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (101 samples, 0.35%)</title><rect x="15.2321%" y="437" width="0.3483%" height="15" fill="rgb(231,177,25)"/><text x="15.4821%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.05%)</title><rect x="15.5287%" y="421" width="0.0517%" height="15" fill="rgb(219,179,1)"/><text x="15.7787%" y="431.50"></text></g><g><title>dyper_ops`&lt;http::header::name::HeaderName as core::fmt::Display&gt;::fmt (12 samples, 0.04%)</title><rect x="15.5804%" y="437" width="0.0414%" height="15" fill="rgb(238,219,53)"/><text x="15.8304%" y="447.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::as_str (9 samples, 0.03%)</title><rect x="15.5907%" y="421" width="0.0310%" height="15" fill="rgb(232,167,36)"/><text x="15.8407%" y="431.50"></text></g><g><title>dyper_ops`&lt;http::method::Method as core::fmt::Debug&gt;::fmt (6 samples, 0.02%)</title><rect x="15.6218%" y="437" width="0.0207%" height="15" fill="rgb(244,19,51)"/><text x="15.8718%" y="447.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="15.6425%" y="437" width="0.0103%" height="15" fill="rgb(224,6,22)"/><text x="15.8925%" y="447.50"></text></g><g><title>dyper_ops`core::fmt::Formatter::pad (9 samples, 0.03%)</title><rect x="15.6528%" y="437" width="0.0310%" height="15" fill="rgb(224,145,5)"/><text x="15.9028%" y="447.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::as_str (5 samples, 0.02%)</title><rect x="15.6907%" y="437" width="0.0172%" height="15" fill="rgb(234,130,49)"/><text x="15.9407%" y="447.50"></text></g><g><title>dyper_ops`core::fmt::write (152 samples, 0.52%)</title><rect x="15.1976%" y="453" width="0.5242%" height="15" fill="rgb(254,6,2)"/><text x="15.4476%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="15.7080%" y="437" width="0.0138%" height="15" fill="rgb(208,96,46)"/><text x="15.9580%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_size (28 samples, 0.10%)</title><rect x="15.8183%" y="389" width="0.0966%" height="15" fill="rgb(239,3,39)"/><text x="16.0683%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (38 samples, 0.13%)</title><rect x="15.8045%" y="405" width="0.1310%" height="15" fill="rgb(233,210,1)"/><text x="16.0545%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="15.9149%" y="389" width="0.0207%" height="15" fill="rgb(244,137,37)"/><text x="16.1649%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="15.9183%" y="373" width="0.0172%" height="15" fill="rgb(240,136,2)"/><text x="16.1683%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.03%)</title><rect x="16.0597%" y="389" width="0.0276%" height="15" fill="rgb(239,18,37)"/><text x="16.3097%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (3 samples, 0.01%)</title><rect x="16.0873%" y="389" width="0.0103%" height="15" fill="rgb(218,185,22)"/><text x="16.3373%" y="399.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::shared_v_drop (98 samples, 0.34%)</title><rect x="15.7804%" y="421" width="0.3380%" height="15" fill="rgb(225,218,4)"/><text x="16.0304%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (53 samples, 0.18%)</title><rect x="15.9356%" y="405" width="0.1828%" height="15" fill="rgb(230,182,32)"/><text x="16.1856%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.02%)</title><rect x="16.0977%" y="389" width="0.0207%" height="15" fill="rgb(242,56,43)"/><text x="16.3477%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.02%)</title><rect x="16.1218%" y="421" width="0.0241%" height="15" fill="rgb(233,99,24)"/><text x="16.3718%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.09%)</title><rect x="16.1942%" y="405" width="0.0897%" height="15" fill="rgb(234,209,42)"/><text x="16.4442%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (26 samples, 0.09%)</title><rect x="16.1942%" y="389" width="0.0897%" height="15" fill="rgb(227,7,12)"/><text x="16.4442%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.14%)</title><rect x="16.1459%" y="421" width="0.1414%" height="15" fill="rgb(245,203,43)"/><text x="16.3959%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (8 samples, 0.03%)</title><rect x="16.4011%" y="405" width="0.0276%" height="15" fill="rgb(238,205,33)"/><text x="16.6511%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="16.4287%" y="405" width="0.0103%" height="15" fill="rgb(231,56,7)"/><text x="16.6787%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.11%)</title><rect x="16.5667%" y="389" width="0.1104%" height="15" fill="rgb(244,186,29)"/><text x="16.8167%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (122 samples, 0.42%)</title><rect x="16.2873%" y="421" width="0.4207%" height="15" fill="rgb(234,111,31)"/><text x="16.5373%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (78 samples, 0.27%)</title><rect x="16.4391%" y="405" width="0.2690%" height="15" fill="rgb(241,149,10)"/><text x="16.6891%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.03%)</title><rect x="16.6770%" y="389" width="0.0310%" height="15" fill="rgb(249,206,44)"/><text x="16.9270%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (11 samples, 0.04%)</title><rect x="16.7080%" y="421" width="0.0379%" height="15" fill="rgb(251,153,30)"/><text x="16.9580%" y="431.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (287 samples, 0.99%)</title><rect x="15.7597%" y="437" width="0.9897%" height="15" fill="rgb(239,152,38)"/><text x="16.0097%" y="447.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (305 samples, 1.05%)</title><rect x="15.7218%" y="453" width="1.0518%" height="15" fill="rgb(249,139,47)"/><text x="15.9718%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.01%)</title><rect x="16.7632%" y="437" width="0.0103%" height="15" fill="rgb(244,64,35)"/><text x="17.0132%" y="447.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::get (18 samples, 0.06%)</title><rect x="16.8046%" y="437" width="0.0621%" height="15" fill="rgb(216,46,15)"/><text x="17.0546%" y="447.50"></text></g><g><title>dyper_ops`http::header::map::hash_elem_using (9 samples, 0.03%)</title><rect x="16.8667%" y="437" width="0.0310%" height="15" fill="rgb(250,74,19)"/><text x="17.1167%" y="447.50"></text></g><g><title>dyper_ops`http::header::value::HeaderValue::to_str (3 samples, 0.01%)</title><rect x="16.8977%" y="437" width="0.0103%" height="15" fill="rgb(249,42,33)"/><text x="17.1477%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="16.9253%" y="405" width="0.0103%" height="15" fill="rgb(242,149,17)"/><text x="17.1753%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.08%)</title><rect x="16.9081%" y="437" width="0.0828%" height="15" fill="rgb(244,29,21)"/><text x="17.1581%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (22 samples, 0.08%)</title><rect x="16.9150%" y="421" width="0.0759%" height="15" fill="rgb(220,130,37)"/><text x="17.1650%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.06%)</title><rect x="16.9357%" y="405" width="0.0552%" height="15" fill="rgb(211,67,2)"/><text x="17.1857%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.05%)</title><rect x="16.9391%" y="389" width="0.0517%" height="15" fill="rgb(235,68,52)"/><text x="17.1891%" y="399.50"></text></g><g><title>dyper_ops`dyper_ops::extract_host (66 samples, 0.23%)</title><rect x="16.7736%" y="453" width="0.2276%" height="15" fill="rgb(246,142,3)"/><text x="17.0236%" y="463.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.05%)</title><rect x="17.1288%" y="437" width="0.0517%" height="15" fill="rgb(241,25,7)"/><text x="17.3788%" y="447.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (3 samples, 0.01%)</title><rect x="17.1805%" y="437" width="0.0103%" height="15" fill="rgb(242,119,39)"/><text x="17.4305%" y="447.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (3 samples, 0.01%)</title><rect x="17.1977%" y="437" width="0.0103%" height="15" fill="rgb(241,98,45)"/><text x="17.4477%" y="447.50"></text></g><g><title>dyper_ops`__rust_probestack (3 samples, 0.01%)</title><rect x="17.2115%" y="437" width="0.0103%" height="15" fill="rgb(254,28,30)"/><text x="17.4615%" y="447.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (12 samples, 0.04%)</title><rect x="17.2219%" y="437" width="0.0414%" height="15" fill="rgb(241,142,54)"/><text x="17.4719%" y="447.50"></text></g><g><title>dyper_ops`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (9 samples, 0.03%)</title><rect x="17.2633%" y="437" width="0.0310%" height="15" fill="rgb(222,85,15)"/><text x="17.5133%" y="447.50"></text></g><g><title>dyper_ops`hyper::proto::h1::Wants::contains (6 samples, 0.02%)</title><rect x="17.3012%" y="437" width="0.0207%" height="15" fill="rgb(210,85,47)"/><text x="17.5512%" y="447.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (6 samples, 0.02%)</title><rect x="17.3219%" y="437" width="0.0207%" height="15" fill="rgb(224,206,25)"/><text x="17.5719%" y="447.50"></text></g><g><title>dyper_ops`futures_task::waker::clone_arc_raw (10 samples, 0.03%)</title><rect x="18.2116%" y="405" width="0.0345%" height="15" fill="rgb(243,201,19)"/><text x="18.4616%" y="415.50"></text></g><g><title>dyper_ops`alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.04%)</title><rect x="18.2564%" y="389" width="0.0414%" height="15" fill="rgb(236,59,4)"/><text x="18.5064%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="18.2978%" y="389" width="0.0379%" height="15" fill="rgb(254,179,45)"/><text x="18.5478%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.03%)</title><rect x="18.3082%" y="373" width="0.0276%" height="15" fill="rgb(226,14,10)"/><text x="18.5582%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.03%)</title><rect x="18.3082%" y="357" width="0.0276%" height="15" fill="rgb(244,27,41)"/><text x="18.5582%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.03%)</title><rect x="18.3771%" y="373" width="0.0310%" height="15" fill="rgb(235,35,32)"/><text x="18.6271%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.05%)</title><rect x="18.4737%" y="357" width="0.0517%" height="15" fill="rgb(218,68,31)"/><text x="18.7237%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.21%)</title><rect x="18.3357%" y="389" width="0.2069%" height="15" fill="rgb(207,120,37)"/><text x="18.5857%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.13%)</title><rect x="18.4151%" y="373" width="0.1276%" height="15" fill="rgb(227,98,0)"/><text x="18.6651%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.02%)</title><rect x="18.5254%" y="357" width="0.0172%" height="15" fill="rgb(207,7,3)"/><text x="18.7754%" y="367.50"></text></g><g><title>dyper_ops`futures_task::waker::drop_arc_raw (87 samples, 0.30%)</title><rect x="18.2461%" y="405" width="0.3000%" height="15" fill="rgb(206,98,19)"/><text x="18.4961%" y="415.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (147 samples, 0.51%)</title><rect x="18.0426%" y="421" width="0.5069%" height="15" fill="rgb(217,5,26)"/><text x="18.2926%" y="431.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (4 samples, 0.01%)</title><rect x="18.5496%" y="421" width="0.0138%" height="15" fill="rgb(235,190,38)"/><text x="18.7996%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="18.8082%" y="325" width="0.0103%" height="15" fill="rgb(247,86,24)"/><text x="19.0582%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="18.8220%" y="325" width="0.0207%" height="15" fill="rgb(205,101,16)"/><text x="19.0720%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (38 samples, 0.13%)</title><rect x="18.7289%" y="389" width="0.1310%" height="15" fill="rgb(246,168,33)"/><text x="18.9789%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (35 samples, 0.12%)</title><rect x="18.7392%" y="373" width="0.1207%" height="15" fill="rgb(231,114,1)"/><text x="18.9892%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.11%)</title><rect x="18.7496%" y="357" width="0.1104%" height="15" fill="rgb(207,184,53)"/><text x="18.9996%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.11%)</title><rect x="18.7496%" y="341" width="0.1104%" height="15" fill="rgb(224,95,51)"/><text x="18.9996%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="18.8427%" y="325" width="0.0172%" height="15" fill="rgb(212,188,45)"/><text x="19.0927%" y="335.50"></text></g><g><title>dyper_ops`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (74 samples, 0.26%)</title><rect x="18.6599%" y="405" width="0.2552%" height="15" fill="rgb(223,154,38)"/><text x="18.9099%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.05%)</title><rect x="18.8634%" y="389" width="0.0517%" height="15" fill="rgb(251,22,52)"/><text x="19.1134%" y="399.50"></text></g><g><title>dyper_ops`bytes::bytes::static_drop (5 samples, 0.02%)</title><rect x="18.9151%" y="405" width="0.0172%" height="15" fill="rgb(229,209,22)"/><text x="19.1651%" y="415.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (11 samples, 0.04%)</title><rect x="18.9323%" y="405" width="0.0379%" height="15" fill="rgb(234,138,34)"/><text x="19.1823%" y="415.50"></text></g><g><title>dyper_ops`http::request::Parts::new (6 samples, 0.02%)</title><rect x="18.9703%" y="405" width="0.0207%" height="15" fill="rgb(212,95,11)"/><text x="19.2203%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (26 samples, 0.09%)</title><rect x="18.9910%" y="405" width="0.0897%" height="15" fill="rgb(240,179,47)"/><text x="19.2410%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (23 samples, 0.08%)</title><rect x="19.0806%" y="405" width="0.0793%" height="15" fill="rgb(240,163,11)"/><text x="19.3306%" y="415.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (189 samples, 0.65%)</title><rect x="18.5633%" y="421" width="0.6518%" height="15" fill="rgb(236,37,12)"/><text x="18.8133%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (16 samples, 0.06%)</title><rect x="19.1599%" y="405" width="0.0552%" height="15" fill="rgb(232,164,16)"/><text x="19.4099%" y="415.50"></text></g><g><title>dyper_ops`&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (6 samples, 0.02%)</title><rect x="19.2289%" y="405" width="0.0207%" height="15" fill="rgb(244,205,15)"/><text x="19.4789%" y="415.50"></text></g><g><title>dyper_ops`hyper::common::date::CACHED::__getit (10 samples, 0.03%)</title><rect x="19.2496%" y="405" width="0.0345%" height="15" fill="rgb(223,117,47)"/><text x="19.4996%" y="415.50"></text></g><g><title>dyper_ops`&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.02%)</title><rect x="19.2910%" y="389" width="0.0172%" height="15" fill="rgb(244,107,35)"/><text x="19.5410%" y="399.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__commpage_gettimeofday (7 samples, 0.02%)</title><rect x="19.3255%" y="373" width="0.0241%" height="15" fill="rgb(205,140,8)"/><text x="19.5755%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (36 samples, 0.12%)</title><rect x="19.3669%" y="357" width="0.1241%" height="15" fill="rgb(228,84,46)"/><text x="19.6169%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (20 samples, 0.07%)</title><rect x="19.4220%" y="341" width="0.0690%" height="15" fill="rgb(254,188,9)"/><text x="19.6720%" y="351.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (43 samples, 0.15%)</title><rect x="19.3496%" y="373" width="0.1483%" height="15" fill="rgb(206,112,54)"/><text x="19.5996%" y="383.50"></text></g><g><title>dyper_ops`std::time::SystemTime::now (67 samples, 0.23%)</title><rect x="19.3082%" y="389" width="0.2311%" height="15" fill="rgb(216,84,49)"/><text x="19.5582%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (12 samples, 0.04%)</title><rect x="19.4979%" y="373" width="0.0414%" height="15" fill="rgb(214,194,35)"/><text x="19.7479%" y="383.50"></text></g><g><title>dyper_ops`hyper::common::date::CachedDate::check (80 samples, 0.28%)</title><rect x="19.2841%" y="405" width="0.2759%" height="15" fill="rgb(249,28,3)"/><text x="19.5341%" y="415.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (6 samples, 0.02%)</title><rect x="19.5393%" y="389" width="0.0207%" height="15" fill="rgb(222,56,52)"/><text x="19.7893%" y="399.50"></text></g><g><title>dyper_ops`std::time::SystemTime::now (3 samples, 0.01%)</title><rect x="19.5600%" y="405" width="0.0103%" height="15" fill="rgb(245,217,50)"/><text x="19.8100%" y="415.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (111 samples, 0.38%)</title><rect x="19.2220%" y="421" width="0.3828%" height="15" fill="rgb(213,201,24)"/><text x="19.4720%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.03%)</title><rect x="19.5703%" y="405" width="0.0345%" height="15" fill="rgb(248,116,28)"/><text x="19.8203%" y="415.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (19 samples, 0.07%)</title><rect x="19.6220%" y="421" width="0.0655%" height="15" fill="rgb(219,72,43)"/><text x="19.8720%" y="431.50"></text></g><g><title>dyper_ops`futures_task::waker::drop_arc_raw (6 samples, 0.02%)</title><rect x="19.6669%" y="405" width="0.0207%" height="15" fill="rgb(209,138,14)"/><text x="19.9169%" y="415.50"></text></g><g><title>dyper_ops`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (8 samples, 0.03%)</title><rect x="19.6876%" y="421" width="0.0276%" height="15" fill="rgb(222,18,33)"/><text x="19.9376%" y="431.50"></text></g><g><title>dyper_ops`http::request::Parts::new (3 samples, 0.01%)</title><rect x="19.7220%" y="421" width="0.0103%" height="15" fill="rgb(213,199,7)"/><text x="19.9720%" y="431.50"></text></g><g><title>dyper_ops`hyper::body::body::Body::take_full_data (4 samples, 0.01%)</title><rect x="19.7393%" y="421" width="0.0138%" height="15" fill="rgb(250,110,10)"/><text x="19.9893%" y="431.50"></text></g><g><title>dyper_ops`hyper::common::date::CACHED::__getit (5 samples, 0.02%)</title><rect x="19.7531%" y="421" width="0.0172%" height="15" fill="rgb(248,123,6)"/><text x="20.0031%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (3 samples, 0.01%)</title><rect x="19.7807%" y="421" width="0.0103%" height="15" fill="rgb(206,91,31)"/><text x="20.0307%" y="431.50"></text></g><g><title>dyper_ops`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="19.8427%" y="405" width="0.0103%" height="15" fill="rgb(211,154,13)"/><text x="20.0927%" y="415.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (4 samples, 0.01%)</title><rect x="19.8565%" y="405" width="0.0138%" height="15" fill="rgb(225,148,7)"/><text x="20.1065%" y="415.50"></text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (4 samples, 0.01%)</title><rect x="19.8703%" y="405" width="0.0138%" height="15" fill="rgb(220,160,43)"/><text x="20.1203%" y="415.50"></text></g><g><title>dyper_ops`bytes::bytes::static_drop (5 samples, 0.02%)</title><rect x="19.8841%" y="405" width="0.0172%" height="15" fill="rgb(213,52,39)"/><text x="20.1341%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (25 samples, 0.09%)</title><rect x="19.9014%" y="405" width="0.0862%" height="15" fill="rgb(243,137,7)"/><text x="20.1514%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::State::is_idle (3 samples, 0.01%)</title><rect x="19.9945%" y="405" width="0.0103%" height="15" fill="rgb(230,79,13)"/><text x="20.2445%" y="415.50"></text></g><g><title>dyper_ops`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.06%)</title><rect x="20.4118%" y="389" width="0.0621%" height="15" fill="rgb(247,105,23)"/><text x="20.6618%" y="399.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (3 samples, 0.01%)</title><rect x="20.4738%" y="389" width="0.0103%" height="15" fill="rgb(223,179,41)"/><text x="20.7238%" y="399.50"></text></g><g><title>dyper_ops`&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (15 samples, 0.05%)</title><rect x="20.6118%" y="341" width="0.0517%" height="15" fill="rgb(218,9,34)"/><text x="20.8618%" y="351.50"></text></g><g><title>dyper_ops`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (2,744 samples, 9.46%)</title><rect x="20.5842%" y="357" width="9.4627%" height="15" fill="rgb(222,106,8)"/><text x="20.8342%" y="367.50">dyper_ops`&lt;&amp;mi..</text></g><g><title>libsystem_kernel.dylib`writev (2,721 samples, 9.38%)</title><rect x="20.6635%" y="341" width="9.3834%" height="15" fill="rgb(211,220,0)"/><text x="20.9135%" y="351.50">libsystem_ker..</text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (2,799 samples, 9.65%)</title><rect x="20.4842%" y="389" width="9.6524%" height="15" fill="rgb(229,52,16)"/><text x="20.7342%" y="399.50">dyper_ops`&lt;tok..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_write_io (2,789 samples, 9.62%)</title><rect x="20.5187%" y="373" width="9.6179%" height="15" fill="rgb(212,155,18)"/><text x="20.7687%" y="383.50">dyper_ops`toki..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (25 samples, 0.09%)</title><rect x="30.0503%" y="357" width="0.0862%" height="15" fill="rgb(242,21,14)"/><text x="30.3003%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.01%)</title><rect x="30.1262%" y="341" width="0.0103%" height="15" fill="rgb(222,19,48)"/><text x="30.3762%" y="351.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (2,940 samples, 10.14%)</title><rect x="20.0048%" y="405" width="10.1386%" height="15" fill="rgb(232,45,27)"/><text x="20.2548%" y="415.50">dyper_ops`hyper..</text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (3,001 samples, 10.35%)</title><rect x="19.7979%" y="421" width="10.3490%" height="15" fill="rgb(249,103,42)"/><text x="20.0479%" y="431.50">dyper_ops`hyper..</text></g><g><title>dyper_ops`&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (3 samples, 0.01%)</title><rect x="30.2435%" y="405" width="0.0103%" height="15" fill="rgb(246,81,33)"/><text x="30.4935%" y="415.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (4 samples, 0.01%)</title><rect x="30.3297%" y="389" width="0.0138%" height="15" fill="rgb(252,33,42)"/><text x="30.5797%" y="399.50"></text></g><g><title>dyper_ops`bytes::buf::uninit_slice::UninitSlice::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="30.3573%" y="389" width="0.0138%" height="15" fill="rgb(209,212,41)"/><text x="30.6073%" y="399.50"></text></g><g><title>dyper_ops`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (12 samples, 0.04%)</title><rect x="30.5607%" y="325" width="0.0414%" height="15" fill="rgb(207,154,6)"/><text x="30.8107%" y="335.50"></text></g><g><title>libsystem_c.dylib`recv (8 samples, 0.03%)</title><rect x="30.6021%" y="325" width="0.0276%" height="15" fill="rgb(223,64,47)"/><text x="30.8521%" y="335.50"></text></g><g><title>dyper_ops`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,081 samples, 3.73%)</title><rect x="30.5297%" y="341" width="3.7278%" height="15" fill="rgb(211,161,38)"/><text x="30.7797%" y="351.50">dype..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,052 samples, 3.63%)</title><rect x="30.6297%" y="325" width="3.6278%" height="15" fill="rgb(219,138,40)"/><text x="30.8797%" y="335.50">libs..</text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (9 samples, 0.03%)</title><rect x="34.3058%" y="325" width="0.0310%" height="15" fill="rgb(241,228,46)"/><text x="34.5558%" y="335.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (26 samples, 0.09%)</title><rect x="34.2644%" y="341" width="0.0897%" height="15" fill="rgb(223,209,38)"/><text x="34.5144%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.02%)</title><rect x="34.3369%" y="325" width="0.0172%" height="15" fill="rgb(236,164,45)"/><text x="34.5869%" y="335.50"></text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1,140 samples, 3.93%)</title><rect x="30.4297%" y="373" width="3.9313%" height="15" fill="rgb(231,15,5)"/><text x="30.6797%" y="383.50">dype..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_read_io (1,131 samples, 3.90%)</title><rect x="30.4607%" y="357" width="3.9003%" height="15" fill="rgb(252,35,15)"/><text x="30.7107%" y="367.50">dype..</text></g><g><title>dyper_ops`hyper::proto::h1::io::ReadStrategy::record (7 samples, 0.02%)</title><rect x="34.3610%" y="373" width="0.0241%" height="15" fill="rgb(248,181,18)"/><text x="34.6110%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1,166 samples, 4.02%)</title><rect x="30.3711%" y="389" width="4.0210%" height="15" fill="rgb(233,39,42)"/><text x="30.6211%" y="399.50">dype..</text></g><g><title>dyper_ops`hyper::proto::h1::io::ReadStrategy::next (3 samples, 0.01%)</title><rect x="34.3920%" y="389" width="0.0103%" height="15" fill="rgb(238,110,33)"/><text x="34.6420%" y="399.50"></text></g><g><title>dyper_ops`__rdl_alloc (4 samples, 0.01%)</title><rect x="34.7265%" y="357" width="0.0138%" height="15" fill="rgb(233,195,10)"/><text x="34.9765%" y="367.50"></text></g><g><title>dyper_ops`__rdl_dealloc (4 samples, 0.01%)</title><rect x="34.7403%" y="357" width="0.0138%" height="15" fill="rgb(254,105,3)"/><text x="34.9903%" y="367.50"></text></g><g><title>dyper_ops`__rust_probestack (10 samples, 0.03%)</title><rect x="34.7610%" y="357" width="0.0345%" height="15" fill="rgb(221,225,9)"/><text x="35.0110%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.05%)</title><rect x="34.8300%" y="309" width="0.0483%" height="15" fill="rgb(224,227,45)"/><text x="35.0800%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (6 samples, 0.02%)</title><rect x="34.9645%" y="277" width="0.0207%" height="15" fill="rgb(229,198,43)"/><text x="35.2145%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.13%)</title><rect x="34.8783%" y="309" width="0.1276%" height="15" fill="rgb(206,209,35)"/><text x="35.1283%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.13%)</title><rect x="34.8783%" y="293" width="0.1276%" height="15" fill="rgb(245,195,53)"/><text x="35.1283%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.01%)</title><rect x="34.9921%" y="277" width="0.0138%" height="15" fill="rgb(240,92,26)"/><text x="35.2421%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (55 samples, 0.19%)</title><rect x="34.8196%" y="325" width="0.1897%" height="15" fill="rgb(207,40,23)"/><text x="35.0696%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (60 samples, 0.21%)</title><rect x="34.8058%" y="341" width="0.2069%" height="15" fill="rgb(223,111,35)"/><text x="35.0558%" y="351.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::copy_from_slice (65 samples, 0.22%)</title><rect x="34.7955%" y="357" width="0.2242%" height="15" fill="rgb(229,147,28)"/><text x="35.0455%" y="367.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::slice (10 samples, 0.03%)</title><rect x="35.0197%" y="357" width="0.0345%" height="15" fill="rgb(211,29,28)"/><text x="35.2697%" y="367.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::shared_v_clone (5 samples, 0.02%)</title><rect x="35.0369%" y="341" width="0.0172%" height="15" fill="rgb(228,72,33)"/><text x="35.2869%" y="351.50"></text></g><g><title>dyper_ops`bytes::bytes::promotable_even_drop (11 samples, 0.04%)</title><rect x="35.0541%" y="357" width="0.0379%" height="15" fill="rgb(205,214,31)"/><text x="35.3041%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="35.1852%" y="277" width="0.0207%" height="15" fill="rgb(224,111,15)"/><text x="35.4352%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (52 samples, 0.18%)</title><rect x="35.1093%" y="341" width="0.1793%" height="15" fill="rgb(253,21,26)"/><text x="35.3593%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (52 samples, 0.18%)</title><rect x="35.1093%" y="325" width="0.1793%" height="15" fill="rgb(245,139,43)"/><text x="35.3593%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (49 samples, 0.17%)</title><rect x="35.1197%" y="309" width="0.1690%" height="15" fill="rgb(252,170,7)"/><text x="35.3697%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.17%)</title><rect x="35.1231%" y="293" width="0.1655%" height="15" fill="rgb(231,118,14)"/><text x="35.3731%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.08%)</title><rect x="35.2093%" y="277" width="0.0793%" height="15" fill="rgb(238,83,0)"/><text x="35.4593%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="35.2714%" y="261" width="0.0172%" height="15" fill="rgb(221,39,39)"/><text x="35.5214%" y="271.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::BytesMut::split_to (58 samples, 0.20%)</title><rect x="35.0921%" y="357" width="0.2000%" height="15" fill="rgb(222,119,46)"/><text x="35.3421%" y="367.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::shared_v_drop (4 samples, 0.01%)</title><rect x="35.2955%" y="357" width="0.0138%" height="15" fill="rgb(222,165,49)"/><text x="35.5455%" y="367.50"></text></g><g><title>dyper_ops`http::header::map::Danger::is_yellow (3 samples, 0.01%)</title><rect x="35.3783%" y="341" width="0.0103%" height="15" fill="rgb(219,113,52)"/><text x="35.6283%" y="351.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve_one (4 samples, 0.01%)</title><rect x="35.3886%" y="341" width="0.0138%" height="15" fill="rgb(214,7,15)"/><text x="35.6386%" y="351.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::append (36 samples, 0.12%)</title><rect x="35.3093%" y="357" width="0.1241%" height="15" fill="rgb(235,32,4)"/><text x="35.5593%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="35.4093%" y="341" width="0.0241%" height="15" fill="rgb(238,90,54)"/><text x="35.6593%" y="351.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve (10 samples, 0.03%)</title><rect x="35.4335%" y="357" width="0.0345%" height="15" fill="rgb(213,208,19)"/><text x="35.6835%" y="367.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve_one (3 samples, 0.01%)</title><rect x="35.4680%" y="357" width="0.0103%" height="15" fill="rgb(233,156,4)"/><text x="35.7180%" y="367.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::from_bytes (17 samples, 0.06%)</title><rect x="35.4852%" y="357" width="0.0586%" height="15" fill="rgb(207,194,5)"/><text x="35.7352%" y="367.50"></text></g><g><title>dyper_ops`http::header::name::parse_hdr (13 samples, 0.04%)</title><rect x="35.4990%" y="341" width="0.0448%" height="15" fill="rgb(206,111,30)"/><text x="35.7490%" y="351.50"></text></g><g><title>dyper_ops`http::method::Method::from_bytes (9 samples, 0.03%)</title><rect x="35.5473%" y="357" width="0.0310%" height="15" fill="rgb(243,70,54)"/><text x="35.7973%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.09%)</title><rect x="35.5956%" y="341" width="0.0931%" height="15" fill="rgb(242,28,8)"/><text x="35.8456%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.08%)</title><rect x="35.6128%" y="325" width="0.0759%" height="15" fill="rgb(219,106,18)"/><text x="35.8628%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.06%)</title><rect x="35.6266%" y="309" width="0.0621%" height="15" fill="rgb(244,222,10)"/><text x="35.8766%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.03%)</title><rect x="35.8128%" y="309" width="0.0276%" height="15" fill="rgb(236,179,52)"/><text x="36.0628%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.17%)</title><rect x="35.7163%" y="325" width="0.1655%" height="15" fill="rgb(213,23,39)"/><text x="35.9663%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.04%)</title><rect x="35.8404%" y="309" width="0.0414%" height="15" fill="rgb(238,48,10)"/><text x="36.0904%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (57 samples, 0.20%)</title><rect x="35.6887%" y="341" width="0.1966%" height="15" fill="rgb(251,196,23)"/><text x="35.9387%" y="351.50"></text></g><g><title>dyper_ops`http::uri::Uri::from_shared (91 samples, 0.31%)</title><rect x="35.5783%" y="357" width="0.3138%" height="15" fill="rgb(250,152,24)"/><text x="35.8283%" y="367.50"></text></g><g><title>dyper_ops`httparse::simd::runtime::match_header_value_vectored (13 samples, 0.04%)</title><rect x="36.0577%" y="325" width="0.0448%" height="15" fill="rgb(209,150,17)"/><text x="36.3077%" y="335.50"></text></g><g><title>dyper_ops`httparse::simd::sse42::match_header_value_char_16_sse (8 samples, 0.03%)</title><rect x="36.0749%" y="309" width="0.0276%" height="15" fill="rgb(234,202,34)"/><text x="36.3249%" y="319.50"></text></g><g><title>dyper_ops`httparse::parse_headers_iter (45 samples, 0.16%)</title><rect x="35.9611%" y="341" width="0.1552%" height="15" fill="rgb(253,148,53)"/><text x="36.2111%" y="351.50"></text></g><g><title>dyper_ops`httparse::simd::sse42::match_header_value_char_16_sse (4 samples, 0.01%)</title><rect x="36.1025%" y="325" width="0.0138%" height="15" fill="rgb(218,129,16)"/><text x="36.3525%" y="335.50"></text></g><g><title>dyper_ops`httparse::parse_version (3 samples, 0.01%)</title><rect x="36.1163%" y="341" width="0.0103%" height="15" fill="rgb(216,85,19)"/><text x="36.3663%" y="351.50"></text></g><g><title>dyper_ops`httparse::simd::avx2::match_url_char_32_avx (7 samples, 0.02%)</title><rect x="36.1266%" y="341" width="0.0241%" height="15" fill="rgb(235,228,7)"/><text x="36.3766%" y="351.50"></text></g><g><title>dyper_ops`httparse::Request::parse (92 samples, 0.32%)</title><rect x="35.8921%" y="357" width="0.3173%" height="15" fill="rgb(245,175,0)"/><text x="36.1421%" y="367.50"></text></g><g><title>dyper_ops`httparse::simd::runtime::match_uri_vectored (17 samples, 0.06%)</title><rect x="36.1508%" y="341" width="0.0586%" height="15" fill="rgb(208,168,36)"/><text x="36.4008%" y="351.50"></text></g><g><title>dyper_ops`httparse::simd::avx2::match_url_char_32_avx (13 samples, 0.04%)</title><rect x="36.1646%" y="325" width="0.0448%" height="15" fill="rgb(246,171,24)"/><text x="36.4146%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="36.2197%" y="357" width="0.0241%" height="15" fill="rgb(215,142,24)"/><text x="36.4697%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.03%)</title><rect x="36.2508%" y="357" width="0.0310%" height="15" fill="rgb(250,187,7)"/><text x="36.5008%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.02%)</title><rect x="36.2818%" y="357" width="0.0172%" height="15" fill="rgb(228,66,33)"/><text x="36.5318%" y="367.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (560 samples, 1.93%)</title><rect x="34.4369%" y="373" width="1.9312%" height="15" fill="rgb(234,215,21)"/><text x="34.6869%" y="383.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.07%)</title><rect x="36.2991%" y="357" width="0.0690%" height="15" fill="rgb(222,191,20)"/><text x="36.5491%" y="367.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::slice (4 samples, 0.01%)</title><rect x="36.3887%" y="373" width="0.0138%" height="15" fill="rgb(245,79,54)"/><text x="36.6387%" y="383.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::BytesMut::split_to (3 samples, 0.01%)</title><rect x="36.4025%" y="373" width="0.0103%" height="15" fill="rgb(240,10,37)"/><text x="36.6525%" y="383.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::append (3 samples, 0.01%)</title><rect x="36.4129%" y="373" width="0.0103%" height="15" fill="rgb(214,192,32)"/><text x="36.6629%" y="383.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve (5 samples, 0.02%)</title><rect x="36.4232%" y="373" width="0.0172%" height="15" fill="rgb(209,36,54)"/><text x="36.6732%" y="383.50"></text></g><g><title>dyper_ops`http::uri::Uri::from_shared (3 samples, 0.01%)</title><rect x="36.4508%" y="373" width="0.0103%" height="15" fill="rgb(220,10,11)"/><text x="36.7008%" y="383.50"></text></g><g><title>dyper_ops`httparse::Request::parse (5 samples, 0.02%)</title><rect x="36.4611%" y="373" width="0.0172%" height="15" fill="rgb(221,106,17)"/><text x="36.7111%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::role::parse_headers (607 samples, 2.09%)</title><rect x="34.4058%" y="389" width="2.0932%" height="15" fill="rgb(251,142,44)"/><text x="34.6558%" y="399.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="36.4853%" y="373" width="0.0138%" height="15" fill="rgb(238,13,15)"/><text x="36.7353%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1,836 samples, 6.33%)</title><rect x="30.2642%" y="405" width="6.3315%" height="15" fill="rgb(208,107,27)"/><text x="30.5142%" y="415.50">dyper_op..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.09%)</title><rect x="36.5025%" y="389" width="0.0931%" height="15" fill="rgb(205,136,37)"/><text x="36.7525%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::role::parse_headers (3 samples, 0.01%)</title><rect x="36.6025%" y="405" width="0.0103%" height="15" fill="rgb(250,205,27)"/><text x="36.8525%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1,890 samples, 6.52%)</title><rect x="30.1469%" y="421" width="6.5177%" height="15" fill="rgb(210,80,43)"/><text x="30.3969%" y="431.50">dyper_ops..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.05%)</title><rect x="36.6129%" y="405" width="0.0517%" height="15" fill="rgb(247,160,36)"/><text x="36.8629%" y="415.50"></text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (6 samples, 0.02%)</title><rect x="36.7784%" y="389" width="0.0207%" height="15" fill="rgb(234,13,49)"/><text x="37.0284%" y="399.50"></text></g><g><title>dyper_ops`bytes::buf::uninit_slice::UninitSlice::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="36.7991%" y="389" width="0.0103%" height="15" fill="rgb(234,122,0)"/><text x="37.0491%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`_pthread_exit_if_canceled (3 samples, 0.01%)</title><rect x="36.9888%" y="309" width="0.0103%" height="15" fill="rgb(207,146,38)"/><text x="37.2388%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`cerror (3 samples, 0.01%)</title><rect x="36.9991%" y="309" width="0.0103%" height="15" fill="rgb(207,177,25)"/><text x="37.2491%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (4 samples, 0.01%)</title><rect x="37.0094%" y="309" width="0.0138%" height="15" fill="rgb(211,178,42)"/><text x="37.2594%" y="319.50"></text></g><g><title>dyper_ops`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 0.07%)</title><rect x="36.9750%" y="325" width="0.0724%" height="15" fill="rgb(230,69,54)"/><text x="37.2250%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (7 samples, 0.02%)</title><rect x="37.0232%" y="309" width="0.0241%" height="15" fill="rgb(214,135,41)"/><text x="37.2732%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (484 samples, 1.67%)</title><rect x="37.0646%" y="325" width="1.6691%" height="15" fill="rgb(237,67,25)"/><text x="37.3146%" y="335.50"></text></g><g><title>dyper_ops`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (524 samples, 1.81%)</title><rect x="36.9577%" y="341" width="1.8070%" height="15" fill="rgb(222,189,50)"/><text x="37.2077%" y="351.50">d..</text></g><g><title>libsystem_kernel.dylib`cerror (9 samples, 0.03%)</title><rect x="38.7337%" y="325" width="0.0310%" height="15" fill="rgb(245,148,34)"/><text x="38.9837%" y="335.50"></text></g><g><title>dyper_ops`std::sys::unix::decode_error_kind (3 samples, 0.01%)</title><rect x="38.7682%" y="341" width="0.0103%" height="15" fill="rgb(222,29,6)"/><text x="39.0182%" y="351.50"></text></g><g><title>dyper_ops`tokio::coop::CURRENT::__getit (5 samples, 0.02%)</title><rect x="38.7785%" y="341" width="0.0172%" height="15" fill="rgb(221,189,43)"/><text x="39.0285%" y="351.50"></text></g><g><title>dyper_ops`&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="38.8337%" y="325" width="0.0138%" height="15" fill="rgb(207,36,27)"/><text x="39.0837%" y="335.50"></text></g><g><title>dyper_ops`futures_task::waker::clone_arc_raw (4 samples, 0.01%)</title><rect x="38.8475%" y="325" width="0.0138%" height="15" fill="rgb(217,90,24)"/><text x="39.0975%" y="335.50"></text></g><g><title>dyper_ops`tokio::coop::CURRENT::__getit (5 samples, 0.02%)</title><rect x="38.8647%" y="325" width="0.0172%" height="15" fill="rgb(224,66,35)"/><text x="39.1147%" y="335.50"></text></g><g><title>dyper_ops`futures_task::waker::clone_arc_raw (12 samples, 0.04%)</title><rect x="39.0303%" y="309" width="0.0414%" height="15" fill="rgb(221,13,50)"/><text x="39.2803%" y="319.50"></text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (64 samples, 0.22%)</title><rect x="38.8820%" y="325" width="0.2207%" height="15" fill="rgb(236,68,49)"/><text x="39.1320%" y="335.50"></text></g><g><title>dyper_ops`futures_task::waker::drop_arc_raw (9 samples, 0.03%)</title><rect x="39.0717%" y="309" width="0.0310%" height="15" fill="rgb(229,146,28)"/><text x="39.3217%" y="319.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (102 samples, 0.35%)</title><rect x="38.7958%" y="341" width="0.3517%" height="15" fill="rgb(225,31,38)"/><text x="39.0458%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.04%)</title><rect x="39.1027%" y="325" width="0.0448%" height="15" fill="rgb(250,208,3)"/><text x="39.3527%" y="335.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_read_io (652 samples, 2.25%)</title><rect x="36.9060%" y="357" width="2.2484%" height="15" fill="rgb(246,54,23)"/><text x="37.1560%" y="367.50">d..</text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (664 samples, 2.29%)</title><rect x="36.8715%" y="373" width="2.2898%" height="15" fill="rgb(243,76,11)"/><text x="37.1215%" y="383.50">d..</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (4 samples, 0.01%)</title><rect x="39.3751%" y="277" width="0.0138%" height="15" fill="rgb(245,21,50)"/><text x="39.6251%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (73 samples, 0.25%)</title><rect x="39.1924%" y="357" width="0.2517%" height="15" fill="rgb(228,9,43)"/><text x="39.4424%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (70 samples, 0.24%)</title><rect x="39.2027%" y="341" width="0.2414%" height="15" fill="rgb(208,100,47)"/><text x="39.4527%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (68 samples, 0.23%)</title><rect x="39.2096%" y="325" width="0.2345%" height="15" fill="rgb(232,26,8)"/><text x="39.4596%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (68 samples, 0.23%)</title><rect x="39.2096%" y="309" width="0.2345%" height="15" fill="rgb(216,166,38)"/><text x="39.4596%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (37 samples, 0.13%)</title><rect x="39.3165%" y="293" width="0.1276%" height="15" fill="rgb(251,202,51)"/><text x="39.5665%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.05%)</title><rect x="39.3958%" y="277" width="0.0483%" height="15" fill="rgb(254,216,34)"/><text x="39.6458%" y="287.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::BytesMut::reserve_inner (84 samples, 0.29%)</title><rect x="39.1613%" y="373" width="0.2897%" height="15" fill="rgb(251,32,27)"/><text x="39.4113%" y="383.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_read_io (3 samples, 0.01%)</title><rect x="39.4510%" y="373" width="0.0103%" height="15" fill="rgb(208,127,28)"/><text x="39.7010%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (772 samples, 2.66%)</title><rect x="36.8094%" y="389" width="2.6623%" height="15" fill="rgb(224,137,22)"/><text x="37.0594%" y="399.50">dy..</text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (795 samples, 2.74%)</title><rect x="36.7370%" y="405" width="2.7416%" height="15" fill="rgb(254,70,32)"/><text x="36.9870%" y="415.50">dy..</text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (818 samples, 2.82%)</title><rect x="36.6646%" y="421" width="2.8209%" height="15" fill="rgb(229,75,37)"/><text x="36.9146%" y="431.50">dy..</text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (7 samples, 0.02%)</title><rect x="39.4855%" y="421" width="0.0241%" height="15" fill="rgb(252,64,23)"/><text x="39.7355%" y="431.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (5 samples, 0.02%)</title><rect x="39.5820%" y="389" width="0.0172%" height="15" fill="rgb(232,162,48)"/><text x="39.8320%" y="399.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="39.9683%" y="357" width="0.0241%" height="15" fill="rgb(246,160,12)"/><text x="40.2183%" y="367.50"></text></g><g><title>dyper_ops`bytes::bytes::promotable_even_drop (3 samples, 0.01%)</title><rect x="39.9924%" y="357" width="0.0103%" height="15" fill="rgb(247,166,0)"/><text x="40.2424%" y="367.50"></text></g><g><title>dyper_ops`hyper::common::date::extend (6 samples, 0.02%)</title><rect x="40.0028%" y="357" width="0.0207%" height="15" fill="rgb(249,219,21)"/><text x="40.2528%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.08%)</title><rect x="40.0303%" y="357" width="0.0759%" height="15" fill="rgb(205,209,3)"/><text x="40.2803%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.06%)</title><rect x="40.0510%" y="341" width="0.0552%" height="15" fill="rgb(243,44,1)"/><text x="40.3010%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.05%)</title><rect x="40.0545%" y="325" width="0.0517%" height="15" fill="rgb(206,159,16)"/><text x="40.3045%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (6 samples, 0.02%)</title><rect x="40.1717%" y="341" width="0.0207%" height="15" fill="rgb(244,77,30)"/><text x="40.4217%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.06%)</title><rect x="40.2924%" y="325" width="0.0621%" height="15" fill="rgb(218,69,12)"/><text x="40.5424%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (73 samples, 0.25%)</title><rect x="40.1062%" y="357" width="0.2517%" height="15" fill="rgb(212,87,7)"/><text x="40.3562%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (47 samples, 0.16%)</title><rect x="40.1959%" y="341" width="0.1621%" height="15" fill="rgb(245,114,25)"/><text x="40.4459%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="40.3580%" y="357" width="0.0207%" height="15" fill="rgb(210,61,42)"/><text x="40.6080%" y="367.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (244 samples, 0.84%)</title><rect x="39.6200%" y="373" width="0.8414%" height="15" fill="rgb(211,52,33)"/><text x="39.8700%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.08%)</title><rect x="40.3821%" y="357" width="0.0793%" height="15" fill="rgb(234,58,33)"/><text x="40.6321%" y="367.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="40.4683%" y="373" width="0.0207%" height="15" fill="rgb(220,115,36)"/><text x="40.7183%" y="383.50"></text></g><g><title>dyper_ops`bytes::bytes::promotable_even_drop (8 samples, 0.03%)</title><rect x="40.4890%" y="373" width="0.0276%" height="15" fill="rgb(243,153,54)"/><text x="40.7390%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::role::encode_headers (272 samples, 0.94%)</title><rect x="39.5993%" y="389" width="0.9380%" height="15" fill="rgb(251,47,18)"/><text x="39.8493%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (288 samples, 0.99%)</title><rect x="39.5476%" y="405" width="0.9932%" height="15" fill="rgb(242,102,42)"/><text x="39.7976%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::State::wants_keep_alive (3 samples, 0.01%)</title><rect x="40.5407%" y="405" width="0.0103%" height="15" fill="rgb(234,31,38)"/><text x="40.7907%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (11 samples, 0.04%)</title><rect x="40.5614%" y="389" width="0.0379%" height="15" fill="rgb(221,117,51)"/><text x="40.8114%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="40.5718%" y="373" width="0.0276%" height="15" fill="rgb(212,20,18)"/><text x="40.8218%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::encode::Encoder::danger_full_buf (16 samples, 0.06%)</title><rect x="40.5511%" y="405" width="0.0552%" height="15" fill="rgb(245,133,36)"/><text x="40.8011%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (4 samples, 0.01%)</title><rect x="40.6062%" y="405" width="0.0138%" height="15" fill="rgb(212,6,19)"/><text x="40.8562%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (326 samples, 1.12%)</title><rect x="39.5096%" y="421" width="1.1242%" height="15" fill="rgb(218,1,36)"/><text x="39.7596%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::role::encode_headers (4 samples, 0.01%)</title><rect x="40.6200%" y="405" width="0.0138%" height="15" fill="rgb(246,84,54)"/><text x="40.8700%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::State::is_read_closed (4 samples, 0.01%)</title><rect x="40.6407%" y="421" width="0.0138%" height="15" fill="rgb(242,110,6)"/><text x="40.8907%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::encode::Encoder::danger_full_buf (3 samples, 0.01%)</title><rect x="40.6580%" y="421" width="0.0103%" height="15" fill="rgb(214,47,5)"/><text x="40.9080%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::encode::Encoder::is_last (3 samples, 0.01%)</title><rect x="40.6752%" y="421" width="0.0103%" height="15" fill="rgb(218,159,25)"/><text x="40.9252%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (5 samples, 0.02%)</title><rect x="40.6856%" y="421" width="0.0172%" height="15" fill="rgb(215,211,28)"/><text x="40.9356%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (8 samples, 0.03%)</title><rect x="40.7028%" y="421" width="0.0276%" height="15" fill="rgb(238,59,32)"/><text x="40.9528%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="40.7373%" y="421" width="0.0276%" height="15" fill="rgb(226,82,3)"/><text x="40.9873%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="40.7442%" y="405" width="0.0207%" height="15" fill="rgb(240,164,32)"/><text x="40.9942%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.01%)</title><rect x="40.7511%" y="389" width="0.0138%" height="15" fill="rgb(232,46,7)"/><text x="41.0011%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.02%)</title><rect x="40.7994%" y="405" width="0.0172%" height="15" fill="rgb(229,129,53)"/><text x="41.0494%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.03%)</title><rect x="40.8925%" y="389" width="0.0345%" height="15" fill="rgb(234,188,29)"/><text x="41.1425%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (56 samples, 0.19%)</title><rect x="40.7649%" y="421" width="0.1931%" height="15" fill="rgb(246,141,4)"/><text x="41.0149%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.14%)</title><rect x="40.8201%" y="405" width="0.1379%" height="15" fill="rgb(229,23,39)"/><text x="41.0701%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.03%)</title><rect x="40.9270%" y="389" width="0.0310%" height="15" fill="rgb(206,12,3)"/><text x="41.1770%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (62 samples, 0.21%)</title><rect x="40.9649%" y="421" width="0.2138%" height="15" fill="rgb(252,226,20)"/><text x="41.2149%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.03%)</title><rect x="41.1787%" y="421" width="0.0310%" height="15" fill="rgb(216,123,35)"/><text x="41.4287%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (6,928 samples, 23.89%)</title><rect x="17.3736%" y="437" width="23.8913%" height="15" fill="rgb(212,68,40)"/><text x="17.6236%" y="447.50">dyper_ops`hyper::proto::h1::dispatch::..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (16 samples, 0.06%)</title><rect x="41.2097%" y="421" width="0.0552%" height="15" fill="rgb(254,125,32)"/><text x="41.4597%" y="431.50"></text></g><g><title>dyper_ops`futures_util::future::future::FutureExt::poll_unpin (7,051 samples, 24.32%)</title><rect x="17.0012%" y="453" width="24.3155%" height="15" fill="rgb(253,97,22)"/><text x="17.2512%" y="463.50">dyper_ops`futures_util::future::future:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.04%)</title><rect x="41.2753%" y="437" width="0.0414%" height="15" fill="rgb(241,101,14)"/><text x="41.5253%" y="447.50"></text></g><g><title>dyper_ops`http::header::value::HeaderValue::to_str (9 samples, 0.03%)</title><rect x="41.3201%" y="453" width="0.0310%" height="15" fill="rgb(238,103,29)"/><text x="41.5701%" y="463.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.10%)</title><rect x="41.5511%" y="437" width="0.1035%" height="15" fill="rgb(233,195,47)"/><text x="41.8011%" y="447.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="41.6649%" y="437" width="0.0103%" height="15" fill="rgb(246,218,30)"/><text x="41.9149%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="41.9167%" y="325" width="0.0103%" height="15" fill="rgb(219,145,47)"/><text x="42.1667%" y="335.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (40 samples, 0.14%)</title><rect x="41.8201%" y="405" width="0.1379%" height="15" fill="rgb(243,12,26)"/><text x="42.0701%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (40 samples, 0.14%)</title><rect x="41.8201%" y="389" width="0.1379%" height="15" fill="rgb(214,87,16)"/><text x="42.0701%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (40 samples, 0.14%)</title><rect x="41.8201%" y="373" width="0.1379%" height="15" fill="rgb(208,99,42)"/><text x="42.0701%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.13%)</title><rect x="41.8236%" y="357" width="0.1345%" height="15" fill="rgb(253,99,2)"/><text x="42.0736%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.12%)</title><rect x="41.8339%" y="341" width="0.1241%" height="15" fill="rgb(220,168,23)"/><text x="42.0839%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.03%)</title><rect x="41.9270%" y="325" width="0.0310%" height="15" fill="rgb(242,38,24)"/><text x="42.1770%" y="335.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (42 samples, 0.14%)</title><rect x="41.8167%" y="421" width="0.1448%" height="15" fill="rgb(225,182,9)"/><text x="42.0667%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="42.1581%" y="309" width="0.0103%" height="15" fill="rgb(243,178,37)"/><text x="42.4081%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.06%)</title><rect x="42.1684%" y="309" width="0.0552%" height="15" fill="rgb(232,139,19)"/><text x="42.4184%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.12%)</title><rect x="42.1064%" y="341" width="0.1207%" height="15" fill="rgb(225,201,24)"/><text x="42.3564%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (34 samples, 0.12%)</title><rect x="42.1098%" y="325" width="0.1172%" height="15" fill="rgb(221,47,46)"/><text x="42.3598%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (39 samples, 0.13%)</title><rect x="42.0960%" y="373" width="0.1345%" height="15" fill="rgb(249,23,13)"/><text x="42.3460%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (39 samples, 0.13%)</title><rect x="42.0960%" y="357" width="0.1345%" height="15" fill="rgb(219,9,5)"/><text x="42.3460%" y="367.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (46 samples, 0.16%)</title><rect x="42.0857%" y="389" width="0.1586%" height="15" fill="rgb(254,171,16)"/><text x="42.3357%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="42.2339%" y="373" width="0.0103%" height="15" fill="rgb(230,171,20)"/><text x="42.4839%" y="383.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (83 samples, 0.29%)</title><rect x="41.9684%" y="421" width="0.2862%" height="15" fill="rgb(210,71,41)"/><text x="42.2184%" y="431.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (57 samples, 0.20%)</title><rect x="42.0581%" y="405" width="0.1966%" height="15" fill="rgb(206,173,20)"/><text x="42.3081%" y="415.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="42.2546%" y="421" width="0.0172%" height="15" fill="rgb(233,88,34)"/><text x="42.5046%" y="431.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (180 samples, 0.62%)</title><rect x="41.6753%" y="437" width="0.6207%" height="15" fill="rgb(223,209,46)"/><text x="41.9253%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="42.2719%" y="421" width="0.0241%" height="15" fill="rgb(250,43,18)"/><text x="42.5219%" y="431.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (275 samples, 0.95%)</title><rect x="41.3511%" y="453" width="0.9483%" height="15" fill="rgb(208,13,10)"/><text x="41.6011%" y="463.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (7 samples, 0.02%)</title><rect x="42.2995%" y="453" width="0.0241%" height="15" fill="rgb(212,200,36)"/><text x="42.5495%" y="463.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (6 samples, 0.02%)</title><rect x="42.3753%" y="437" width="0.0207%" height="15" fill="rgb(225,90,30)"/><text x="42.6253%" y="447.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeTuple&gt;::end (9 samples, 0.03%)</title><rect x="42.3960%" y="437" width="0.0310%" height="15" fill="rgb(236,182,39)"/><text x="42.6460%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="42.5202%" y="357" width="0.0103%" height="15" fill="rgb(212,144,35)"/><text x="42.7702%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.10%)</title><rect x="42.4615%" y="389" width="0.1000%" height="15" fill="rgb(228,63,44)"/><text x="42.7115%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.10%)</title><rect x="42.4650%" y="373" width="0.0966%" height="15" fill="rgb(228,109,6)"/><text x="42.7150%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.03%)</title><rect x="42.5305%" y="357" width="0.0310%" height="15" fill="rgb(238,117,24)"/><text x="42.7805%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="42.5512%" y="341" width="0.0103%" height="15" fill="rgb(242,26,26)"/><text x="42.8012%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.12%)</title><rect x="42.4478%" y="405" width="0.1172%" height="15" fill="rgb(221,92,48)"/><text x="42.6978%" y="415.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (42 samples, 0.14%)</title><rect x="42.4271%" y="437" width="0.1448%" height="15" fill="rgb(209,209,32)"/><text x="42.6771%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (38 samples, 0.13%)</title><rect x="42.4409%" y="421" width="0.1310%" height="15" fill="rgb(221,70,22)"/><text x="42.6909%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="42.6685%" y="357" width="0.0172%" height="15" fill="rgb(248,145,5)"/><text x="42.9185%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (46 samples, 0.16%)</title><rect x="42.6029%" y="389" width="0.1586%" height="15" fill="rgb(226,116,26)"/><text x="42.8529%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (44 samples, 0.15%)</title><rect x="42.6098%" y="373" width="0.1517%" height="15" fill="rgb(244,5,17)"/><text x="42.8598%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.08%)</title><rect x="42.6857%" y="357" width="0.0759%" height="15" fill="rgb(252,159,33)"/><text x="42.9357%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.03%)</title><rect x="42.7340%" y="341" width="0.0276%" height="15" fill="rgb(206,71,0)"/><text x="42.9840%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (49 samples, 0.17%)</title><rect x="42.5960%" y="405" width="0.1690%" height="15" fill="rgb(233,118,54)"/><text x="42.8460%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (53 samples, 0.18%)</title><rect x="42.5891%" y="421" width="0.1828%" height="15" fill="rgb(234,83,48)"/><text x="42.8391%" y="431.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_tuple (59 samples, 0.20%)</title><rect x="42.5719%" y="437" width="0.2035%" height="15" fill="rgb(228,3,54)"/><text x="42.8219%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (48 samples, 0.17%)</title><rect x="42.7857%" y="421" width="0.1655%" height="15" fill="rgb(226,155,13)"/><text x="43.0357%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (45 samples, 0.16%)</title><rect x="42.7961%" y="405" width="0.1552%" height="15" fill="rgb(241,28,37)"/><text x="43.0461%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.15%)</title><rect x="42.8030%" y="389" width="0.1483%" height="15" fill="rgb(233,93,10)"/><text x="43.0530%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="42.9271%" y="373" width="0.0241%" height="15" fill="rgb(225,113,19)"/><text x="43.1771%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc (52 samples, 0.18%)</title><rect x="42.7754%" y="437" width="0.1793%" height="15" fill="rgb(241,2,18)"/><text x="43.0254%" y="447.50"></text></g><g><title>dyper_ops`serde_json::value::to_value (195 samples, 0.67%)</title><rect x="42.3236%" y="453" width="0.6725%" height="15" fill="rgb(228,207,21)"/><text x="42.5736%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.04%)</title><rect x="42.9547%" y="437" width="0.0414%" height="15" fill="rgb(213,211,35)"/><text x="43.2047%" y="447.50"></text></g><g><title>dyper_ops`std::collections::hash::map::RandomState::new::KEYS::__getit (4 samples, 0.01%)</title><rect x="42.9961%" y="453" width="0.0138%" height="15" fill="rgb(209,83,10)"/><text x="43.2461%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.02%)</title><rect x="43.0099%" y="453" width="0.0207%" height="15" fill="rgb(209,164,1)"/><text x="43.2599%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (6 samples, 0.02%)</title><rect x="43.0306%" y="453" width="0.0207%" height="15" fill="rgb(213,184,43)"/><text x="43.2806%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.02%)</title><rect x="43.0512%" y="453" width="0.0207%" height="15" fill="rgb(231,61,34)"/><text x="43.3012%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (36 samples, 0.12%)</title><rect x="43.1581%" y="437" width="0.1241%" height="15" fill="rgb(235,75,3)"/><text x="43.4081%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.09%)</title><rect x="43.1892%" y="421" width="0.0931%" height="15" fill="rgb(220,106,47)"/><text x="43.4392%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (63 samples, 0.22%)</title><rect x="43.0719%" y="453" width="0.2173%" height="15" fill="rgb(210,196,33)"/><text x="43.3219%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.02%)</title><rect x="43.4616%" y="437" width="0.0172%" height="15" fill="rgb(229,154,42)"/><text x="43.7116%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (40 samples, 0.14%)</title><rect x="43.6961%" y="421" width="0.1379%" height="15" fill="rgb(228,114,26)"/><text x="43.9461%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (116 samples, 0.40%)</title><rect x="43.4927%" y="437" width="0.4000%" height="15" fill="rgb(208,144,1)"/><text x="43.7427%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.06%)</title><rect x="43.8341%" y="421" width="0.0586%" height="15" fill="rgb(239,112,37)"/><text x="44.0841%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (176 samples, 0.61%)</title><rect x="43.2892%" y="453" width="0.6069%" height="15" fill="rgb(210,96,50)"/><text x="43.5392%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.02%)</title><rect x="43.9479%" y="421" width="0.0172%" height="15" fill="rgb(222,178,2)"/><text x="44.1979%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (6 samples, 0.02%)</title><rect x="44.4065%" y="389" width="0.0207%" height="15" fill="rgb(226,74,18)"/><text x="44.6565%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.03%)</title><rect x="44.4307%" y="389" width="0.0310%" height="15" fill="rgb(225,67,54)"/><text x="44.6807%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (59 samples, 0.20%)</title><rect x="44.4617%" y="389" width="0.2035%" height="15" fill="rgb(251,92,32)"/><text x="44.7117%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.04%)</title><rect x="44.6238%" y="373" width="0.0414%" height="15" fill="rgb(228,149,22)"/><text x="44.8738%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (204 samples, 0.70%)</title><rect x="43.9651%" y="421" width="0.7035%" height="15" fill="rgb(243,54,13)"/><text x="44.2151%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (192 samples, 0.66%)</title><rect x="44.0065%" y="405" width="0.6621%" height="15" fill="rgb(243,180,28)"/><text x="44.2565%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (219 samples, 0.76%)</title><rect x="43.9168%" y="437" width="0.7552%" height="15" fill="rgb(208,167,24)"/><text x="44.1668%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (227 samples, 0.78%)</title><rect x="43.8961%" y="453" width="0.7828%" height="15" fill="rgb(245,73,45)"/><text x="44.1461%" y="463.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (9,019 samples, 31.10%)</title><rect x="13.6182%" y="469" width="31.1021%" height="15" fill="rgb(237,203,48)"/><text x="13.8682%" y="479.50">dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="44.6927%" y="453" width="0.0276%" height="15" fill="rgb(211,197,16)"/><text x="44.9427%" y="463.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="44.7203%" y="469" width="0.0138%" height="15" fill="rgb(243,99,51)"/><text x="44.9703%" y="479.50"></text></g><g><title>dyper_ops`__rdl_dealloc (3 samples, 0.01%)</title><rect x="44.7376%" y="469" width="0.0103%" height="15" fill="rgb(215,123,29)"/><text x="44.9876%" y="479.50"></text></g><g><title>dyper_ops`alloc::fmt::format (4 samples, 0.01%)</title><rect x="44.7479%" y="469" width="0.0138%" height="15" fill="rgb(239,186,37)"/><text x="44.9979%" y="479.50"></text></g><g><title>dyper_ops`core::fmt::write (8 samples, 0.03%)</title><rect x="44.7617%" y="469" width="0.0276%" height="15" fill="rgb(252,136,39)"/><text x="45.0117%" y="479.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="44.7893%" y="469" width="0.0207%" height="15" fill="rgb(223,213,32)"/><text x="45.0393%" y="479.50"></text></g><g><title>dyper_ops`dyper_ops::extract_host (3 samples, 0.01%)</title><rect x="44.8100%" y="469" width="0.0103%" height="15" fill="rgb(233,115,5)"/><text x="45.0600%" y="479.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="44.8996%" y="453" width="0.0138%" height="15" fill="rgb(207,226,44)"/><text x="45.1496%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="45.0790%" y="421" width="0.0448%" height="15" fill="rgb(208,126,0)"/><text x="45.3290%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.03%)</title><rect x="45.0962%" y="405" width="0.0276%" height="15" fill="rgb(244,66,21)"/><text x="45.3462%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="45.0997%" y="389" width="0.0241%" height="15" fill="rgb(222,97,12)"/><text x="45.3497%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.04%)</title><rect x="45.2031%" y="389" width="0.0379%" height="15" fill="rgb(219,213,19)"/><text x="45.4531%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (30 samples, 0.10%)</title><rect x="45.1583%" y="405" width="0.1035%" height="15" fill="rgb(252,169,30)"/><text x="45.4083%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.02%)</title><rect x="45.2411%" y="389" width="0.0207%" height="15" fill="rgb(206,32,51)"/><text x="45.4911%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (41 samples, 0.14%)</title><rect x="45.1238%" y="421" width="0.1414%" height="15" fill="rgb(250,172,42)"/><text x="45.3738%" y="431.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.20%)</title><rect x="45.0755%" y="437" width="0.1966%" height="15" fill="rgb(209,34,43)"/><text x="45.3255%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="45.2928%" y="421" width="0.0103%" height="15" fill="rgb(223,11,35)"/><text x="45.5428%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.11%)</title><rect x="45.3031%" y="421" width="0.1138%" height="15" fill="rgb(251,219,26)"/><text x="45.5531%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.06%)</title><rect x="45.3617%" y="405" width="0.0552%" height="15" fill="rgb(231,119,3)"/><text x="45.6117%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.06%)</title><rect x="45.3617%" y="389" width="0.0552%" height="15" fill="rgb(216,97,11)"/><text x="45.6117%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="45.4618%" y="405" width="0.0138%" height="15" fill="rgb(223,59,9)"/><text x="45.7118%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.03%)</title><rect x="45.5169%" y="389" width="0.0310%" height="15" fill="rgb(233,93,31)"/><text x="45.7669%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.13%)</title><rect x="45.4169%" y="421" width="0.1345%" height="15" fill="rgb(239,81,33)"/><text x="45.6669%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.07%)</title><rect x="45.4790%" y="405" width="0.0724%" height="15" fill="rgb(213,120,34)"/><text x="45.7290%" y="415.50"></text></g><g><title>dyper_ops`serde_json::value::de::MapDeserializer::new (85 samples, 0.29%)</title><rect x="45.2824%" y="437" width="0.2931%" height="15" fill="rgb(243,49,53)"/><text x="45.5324%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="45.5514%" y="421" width="0.0241%" height="15" fill="rgb(247,216,33)"/><text x="45.8014%" y="431.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u32 (3 samples, 0.01%)</title><rect x="45.5756%" y="437" width="0.0103%" height="15" fill="rgb(226,26,14)"/><text x="45.8256%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (5 samples, 0.02%)</title><rect x="45.5859%" y="437" width="0.0172%" height="15" fill="rgb(215,49,53)"/><text x="45.8359%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.08%)</title><rect x="45.6100%" y="437" width="0.0759%" height="15" fill="rgb(245,162,40)"/><text x="45.8600%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (15 samples, 0.05%)</title><rect x="45.6342%" y="421" width="0.0517%" height="15" fill="rgb(229,68,17)"/><text x="45.8842%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.05%)</title><rect x="45.6376%" y="405" width="0.0483%" height="15" fill="rgb(213,182,10)"/><text x="45.8876%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.07%)</title><rect x="45.8756%" y="405" width="0.0724%" height="15" fill="rgb(245,125,30)"/><text x="46.1256%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (77 samples, 0.27%)</title><rect x="45.6859%" y="437" width="0.2655%" height="15" fill="rgb(232,202,2)"/><text x="45.9359%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.18%)</title><rect x="45.7687%" y="421" width="0.1828%" height="15" fill="rgb(237,140,51)"/><text x="46.0187%" y="431.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_object (328 samples, 1.13%)</title><rect x="44.9238%" y="453" width="1.1311%" height="15" fill="rgb(236,157,25)"/><text x="45.1738%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (30 samples, 0.10%)</title><rect x="45.9514%" y="437" width="0.1035%" height="15" fill="rgb(219,209,0)"/><text x="46.2014%" y="447.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (364 samples, 1.26%)</title><rect x="44.8410%" y="469" width="1.2553%" height="15" fill="rgb(240,116,54)"/><text x="45.0910%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.03%)</title><rect x="46.0618%" y="453" width="0.0345%" height="15" fill="rgb(216,10,36)"/><text x="46.3118%" y="463.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_object (3 samples, 0.01%)</title><rect x="46.0963%" y="469" width="0.0103%" height="15" fill="rgb(222,72,44)"/><text x="46.3463%" y="479.50"></text></g><g><title>dyper_ops`serde_json::value::to_value (4 samples, 0.01%)</title><rect x="46.1066%" y="469" width="0.0138%" height="15" fill="rgb(232,159,9)"/><text x="46.3566%" y="479.50"></text></g><g><title>dyper_ops`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.06%)</title><rect x="46.1204%" y="469" width="0.0621%" height="15" fill="rgb(210,39,32)"/><text x="46.3704%" y="479.50"></text></g><g><title>dyper_ops`std::collections::hash::map::RandomState::new::KEYS::__getit (4 samples, 0.01%)</title><rect x="46.1825%" y="469" width="0.0138%" height="15" fill="rgb(216,194,45)"/><text x="46.4325%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="46.1963%" y="469" width="0.0207%" height="15" fill="rgb(218,18,35)"/><text x="46.4463%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.01%)</title><rect x="46.2170%" y="469" width="0.0138%" height="15" fill="rgb(207,83,51)"/><text x="46.4670%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="46.2308%" y="469" width="0.0103%" height="15" fill="rgb(225,63,43)"/><text x="46.4808%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="46.2446%" y="469" width="0.0241%" height="15" fill="rgb(207,57,36)"/><text x="46.4946%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (19 samples, 0.07%)</title><rect x="46.2687%" y="469" width="0.0655%" height="15" fill="rgb(216,99,33)"/><text x="46.5187%" y="479.50"></text></g><g><title>dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,590 samples, 33.07%)</title><rect x="13.2975%" y="485" width="33.0712%" height="15" fill="rgb(225,42,16)"/><text x="13.5475%" y="495.50">dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; ..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (10 samples, 0.03%)</title><rect x="46.3342%" y="469" width="0.0345%" height="15" fill="rgb(220,201,45)"/><text x="46.5842%" y="479.50"></text></g><g><title>dyper_ops`deno_core::ops::json_serialize_op_result (4 samples, 0.01%)</title><rect x="46.3791%" y="485" width="0.0138%" height="15" fill="rgb(225,33,4)"/><text x="46.6291%" y="495.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12,186 samples, 42.02%)</title><rect x="4.4038%" y="501" width="42.0236%" height="15" fill="rgb(224,33,50)"/><text x="4.6538%" y="511.50">dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::fut..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="46.3998%" y="485" width="0.0276%" height="15" fill="rgb(246,198,51)"/><text x="46.6498%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="46.4342%" y="501" width="0.0103%" height="15" fill="rgb(205,22,4)"/><text x="46.6842%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="46.4618%" y="485" width="0.0207%" height="15" fill="rgb(206,3,8)"/><text x="46.7118%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="46.4653%" y="469" width="0.0172%" height="15" fill="rgb(251,23,15)"/><text x="46.7153%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.04%)</title><rect x="46.4446%" y="501" width="0.0414%" height="15" fill="rgb(252,88,28)"/><text x="46.6946%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="46.4998%" y="485" width="0.0138%" height="15" fill="rgb(212,127,14)"/><text x="46.7498%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.04%)</title><rect x="46.5894%" y="469" width="0.0448%" height="15" fill="rgb(247,145,37)"/><text x="46.8394%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.17%)</title><rect x="46.4860%" y="501" width="0.1655%" height="15" fill="rgb(209,117,53)"/><text x="46.7360%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.14%)</title><rect x="46.5136%" y="485" width="0.1379%" height="15" fill="rgb(212,90,42)"/><text x="46.7636%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.02%)</title><rect x="46.6343%" y="469" width="0.0172%" height="15" fill="rgb(218,164,37)"/><text x="46.8843%" y="479.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12,294 samples, 42.40%)</title><rect x="4.2589%" y="517" width="42.3960%" height="15" fill="rgb(246,65,34)"/><text x="4.5089%" y="527.50">dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::fut..</text></g><g><title>dyper_ops`core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="46.6584%" y="517" width="0.0310%" height="15" fill="rgb(231,100,33)"/><text x="46.9084%" y="527.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12,329 samples, 42.52%)</title><rect x="4.1762%" y="533" width="42.5167%" height="15" fill="rgb(228,126,14)"/><text x="4.4262%" y="543.50">dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::f..</text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="46.7998%" y="517" width="0.0379%" height="15" fill="rgb(215,173,21)"/><text x="47.0498%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="46.8170%" y="501" width="0.0207%" height="15" fill="rgb(210,6,40)"/><text x="47.0670%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.02%)</title><rect x="46.8170%" y="485" width="0.0207%" height="15" fill="rgb(212,48,18)"/><text x="47.0670%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="46.8860%" y="501" width="0.0103%" height="15" fill="rgb(230,214,11)"/><text x="47.1360%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.03%)</title><rect x="46.9274%" y="485" width="0.0345%" height="15" fill="rgb(254,105,39)"/><text x="47.1774%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.14%)</title><rect x="46.8377%" y="517" width="0.1379%" height="15" fill="rgb(245,158,5)"/><text x="47.0877%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.08%)</title><rect x="46.8963%" y="501" width="0.0793%" height="15" fill="rgb(249,208,11)"/><text x="47.1463%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.01%)</title><rect x="46.9619%" y="485" width="0.0138%" height="15" fill="rgb(210,39,28)"/><text x="47.2119%" y="495.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (81 samples, 0.28%)</title><rect x="46.6998%" y="533" width="0.2793%" height="15" fill="rgb(211,56,53)"/><text x="46.9498%" y="543.50"></text></g><g><title>dyper_ops`tokio::util::wake::clone_arc_raw (7 samples, 0.02%)</title><rect x="47.0412%" y="517" width="0.0241%" height="15" fill="rgb(226,201,30)"/><text x="47.2912%" y="527.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::register (31 samples, 0.11%)</title><rect x="46.9791%" y="533" width="0.1069%" height="15" fill="rgb(239,101,34)"/><text x="47.2291%" y="543.50"></text></g><g><title>dyper_ops`tokio::util::wake::drop_arc_raw (6 samples, 0.02%)</title><rect x="47.0653%" y="517" width="0.0207%" height="15" fill="rgb(226,209,5)"/><text x="47.3153%" y="527.50"></text></g><g><title>dyper_ops`tokio::util::wake::clone_arc_raw (3 samples, 0.01%)</title><rect x="47.0860%" y="533" width="0.0103%" height="15" fill="rgb(250,105,47)"/><text x="47.3360%" y="543.50"></text></g><g><title>dyper_ops`futures_util::stream::stream::StreamExt::poll_next_unpin (12,542 samples, 43.25%)</title><rect x="3.8520%" y="549" width="43.2513%" height="15" fill="rgb(230,72,3)"/><text x="4.1020%" y="559.50">dyper_ops`futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>dyper_ops`v8::Context::Global (5 samples, 0.02%)</title><rect x="47.1101%" y="533" width="0.0172%" height="15" fill="rgb(232,218,39)"/><text x="47.3601%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::PrototypeIterator::Advance (3 samples, 0.01%)</title><rect x="47.1170%" y="517" width="0.0103%" height="15" fill="rgb(248,166,6)"/><text x="47.3670%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::Context::global_proxy (3 samples, 0.01%)</title><rect x="47.1308%" y="533" width="0.0103%" height="15" fill="rgb(247,89,20)"/><text x="47.3808%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::context::_&lt;impl rusty_v8::data::Context&gt;::global (13 samples, 0.04%)</title><rect x="47.1067%" y="549" width="0.0448%" height="15" fill="rgb(248,130,54)"/><text x="47.3567%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::PrototypeIterator::Advance (3 samples, 0.01%)</title><rect x="47.1412%" y="533" width="0.0103%" height="15" fill="rgb(234,196,4)"/><text x="47.3912%" y="543.50"></text></g><g><title>dyper_ops`v8::(anonymous namespace)::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (4 samples, 0.01%)</title><rect x="47.1584%" y="533" width="0.0138%" height="15" fill="rgb(250,143,31)"/><text x="47.4084%" y="543.50"></text></g><g><title>dyper_ops`v8::(anonymous namespace)::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (6 samples, 0.02%)</title><rect x="47.2205%" y="517" width="0.0207%" height="15" fill="rgb(211,110,34)"/><text x="47.4705%" y="527.50"></text></g><g><title>dyper_ops`Builtins_JSEntry (4 samples, 0.01%)</title><rect x="47.2619%" y="501" width="0.0138%" height="15" fill="rgb(215,124,48)"/><text x="47.5119%" y="511.50"></text></g><g><title>0x1554000888a0 (3 samples, 0.01%)</title><rect x="47.4033%" y="469" width="0.0103%" height="15" fill="rgb(216,46,13)"/><text x="47.6533%" y="479.50"></text></g><g><title>0x1554000888aa (3 samples, 0.01%)</title><rect x="47.4171%" y="469" width="0.0103%" height="15" fill="rgb(205,184,25)"/><text x="47.6671%" y="479.50"></text></g><g><title>dyper_ops`Builtins_CallFunction_ReceiverIsAny (15 samples, 0.05%)</title><rect x="47.4274%" y="469" width="0.0517%" height="15" fill="rgb(228,1,10)"/><text x="47.6774%" y="479.50"></text></g><g><title>0x15540008894e (3 samples, 0.01%)</title><rect x="47.4998%" y="453" width="0.0103%" height="15" fill="rgb(213,116,27)"/><text x="47.7498%" y="463.50"></text></g><g><title>0x1554000889a5 (5 samples, 0.02%)</title><rect x="47.5309%" y="453" width="0.0172%" height="15" fill="rgb(241,95,50)"/><text x="47.7809%" y="463.50"></text></g><g><title>0x155400088dec (64 samples, 0.22%)</title><rect x="47.6619%" y="453" width="0.2207%" height="15" fill="rgb(238,48,32)"/><text x="47.9119%" y="463.50"></text></g><g><title>dyper_ops`Builtins_TypedArrayPrototypeSubArray (63 samples, 0.22%)</title><rect x="47.6654%" y="437" width="0.2173%" height="15" fill="rgb(235,113,49)"/><text x="47.9154%" y="447.50"></text></g><g><title>dyper_ops`Builtins_CreateTypedArray (36 samples, 0.12%)</title><rect x="47.7585%" y="421" width="0.1241%" height="15" fill="rgb(205,127,43)"/><text x="48.0085%" y="431.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (4 samples, 0.01%)</title><rect x="47.8688%" y="405" width="0.0138%" height="15" fill="rgb(250,162,2)"/><text x="48.1188%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (4 samples, 0.01%)</title><rect x="47.8688%" y="389" width="0.0138%" height="15" fill="rgb(220,13,41)"/><text x="48.1188%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (4 samples, 0.01%)</title><rect x="47.8688%" y="373" width="0.0138%" height="15" fill="rgb(249,221,25)"/><text x="48.1188%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.01%)</title><rect x="47.8688%" y="357" width="0.0138%" height="15" fill="rgb(215,208,19)"/><text x="48.1188%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.01%)</title><rect x="47.8688%" y="341" width="0.0138%" height="15" fill="rgb(236,175,2)"/><text x="48.1188%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (4 samples, 0.01%)</title><rect x="47.8688%" y="325" width="0.0138%" height="15" fill="rgb(241,52,2)"/><text x="48.1188%" y="335.50"></text></g><g><title>0x155400088ec1 (5 samples, 0.02%)</title><rect x="47.9033%" y="453" width="0.0172%" height="15" fill="rgb(248,140,14)"/><text x="48.1533%" y="463.50"></text></g><g><title>0x155400088fe7 (9 samples, 0.03%)</title><rect x="47.9343%" y="453" width="0.0310%" height="15" fill="rgb(253,22,42)"/><text x="48.1843%" y="463.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (9 samples, 0.03%)</title><rect x="47.9343%" y="437" width="0.0310%" height="15" fill="rgb(234,61,47)"/><text x="48.1843%" y="447.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.01%)</title><rect x="47.9688%" y="437" width="0.0103%" height="15" fill="rgb(208,226,15)"/><text x="48.2188%" y="447.50"></text></g><g><title>dyper_ops`&lt;&amp;rusty_v8::function::FunctionCallbackInfo as rusty_v8::scope::getter::GetIsolate&gt;::get_isolate_mut (4 samples, 0.01%)</title><rect x="47.9930%" y="421" width="0.0138%" height="15" fill="rgb(217,221,4)"/><text x="48.2430%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (31 samples, 0.11%)</title><rect x="48.1757%" y="309" width="0.1069%" height="15" fill="rgb(212,174,34)"/><text x="48.4257%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (33 samples, 0.11%)</title><rect x="48.1757%" y="325" width="0.1138%" height="15" fill="rgb(253,83,4)"/><text x="48.4257%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::GlobalBackingStoreRegistry::Register(std::__1::shared_ptr (41 samples, 0.14%)</title><rect x="48.1585%" y="341" width="0.1414%" height="15" fill="rgb(250,195,49)"/><text x="48.4085%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.01%)</title><rect x="48.2895%" y="325" width="0.0103%" height="15" fill="rgb(241,192,25)"/><text x="48.5395%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.01%)</title><rect x="48.2895%" y="309" width="0.0103%" height="15" fill="rgb(208,124,10)"/><text x="48.5395%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::GetBackingStore (12 samples, 0.04%)</title><rect x="48.2999%" y="341" width="0.0414%" height="15" fill="rgb(222,33,0)"/><text x="48.5499%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (8 samples, 0.03%)</title><rect x="48.3413%" y="341" width="0.0276%" height="15" fill="rgb(234,209,28)"/><text x="48.5913%" y="351.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::GetBackingStore (94 samples, 0.32%)</title><rect x="48.0792%" y="357" width="0.3242%" height="15" fill="rgb(224,11,23)"/><text x="48.3292%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (10 samples, 0.03%)</title><rect x="48.3689%" y="341" width="0.0345%" height="15" fill="rgb(232,99,1)"/><text x="48.6189%" y="351.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::get_backing_store (97 samples, 0.33%)</title><rect x="48.0723%" y="389" width="0.3345%" height="15" fill="rgb(237,95,45)"/><text x="48.3223%" y="399.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__GetBackingStore (96 samples, 0.33%)</title><rect x="48.0757%" y="373" width="0.3311%" height="15" fill="rgb(208,109,11)"/><text x="48.3257%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (3 samples, 0.01%)</title><rect x="48.4896%" y="341" width="0.0103%" height="15" fill="rgb(216,190,48)"/><text x="48.7396%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (6 samples, 0.02%)</title><rect x="48.5171%" y="325" width="0.0207%" height="15" fill="rgb(251,171,36)"/><text x="48.7671%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (11 samples, 0.04%)</title><rect x="48.5551%" y="293" width="0.0379%" height="15" fill="rgb(230,62,22)"/><text x="48.8051%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (19 samples, 0.07%)</title><rect x="48.5447%" y="325" width="0.0655%" height="15" fill="rgb(225,114,35)"/><text x="48.7947%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (17 samples, 0.06%)</title><rect x="48.5516%" y="309" width="0.0586%" height="15" fill="rgb(215,118,42)"/><text x="48.8016%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (5 samples, 0.02%)</title><rect x="48.5930%" y="293" width="0.0172%" height="15" fill="rgb(243,119,21)"/><text x="48.8430%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (5 samples, 0.02%)</title><rect x="48.5930%" y="277" width="0.0172%" height="15" fill="rgb(252,177,53)"/><text x="48.8430%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (5 samples, 0.02%)</title><rect x="48.5930%" y="261" width="0.0172%" height="15" fill="rgb(237,209,29)"/><text x="48.8430%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (5 samples, 0.02%)</title><rect x="48.5930%" y="245" width="0.0172%" height="15" fill="rgb(212,65,23)"/><text x="48.8430%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (33 samples, 0.11%)</title><rect x="48.4999%" y="341" width="0.1138%" height="15" fill="rgb(230,222,46)"/><text x="48.7499%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (10 samples, 0.03%)</title><rect x="48.6137%" y="341" width="0.0345%" height="15" fill="rgb(215,135,32)"/><text x="48.8637%" y="351.50"></text></g><g><title>dyper_ops`void v8::internal::Utf8Decoder::Decode&lt;unsigned char&gt;(unsigned char*, v8::internal::Vector (10 samples, 0.03%)</title><rect x="48.6482%" y="341" width="0.0345%" height="15" fill="rgb(246,101,22)"/><text x="48.8982%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="48.6585%" y="325" width="0.0241%" height="15" fill="rgb(206,107,13)"/><text x="48.9085%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewStringFromUtf8(v8::internal::Vector (66 samples, 0.23%)</title><rect x="48.4620%" y="357" width="0.2276%" height="15" fill="rgb(250,100,44)"/><text x="48.7120%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (3 samples, 0.01%)</title><rect x="48.6965%" y="357" width="0.0103%" height="15" fill="rgb(231,147,38)"/><text x="48.9465%" y="367.50"></text></g><g><title>dyper_ops`v8::String::NewFromUtf8 (81 samples, 0.28%)</title><rect x="48.4378%" y="373" width="0.2793%" height="15" fill="rgb(229,8,40)"/><text x="48.6878%" y="383.50"></text></g><g><title>dyper_ops`void v8::internal::Utf8Decoder::Decode&lt;unsigned char&gt;(unsigned char*, v8::internal::Vector (3 samples, 0.01%)</title><rect x="48.7068%" y="357" width="0.0103%" height="15" fill="rgb(221,135,30)"/><text x="48.9568%" y="367.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new_from_utf8 (89 samples, 0.31%)</title><rect x="48.4240%" y="389" width="0.3069%" height="15" fill="rgb(249,193,18)"/><text x="48.6740%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewStringFromUtf8(v8::internal::Vector (4 samples, 0.01%)</title><rect x="48.7172%" y="373" width="0.0138%" height="15" fill="rgb(209,133,39)"/><text x="48.9672%" y="383.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__reset (11 samples, 0.04%)</title><rect x="48.7309%" y="389" width="0.0379%" height="15" fill="rgb(232,100,14)"/><text x="48.9809%" y="399.50"></text></g><g><title>dyper_ops`v8::ArrayBufferView::Buffer (8 samples, 0.03%)</title><rect x="48.7689%" y="389" width="0.0276%" height="15" fill="rgb(224,185,1)"/><text x="49.0189%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::JSTypedArray::GetBuffer (4 samples, 0.01%)</title><rect x="48.7827%" y="373" width="0.0138%" height="15" fill="rgb(223,139,8)"/><text x="49.0327%" y="383.50"></text></g><g><title>dyper_ops`v8::Value::IsArrayBufferView (3 samples, 0.01%)</title><rect x="48.8068%" y="389" width="0.0103%" height="15" fill="rgb(232,213,38)"/><text x="49.0568%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::JSTypedArray::GetBuffer (4 samples, 0.01%)</title><rect x="48.8172%" y="389" width="0.0138%" height="15" fill="rgb(207,94,22)"/><text x="49.0672%" y="399.50"></text></g><g><title>dyper_ops`deno_core::bindings::decode (236 samples, 0.81%)</title><rect x="48.0412%" y="405" width="0.8138%" height="15" fill="rgb(219,183,54)"/><text x="48.2912%" y="415.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer_view::_&lt;impl rusty_v8::data::ArrayBufferView&gt;::buffer (4 samples, 0.01%)</title><rect x="48.8585%" y="405" width="0.0138%" height="15" fill="rgb(216,185,54)"/><text x="49.1085%" y="415.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::From&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Map&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Data&gt;&gt;::from (3 samples, 0.01%)</title><rect x="48.8723%" y="405" width="0.0103%" height="15" fill="rgb(254,217,39)"/><text x="49.1223%" y="415.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_callback_scope_data (10 samples, 0.03%)</title><rect x="48.8999%" y="405" width="0.0345%" height="15" fill="rgb(240,178,23)"/><text x="49.1499%" y="415.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (6 samples, 0.02%)</title><rect x="48.9344%" y="405" width="0.0207%" height="15" fill="rgb(218,11,47)"/><text x="49.1844%" y="415.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="48.9448%" y="389" width="0.0103%" height="15" fill="rgb(218,51,51)"/><text x="49.1948%" y="399.50"></text></g><g><title>dyper_ops`v8__ArrayBufferView__Buffer (3 samples, 0.01%)</title><rect x="48.9689%" y="405" width="0.0103%" height="15" fill="rgb(238,126,27)"/><text x="49.2189%" y="415.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (283 samples, 0.98%)</title><rect x="48.0068%" y="421" width="0.9759%" height="15" fill="rgb(249,202,22)"/><text x="48.2568%" y="431.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::get_current_mut (6 samples, 0.02%)</title><rect x="48.9896%" y="421" width="0.0207%" height="15" fill="rgb(254,195,49)"/><text x="49.2396%" y="431.50"></text></g><g><title>0x155400089034 (306 samples, 1.06%)</title><rect x="47.9688%" y="453" width="1.0552%" height="15" fill="rgb(208,123,14)"/><text x="48.2188%" y="463.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (303 samples, 1.04%)</title><rect x="47.9792%" y="437" width="1.0449%" height="15" fill="rgb(224,200,8)"/><text x="48.2292%" y="447.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.01%)</title><rect x="49.0137%" y="421" width="0.0103%" height="15" fill="rgb(217,61,36)"/><text x="49.2637%" y="431.50"></text></g><g><title>0x155400089052 (3 samples, 0.01%)</title><rect x="49.0310%" y="453" width="0.0103%" height="15" fill="rgb(206,35,45)"/><text x="49.2810%" y="463.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AddGCEpilogueCallback(void (*) (3 samples, 0.01%)</title><rect x="49.0758%" y="405" width="0.0103%" height="15" fill="rgb(217,65,33)"/><text x="49.3258%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::Heap::RemoveGCEpilogueCallback(void (*) (3 samples, 0.01%)</title><rect x="49.0861%" y="405" width="0.0103%" height="15" fill="rgb(222,158,48)"/><text x="49.3361%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::JsonParser(v8::internal::Isolate*, v8::internal::Handle (10 samples, 0.03%)</title><rect x="49.0965%" y="405" width="0.0345%" height="15" fill="rgb(254,2,54)"/><text x="49.3465%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::BuildJsonArray(v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation const&amp;, std::__1::vector&lt;v8::internal::Handle&lt;v8::internal::Object&gt;, std::__1::allocator&lt;v8::internal::Handle (6 samples, 0.02%)</title><rect x="49.1517%" y="389" width="0.0207%" height="15" fill="rgb(250,143,38)"/><text x="49.4017%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="49.6862%" y="325" width="0.0103%" height="15" fill="rgb(248,25,0)"/><text x="49.9362%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.03%)</title><rect x="49.8345%" y="293" width="0.0310%" height="15" fill="rgb(206,152,27)"/><text x="50.0845%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (67 samples, 0.23%)</title><rect x="49.6965%" y="325" width="0.2311%" height="15" fill="rgb(240,77,30)"/><text x="49.9465%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 0.23%)</title><rect x="49.6965%" y="309" width="0.2311%" height="15" fill="rgb(231,5,3)"/><text x="49.9465%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.06%)</title><rect x="49.8724%" y="293" width="0.0552%" height="15" fill="rgb(207,226,32)"/><text x="50.1224%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="49.9069%" y="277" width="0.0207%" height="15" fill="rgb(222,207,47)"/><text x="50.1569%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (77 samples, 0.27%)</title><rect x="49.6655%" y="357" width="0.2655%" height="15" fill="rgb(229,115,45)"/><text x="49.9155%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (74 samples, 0.26%)</title><rect x="49.6758%" y="341" width="0.2552%" height="15" fill="rgb(224,191,6)"/><text x="49.9258%" y="351.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (79 samples, 0.27%)</title><rect x="49.6620%" y="373" width="0.2724%" height="15" fill="rgb(230,227,24)"/><text x="49.9120%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.04%)</title><rect x="49.9517%" y="309" width="0.0414%" height="15" fill="rgb(228,80,19)"/><text x="50.2017%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="50.0897%" y="277" width="0.0207%" height="15" fill="rgb(247,229,0)"/><text x="50.3397%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (63 samples, 0.22%)</title><rect x="49.9414%" y="325" width="0.2173%" height="15" fill="rgb(237,194,15)"/><text x="50.1914%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.17%)</title><rect x="49.9931%" y="309" width="0.1655%" height="15" fill="rgb(219,203,20)"/><text x="50.2431%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.15%)</title><rect x="50.0103%" y="293" width="0.1483%" height="15" fill="rgb(234,128,8)"/><text x="50.2603%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.05%)</title><rect x="50.1104%" y="277" width="0.0483%" height="15" fill="rgb(248,202,8)"/><text x="50.3604%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.03%)</title><rect x="50.1310%" y="261" width="0.0276%" height="15" fill="rgb(206,104,37)"/><text x="50.3810%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (64 samples, 0.22%)</title><rect x="49.9414%" y="341" width="0.2207%" height="15" fill="rgb(223,8,27)"/><text x="50.1914%" y="351.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (67 samples, 0.23%)</title><rect x="49.9379%" y="357" width="0.2311%" height="15" fill="rgb(216,217,28)"/><text x="50.1879%" y="367.50"></text></g><g><title>dyper_ops`std::__1::vector&lt;v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation, std::__1::allocator&lt;v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation&gt; &gt;::reserve (71 samples, 0.24%)</title><rect x="49.9345%" y="373" width="0.2448%" height="15" fill="rgb(249,199,1)"/><text x="50.1845%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="50.1690%" y="357" width="0.0103%" height="15" fill="rgb(240,85,17)"/><text x="50.4190%" y="367.50"></text></g><g><title>dyper_ops`std::__1::vector&lt;v8::internal::JsonProperty, std::__1::allocator&lt;v8::internal::JsonProperty&gt; &gt;::resize (5 samples, 0.02%)</title><rect x="50.1793%" y="373" width="0.0172%" height="15" fill="rgb(206,108,45)"/><text x="50.4293%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (5 samples, 0.02%)</title><rect x="50.2000%" y="373" width="0.0172%" height="15" fill="rgb(245,210,41)"/><text x="50.4500%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Factory::ObjectLiteralMapFromCache(v8::internal::Handle (6 samples, 0.02%)</title><rect x="50.2173%" y="373" width="0.0207%" height="15" fill="rgb(206,13,37)"/><text x="50.4673%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::JsonParser&lt;unsigned char&gt;::DecodeString&lt;v8::internal::SeqOneByteString&gt;(v8::internal::JsonString const&amp;, v8::internal::Handle&lt;v8::internal::SeqOneByteString&gt;, v8::internal::Handle (7 samples, 0.02%)</title><rect x="50.2552%" y="373" width="0.0241%" height="15" fill="rgb(250,61,18)"/><text x="50.5052%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="50.2655%" y="357" width="0.0138%" height="15" fill="rgb(235,172,48)"/><text x="50.5155%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayStorage (3 samples, 0.01%)</title><rect x="50.3552%" y="341" width="0.0103%" height="15" fill="rgb(249,201,17)"/><text x="50.6052%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (8 samples, 0.03%)</title><rect x="50.4897%" y="277" width="0.0276%" height="15" fill="rgb(219,208,6)"/><text x="50.7397%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (29 samples, 0.10%)</title><rect x="50.4414%" y="325" width="0.1000%" height="15" fill="rgb(248,31,23)"/><text x="50.6914%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (20 samples, 0.07%)</title><rect x="50.4724%" y="309" width="0.0690%" height="15" fill="rgb(245,15,42)"/><text x="50.7224%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (16 samples, 0.06%)</title><rect x="50.4862%" y="293" width="0.0552%" height="15" fill="rgb(222,217,39)"/><text x="50.7362%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (7 samples, 0.02%)</title><rect x="50.5173%" y="277" width="0.0241%" height="15" fill="rgb(210,219,27)"/><text x="50.7673%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (6 samples, 0.02%)</title><rect x="50.5207%" y="261" width="0.0207%" height="15" fill="rgb(252,166,36)"/><text x="50.7707%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (5 samples, 0.02%)</title><rect x="50.5242%" y="245" width="0.0172%" height="15" fill="rgb(245,132,34)"/><text x="50.7742%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (4 samples, 0.01%)</title><rect x="50.5276%" y="229" width="0.0138%" height="15" fill="rgb(236,54,3)"/><text x="50.7776%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (7 samples, 0.02%)</title><rect x="50.5414%" y="325" width="0.0241%" height="15" fill="rgb(241,173,43)"/><text x="50.7914%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (13 samples, 0.04%)</title><rect x="50.5656%" y="325" width="0.0448%" height="15" fill="rgb(215,190,9)"/><text x="50.8156%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (73 samples, 0.25%)</title><rect x="50.3655%" y="341" width="0.2517%" height="15" fill="rgb(242,101,16)"/><text x="50.6155%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (6 samples, 0.02%)</title><rect x="50.6449%" y="325" width="0.0207%" height="15" fill="rgb(223,190,21)"/><text x="50.8949%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (5 samples, 0.02%)</title><rect x="50.6759%" y="293" width="0.0172%" height="15" fill="rgb(215,228,25)"/><text x="50.9259%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (24 samples, 0.08%)</title><rect x="50.6173%" y="341" width="0.0828%" height="15" fill="rgb(225,36,22)"/><text x="50.8673%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (10 samples, 0.03%)</title><rect x="50.6656%" y="325" width="0.0345%" height="15" fill="rgb(251,106,46)"/><text x="50.9156%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (9 samples, 0.03%)</title><rect x="50.6690%" y="309" width="0.0310%" height="15" fill="rgb(208,90,1)"/><text x="50.9190%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArray (108 samples, 0.37%)</title><rect x="50.3311%" y="357" width="0.3724%" height="15" fill="rgb(243,10,4)"/><text x="50.5811%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::BuildJsonArray(v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation const&amp;, std::__1::vector&lt;v8::internal::Handle&lt;v8::internal::Object&gt;, std::__1::allocator&lt;v8::internal::Handle (126 samples, 0.43%)</title><rect x="50.2793%" y="373" width="0.4345%" height="15" fill="rgb(212,137,27)"/><text x="50.5293%" y="383.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)0, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)0, unsigned char&gt;(v8::internal::Vector (5 samples, 0.02%)</title><rect x="51.1346%" y="357" width="0.0172%" height="15" fill="rgb(231,220,49)"/><text x="51.3846%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (5 samples, 0.02%)</title><rect x="51.2070%" y="293" width="0.0172%" height="15" fill="rgb(237,96,20)"/><text x="51.4570%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.03%)</title><rect x="51.2001%" y="325" width="0.0276%" height="15" fill="rgb(239,229,30)"/><text x="51.4501%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (6 samples, 0.02%)</title><rect x="51.2070%" y="309" width="0.0207%" height="15" fill="rgb(219,65,33)"/><text x="51.4570%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (17 samples, 0.06%)</title><rect x="51.1725%" y="341" width="0.0586%" height="15" fill="rgb(243,134,7)"/><text x="51.4225%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="51.2311%" y="341" width="0.0207%" height="15" fill="rgb(216,177,54)"/><text x="51.4811%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (34 samples, 0.12%)</title><rect x="51.1587%" y="357" width="0.1172%" height="15" fill="rgb(211,160,20)"/><text x="51.4087%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (7 samples, 0.02%)</title><rect x="51.2518%" y="341" width="0.0241%" height="15" fill="rgb(239,85,39)"/><text x="51.5018%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Factory::ObjectLiteralMapFromCache(v8::internal::Handle (14 samples, 0.05%)</title><rect x="51.2760%" y="357" width="0.0483%" height="15" fill="rgb(232,125,22)"/><text x="51.5260%" y="367.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)0, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)0, unsigned char&gt;(v8::internal::Vector (5 samples, 0.02%)</title><rect x="51.3794%" y="341" width="0.0172%" height="15" fill="rgb(244,57,34)"/><text x="51.6294%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.01%)</title><rect x="51.3863%" y="325" width="0.0103%" height="15" fill="rgb(214,203,32)"/><text x="51.6363%" y="335.50"></text></g><g><title>dyper_ops`unsigned int v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (9 samples, 0.03%)</title><rect x="51.4070%" y="325" width="0.0310%" height="15" fill="rgb(207,58,43)"/><text x="51.6570%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SeqSubStringKey (21 samples, 0.07%)</title><rect x="51.4380%" y="325" width="0.0724%" height="15" fill="rgb(215,193,15)"/><text x="51.6880%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt; &gt;(v8::internal::Isolate*, v8::internal::SeqSubStringKey (18 samples, 0.06%)</title><rect x="51.4484%" y="309" width="0.0621%" height="15" fill="rgb(232,15,44)"/><text x="51.6984%" y="319.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector (7 samples, 0.02%)</title><rect x="51.4863%" y="293" width="0.0241%" height="15" fill="rgb(212,3,48)"/><text x="51.7363%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::Factory::InternalizeString&lt;v8::internal::SeqOneByteString&gt;(v8::internal::Handle (34 samples, 0.12%)</title><rect x="51.3966%" y="341" width="0.1172%" height="15" fill="rgb(218,128,7)"/><text x="51.6466%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::MakeString(v8::internal::JsonString const&amp;, v8::internal::Handle (56 samples, 0.19%)</title><rect x="51.3311%" y="357" width="0.1931%" height="15" fill="rgb(226,216,39)"/><text x="51.5811%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::ExpectedTransitionKey (28 samples, 0.10%)</title><rect x="51.5311%" y="357" width="0.0966%" height="15" fill="rgb(243,47,51)"/><text x="51.7811%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::TransitionArray::SearchAndGetTarget (7 samples, 0.02%)</title><rect x="51.6794%" y="325" width="0.0241%" height="15" fill="rgb(241,183,40)"/><text x="51.9294%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::FindTransitionToDataProperty(v8::internal::Handle (32 samples, 0.11%)</title><rect x="51.6277%" y="357" width="0.1104%" height="15" fill="rgb(231,217,32)"/><text x="51.8777%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::SearchTransition (24 samples, 0.08%)</title><rect x="51.6553%" y="341" width="0.0828%" height="15" fill="rgb(229,61,38)"/><text x="51.9053%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::TransitionArray::SearchDetailsAndGetTarget (10 samples, 0.03%)</title><rect x="51.7036%" y="325" width="0.0345%" height="15" fill="rgb(225,210,5)"/><text x="51.9536%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::BuildJsonObject(v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation const&amp;, std::__1::vector&lt;v8::internal::JsonProperty, std::__1::allocator&lt;v8::internal::JsonProperty&gt; &gt; const&amp;, v8::internal::Handle (299 samples, 1.03%)</title><rect x="50.7138%" y="373" width="1.0311%" height="15" fill="rgb(231,79,45)"/><text x="50.9638%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (5 samples, 0.02%)</title><rect x="51.8312%" y="341" width="0.0172%" height="15" fill="rgb(224,100,7)"/><text x="52.0812%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (12 samples, 0.04%)</title><rect x="51.8725%" y="309" width="0.0414%" height="15" fill="rgb(241,198,18)"/><text x="52.1225%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (38 samples, 0.13%)</title><rect x="51.7898%" y="357" width="0.1310%" height="15" fill="rgb(252,97,53)"/><text x="52.0398%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (21 samples, 0.07%)</title><rect x="51.8484%" y="341" width="0.0724%" height="15" fill="rgb(220,88,7)"/><text x="52.0984%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (17 samples, 0.06%)</title><rect x="51.8622%" y="325" width="0.0586%" height="15" fill="rgb(213,176,14)"/><text x="52.1122%" y="335.50"></text></g><g><title>dyper_ops`unsigned int v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (13 samples, 0.04%)</title><rect x="51.9243%" y="341" width="0.0448%" height="15" fill="rgb(246,73,7)"/><text x="52.1743%" y="351.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector (4 samples, 0.01%)</title><rect x="52.1243%" y="309" width="0.0138%" height="15" fill="rgb(245,64,36)"/><text x="52.3743%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.01%)</title><rect x="52.1277%" y="293" width="0.0103%" height="15" fill="rgb(245,80,10)"/><text x="52.3777%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SeqSubStringKey (52 samples, 0.18%)</title><rect x="51.9760%" y="341" width="0.1793%" height="15" fill="rgb(232,107,50)"/><text x="52.2260%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt; &gt;(v8::internal::Isolate*, v8::internal::SeqSubStringKey (42 samples, 0.14%)</title><rect x="52.0105%" y="325" width="0.1448%" height="15" fill="rgb(253,3,0)"/><text x="52.2605%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.02%)</title><rect x="52.1381%" y="309" width="0.0172%" height="15" fill="rgb(212,99,53)"/><text x="52.3881%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::Factory::InternalizeString&lt;v8::internal::SeqOneByteString&gt;(v8::internal::Handle (69 samples, 0.24%)</title><rect x="51.9208%" y="357" width="0.2379%" height="15" fill="rgb(249,111,54)"/><text x="52.1708%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::MakeString(v8::internal::JsonString const&amp;, v8::internal::Handle (122 samples, 0.42%)</title><rect x="51.7449%" y="373" width="0.4207%" height="15" fill="rgb(249,55,30)"/><text x="51.9949%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonNumber (7 samples, 0.02%)</title><rect x="52.1657%" y="373" width="0.0241%" height="15" fill="rgb(237,47,42)"/><text x="52.4157%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ScanJsonPropertyKey(v8::internal::JsonParser (40 samples, 0.14%)</title><rect x="52.1898%" y="373" width="0.1379%" height="15" fill="rgb(211,20,18)"/><text x="52.4398%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ScanJsonString (29 samples, 0.10%)</title><rect x="52.2277%" y="357" width="0.1000%" height="15" fill="rgb(231,203,46)"/><text x="52.4777%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ScanJsonString (24 samples, 0.08%)</title><rect x="52.3277%" y="373" width="0.0828%" height="15" fill="rgb(237,142,3)"/><text x="52.5777%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Map::UnwrapFieldType (7 samples, 0.02%)</title><rect x="52.4105%" y="373" width="0.0241%" height="15" fill="rgb(241,107,1)"/><text x="52.6605%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::FindTransitionToDataProperty(v8::internal::Handle (5 samples, 0.02%)</title><rect x="52.4381%" y="373" width="0.0172%" height="15" fill="rgb(229,83,13)"/><text x="52.6881%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.07%)</title><rect x="52.4829%" y="357" width="0.0655%" height="15" fill="rgb(241,91,40)"/><text x="52.7329%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.06%)</title><rect x="52.4898%" y="341" width="0.0586%" height="15" fill="rgb(225,3,45)"/><text x="52.7398%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.09%)</title><rect x="52.4657%" y="373" width="0.0862%" height="15" fill="rgb(244,223,14)"/><text x="52.7157%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="52.6174%" y="357" width="0.0103%" height="15" fill="rgb(224,124,37)"/><text x="52.8674%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.05%)</title><rect x="52.7243%" y="341" width="0.0483%" height="15" fill="rgb(251,171,30)"/><text x="52.9743%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (76 samples, 0.26%)</title><rect x="52.5519%" y="373" width="0.2621%" height="15" fill="rgb(236,46,54)"/><text x="52.8019%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (54 samples, 0.19%)</title><rect x="52.6278%" y="357" width="0.1862%" height="15" fill="rgb(245,213,5)"/><text x="52.8778%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.04%)</title><rect x="52.7726%" y="341" width="0.0414%" height="15" fill="rgb(230,144,27)"/><text x="53.0226%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.02%)</title><rect x="52.8140%" y="373" width="0.0172%" height="15" fill="rgb(220,86,6)"/><text x="53.0640%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue (1,061 samples, 3.66%)</title><rect x="49.1827%" y="389" width="3.6589%" height="15" fill="rgb(240,20,13)"/><text x="49.4327%" y="399.50">dype..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="52.8312%" y="373" width="0.0103%" height="15" fill="rgb(217,89,34)"/><text x="53.0812%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ScanJsonPropertyKey(v8::internal::JsonParser (3 samples, 0.01%)</title><rect x="52.8416%" y="389" width="0.0103%" height="15" fill="rgb(229,13,5)"/><text x="53.0916%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (1,084 samples, 3.74%)</title><rect x="49.1310%" y="405" width="3.7382%" height="15" fill="rgb(244,67,35)"/><text x="49.3810%" y="415.50">dype..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (4 samples, 0.01%)</title><rect x="52.8554%" y="389" width="0.0138%" height="15" fill="rgb(221,40,2)"/><text x="53.1054%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_JsonParse (1,111 samples, 3.83%)</title><rect x="49.0517%" y="421" width="3.8313%" height="15" fill="rgb(237,157,21)"/><text x="49.3017%" y="431.50">dype..</text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="52.8726%" y="405" width="0.0103%" height="15" fill="rgb(222,94,11)"/><text x="53.1226%" y="415.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1,117 samples, 3.85%)</title><rect x="49.0482%" y="437" width="3.8520%" height="15" fill="rgb(249,113,6)"/><text x="49.2982%" y="447.50">dype..</text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::JsonParser(v8::internal::Isolate*, v8::internal::Handle (4 samples, 0.01%)</title><rect x="52.8864%" y="421" width="0.0138%" height="15" fill="rgb(238,137,36)"/><text x="53.1364%" y="431.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_JsonParse (4 samples, 0.01%)</title><rect x="52.9002%" y="437" width="0.0138%" height="15" fill="rgb(210,102,26)"/><text x="53.1502%" y="447.50"></text></g><g><title>0x155400089090 (1,124 samples, 3.88%)</title><rect x="49.0482%" y="453" width="3.8761%" height="15" fill="rgb(218,30,30)"/><text x="49.2982%" y="463.50">0x15..</text></g><g><title>dyper_ops`v8::internal::Builtin_JsonParse (3 samples, 0.01%)</title><rect x="52.9140%" y="437" width="0.0103%" height="15" fill="rgb(214,67,26)"/><text x="53.1640%" y="447.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC (44 samples, 0.15%)</title><rect x="52.9278%" y="437" width="0.1517%" height="15" fill="rgb(251,9,53)"/><text x="53.1778%" y="447.50"></text></g><g><title>dyper_ops`v8::internal::ComputeSeededIntegerHash (4 samples, 0.01%)</title><rect x="53.0657%" y="421" width="0.0138%" height="15" fill="rgb(228,204,25)"/><text x="53.3157%" y="431.50"></text></g><g><title>0x1554000890ef (46 samples, 0.16%)</title><rect x="52.9278%" y="453" width="0.1586%" height="15" fill="rgb(207,153,8)"/><text x="53.1778%" y="463.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (6 samples, 0.02%)</title><rect x="53.1278%" y="405" width="0.0207%" height="15" fill="rgb(242,9,16)"/><text x="53.3778%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::SetEntry (6 samples, 0.02%)</title><rect x="53.2933%" y="325" width="0.0207%" height="15" fill="rgb(217,211,10)"/><text x="53.5433%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (6 samples, 0.02%)</title><rect x="53.3485%" y="309" width="0.0207%" height="15" fill="rgb(219,228,52)"/><text x="53.5985%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (3 samples, 0.01%)</title><rect x="53.3589%" y="293" width="0.0103%" height="15" fill="rgb(231,92,29)"/><text x="53.6089%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::DeleteEntry(v8::internal::Isolate*, v8::internal::Handle (53 samples, 0.18%)</title><rect x="53.2899%" y="341" width="0.1828%" height="15" fill="rgb(232,8,23)"/><text x="53.5399%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Shrink(v8::internal::Isolate*, v8::internal::Handle (46 samples, 0.16%)</title><rect x="53.3140%" y="325" width="0.1586%" height="15" fill="rgb(216,211,34)"/><text x="53.5640%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Rehash (30 samples, 0.10%)</title><rect x="53.3692%" y="309" width="0.1035%" height="15" fill="rgb(236,151,0)"/><text x="53.6192%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::DeleteImpl(v8::internal::Handle (70 samples, 0.24%)</title><rect x="53.2451%" y="357" width="0.2414%" height="15" fill="rgb(209,168,3)"/><text x="53.4951%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::DeleteEntry(v8::internal::Isolate*, v8::internal::Handle (6 samples, 0.02%)</title><rect x="53.4864%" y="357" width="0.0207%" height="15" fill="rgb(208,129,28)"/><text x="53.7364%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::JSReceiver::DeleteProperty (96 samples, 0.33%)</title><rect x="53.2002%" y="389" width="0.3311%" height="15" fill="rgb(229,78,22)"/><text x="53.4502%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::Delete (85 samples, 0.29%)</title><rect x="53.2382%" y="373" width="0.2931%" height="15" fill="rgb(228,187,13)"/><text x="53.4882%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Heap_GenerationalBarrierSlow (7 samples, 0.02%)</title><rect x="53.5071%" y="357" width="0.0241%" height="15" fill="rgb(240,119,24)"/><text x="53.7571%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="53.5347%" y="389" width="0.0103%" height="15" fill="rgb(209,194,42)"/><text x="53.7847%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (3 samples, 0.01%)</title><rect x="53.5451%" y="389" width="0.0103%" height="15" fill="rgb(247,200,46)"/><text x="53.7951%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (4 samples, 0.01%)</title><rect x="53.5554%" y="389" width="0.0138%" height="15" fill="rgb(218,76,16)"/><text x="53.8054%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (7 samples, 0.02%)</title><rect x="53.5865%" y="373" width="0.0241%" height="15" fill="rgb(225,21,48)"/><text x="53.8365%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Runtime::DeleteObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (152 samples, 0.52%)</title><rect x="53.1519%" y="405" width="0.5242%" height="15" fill="rgb(239,223,50)"/><text x="53.4019%" y="415.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;true&gt; (31 samples, 0.11%)</title><rect x="53.5692%" y="389" width="0.1069%" height="15" fill="rgb(244,45,21)"/><text x="53.8192%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (19 samples, 0.07%)</title><rect x="53.6106%" y="373" width="0.0655%" height="15" fill="rgb(232,33,43)"/><text x="53.8606%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (5 samples, 0.02%)</title><rect x="53.6589%" y="357" width="0.0172%" height="15" fill="rgb(209,8,3)"/><text x="53.9089%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (170 samples, 0.59%)</title><rect x="53.0968%" y="437" width="0.5862%" height="15" fill="rgb(214,25,53)"/><text x="53.3468%" y="447.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_DeleteProperty (169 samples, 0.58%)</title><rect x="53.1002%" y="421" width="0.5828%" height="15" fill="rgb(254,186,54)"/><text x="53.3502%" y="431.50"></text></g><g><title>0x15540008912e (175 samples, 0.60%)</title><rect x="53.0933%" y="453" width="0.6035%" height="15" fill="rgb(208,174,49)"/><text x="53.3433%" y="463.50"></text></g><g><title>0x15540008914c (15 samples, 0.05%)</title><rect x="53.7003%" y="453" width="0.0517%" height="15" fill="rgb(233,191,51)"/><text x="53.9503%" y="463.50"></text></g><g><title>0x155400089157 (9 samples, 0.03%)</title><rect x="53.7554%" y="453" width="0.0310%" height="15" fill="rgb(222,134,10)"/><text x="54.0054%" y="463.50"></text></g><g><title>dyper_ops`Builtins_FulfillPromise (5 samples, 0.02%)</title><rect x="53.8037%" y="421" width="0.0172%" height="15" fill="rgb(230,226,20)"/><text x="54.0537%" y="431.50"></text></g><g><title>dyper_ops`Builtins_EnqueueMicrotask (13 samples, 0.04%)</title><rect x="53.8451%" y="405" width="0.0448%" height="15" fill="rgb(251,111,25)"/><text x="54.0951%" y="415.50"></text></g><g><title>dyper_ops`Builtins_FulfillPromise (22 samples, 0.08%)</title><rect x="53.8899%" y="405" width="0.0759%" height="15" fill="rgb(224,40,46)"/><text x="54.1399%" y="415.50"></text></g><g><title>dyper_ops`Builtins_PromiseCapabilityDefaultResolve (80 samples, 0.28%)</title><rect x="53.7865%" y="437" width="0.2759%" height="15" fill="rgb(236,108,47)"/><text x="54.0365%" y="447.50"></text></g><g><title>dyper_ops`Builtins_ResolvePromise (70 samples, 0.24%)</title><rect x="53.8210%" y="421" width="0.2414%" height="15" fill="rgb(234,93,0)"/><text x="54.0710%" y="431.50"></text></g><g><title>dyper_ops`Builtins_GetProperty (28 samples, 0.10%)</title><rect x="53.9658%" y="405" width="0.0966%" height="15" fill="rgb(224,213,32)"/><text x="54.2158%" y="415.50"></text></g><g><title>0x15540008917b (91 samples, 0.31%)</title><rect x="53.7865%" y="453" width="0.3138%" height="15" fill="rgb(251,11,48)"/><text x="54.0365%" y="463.50"></text></g><g><title>dyper_ops`Builtins_ResolvePromise (11 samples, 0.04%)</title><rect x="54.0623%" y="437" width="0.0379%" height="15" fill="rgb(236,173,5)"/><text x="54.3123%" y="447.50"></text></g><g><title>0x1554000893e0 (5 samples, 0.02%)</title><rect x="54.1003%" y="453" width="0.0172%" height="15" fill="rgb(230,95,12)"/><text x="54.3503%" y="463.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (5 samples, 0.02%)</title><rect x="54.1003%" y="437" width="0.0172%" height="15" fill="rgb(232,209,1)"/><text x="54.3503%" y="447.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (5 samples, 0.02%)</title><rect x="54.1003%" y="421" width="0.0172%" height="15" fill="rgb(232,6,1)"/><text x="54.3503%" y="431.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (5 samples, 0.02%)</title><rect x="54.1003%" y="405" width="0.0172%" height="15" fill="rgb(210,224,50)"/><text x="54.3503%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.02%)</title><rect x="54.1003%" y="389" width="0.0172%" height="15" fill="rgb(228,127,35)"/><text x="54.3503%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.02%)</title><rect x="54.1003%" y="373" width="0.0172%" height="15" fill="rgb(245,102,45)"/><text x="54.3503%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (5 samples, 0.02%)</title><rect x="54.1003%" y="357" width="0.0172%" height="15" fill="rgb(214,1,49)"/><text x="54.3503%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (5 samples, 0.02%)</title><rect x="54.1003%" y="341" width="0.0172%" height="15" fill="rgb(226,163,40)"/><text x="54.3503%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (5 samples, 0.02%)</title><rect x="54.1003%" y="325" width="0.0172%" height="15" fill="rgb(239,212,28)"/><text x="54.3503%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (5 samples, 0.02%)</title><rect x="54.1003%" y="309" width="0.0172%" height="15" fill="rgb(220,20,13)"/><text x="54.3503%" y="319.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (11 samples, 0.04%)</title><rect x="54.1279%" y="453" width="0.0379%" height="15" fill="rgb(210,164,35)"/><text x="54.3779%" y="463.50"></text></g><g><title>dyper_ops`Builtins_CallFunction_ReceiverIsNotNullOrUndefined (20 samples, 0.07%)</title><rect x="54.1658%" y="453" width="0.0690%" height="15" fill="rgb(248,109,41)"/><text x="54.4158%" y="463.50"></text></g><g><title>dyper_ops`Builtins_Call_ReceiverIsNotNullOrUndefined (8 samples, 0.03%)</title><rect x="54.2348%" y="453" width="0.0276%" height="15" fill="rgb(238,23,50)"/><text x="54.4848%" y="463.50"></text></g><g><title>dyper_ops`Builtins_DeleteProperty (4 samples, 0.01%)</title><rect x="54.2624%" y="453" width="0.0138%" height="15" fill="rgb(211,48,49)"/><text x="54.5124%" y="463.50"></text></g><g><title>0x1554000867a1 (3 samples, 0.01%)</title><rect x="54.2762%" y="437" width="0.0103%" height="15" fill="rgb(223,36,21)"/><text x="54.5262%" y="447.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (3 samples, 0.01%)</title><rect x="54.2762%" y="421" width="0.0103%" height="15" fill="rgb(207,123,46)"/><text x="54.5262%" y="431.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.01%)</title><rect x="54.2762%" y="405" width="0.0103%" height="15" fill="rgb(240,218,32)"/><text x="54.5262%" y="415.50"></text></g><g><title>dyper_ops`deno_core::bindings::decode (3 samples, 0.01%)</title><rect x="54.2762%" y="389" width="0.0103%" height="15" fill="rgb(252,5,43)"/><text x="54.5262%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::BuildJsonObject(v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation const&amp;, std::__1::vector&lt;v8::internal::JsonProperty, std::__1::allocator&lt;v8::internal::JsonProperty&gt; &gt; const&amp;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="54.3003%" y="357" width="0.0103%" height="15" fill="rgb(252,84,19)"/><text x="54.5503%" y="367.50"></text></g><g><title>0x1554000867fd (9 samples, 0.03%)</title><rect x="54.2865%" y="437" width="0.0310%" height="15" fill="rgb(243,152,39)"/><text x="54.5365%" y="447.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (9 samples, 0.03%)</title><rect x="54.2865%" y="421" width="0.0310%" height="15" fill="rgb(234,160,15)"/><text x="54.5365%" y="431.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_JsonParse (9 samples, 0.03%)</title><rect x="54.2865%" y="405" width="0.0310%" height="15" fill="rgb(237,34,20)"/><text x="54.5365%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (8 samples, 0.03%)</title><rect x="54.2900%" y="389" width="0.0276%" height="15" fill="rgb(229,97,13)"/><text x="54.5400%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue (8 samples, 0.03%)</title><rect x="54.2900%" y="373" width="0.0276%" height="15" fill="rgb(234,71,50)"/><text x="54.5400%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::OptimizedCompilationJob::PrepareJob (3 samples, 0.01%)</title><rect x="54.3451%" y="341" width="0.0103%" height="15" fill="rgb(253,155,4)"/><text x="54.5951%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (3 samples, 0.01%)</title><rect x="54.3451%" y="325" width="0.0103%" height="15" fill="rgb(222,185,37)"/><text x="54.5951%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::CreateGraph (3 samples, 0.01%)</title><rect x="54.3451%" y="309" width="0.0103%" height="15" fill="rgb(251,177,13)"/><text x="54.5951%" y="319.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (4 samples, 0.01%)</title><rect x="54.3451%" y="421" width="0.0138%" height="15" fill="rgb(250,179,40)"/><text x="54.5951%" y="431.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_CompileOptimized_Concurrent (4 samples, 0.01%)</title><rect x="54.3451%" y="405" width="0.0138%" height="15" fill="rgb(242,44,2)"/><text x="54.5951%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (4 samples, 0.01%)</title><rect x="54.3451%" y="389" width="0.0138%" height="15" fill="rgb(216,177,13)"/><text x="54.5951%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Compiler::CompileOptimized(v8::internal::Handle (4 samples, 0.01%)</title><rect x="54.3451%" y="373" width="0.0138%" height="15" fill="rgb(216,106,43)"/><text x="54.5951%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (4 samples, 0.01%)</title><rect x="54.3451%" y="357" width="0.0138%" height="15" fill="rgb(216,183,2)"/><text x="54.5951%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (8 samples, 0.03%)</title><rect x="54.3727%" y="373" width="0.0276%" height="15" fill="rgb(249,75,3)"/><text x="54.6227%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue (8 samples, 0.03%)</title><rect x="54.3727%" y="357" width="0.0276%" height="15" fill="rgb(219,67,39)"/><text x="54.6227%" y="367.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (11 samples, 0.04%)</title><rect x="54.3658%" y="421" width="0.0379%" height="15" fill="rgb(253,228,2)"/><text x="54.6158%" y="431.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (11 samples, 0.04%)</title><rect x="54.3658%" y="405" width="0.0379%" height="15" fill="rgb(235,138,27)"/><text x="54.6158%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_JsonParse (9 samples, 0.03%)</title><rect x="54.3727%" y="389" width="0.0310%" height="15" fill="rgb(236,97,51)"/><text x="54.6227%" y="399.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (23 samples, 0.08%)</title><rect x="54.3382%" y="437" width="0.0793%" height="15" fill="rgb(240,80,30)"/><text x="54.5882%" y="447.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (42 samples, 0.14%)</title><rect x="54.2762%" y="453" width="0.1448%" height="15" fill="rgb(230,178,19)"/><text x="54.5262%" y="463.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC (6 samples, 0.02%)</title><rect x="54.4210%" y="453" width="0.0207%" height="15" fill="rgb(210,190,27)"/><text x="54.6710%" y="463.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (7 samples, 0.02%)</title><rect x="54.4417%" y="453" width="0.0241%" height="15" fill="rgb(222,107,31)"/><text x="54.6917%" y="463.50"></text></g><g><title>dyper_ops`Builtins_PromiseCapabilityDefaultResolve (5 samples, 0.02%)</title><rect x="54.4658%" y="453" width="0.0172%" height="15" fill="rgb(216,127,34)"/><text x="54.7158%" y="463.50"></text></g><g><title>dyper_ops`Builtins_JSEntry (2,058 samples, 7.10%)</title><rect x="47.3929%" y="485" width="7.0970%" height="15" fill="rgb(234,116,52)"/><text x="47.6429%" y="495.50">dyper_ops`..</text></g><g><title>dyper_ops`Builtins_JSEntryTrampoline (2,031 samples, 7.00%)</title><rect x="47.4860%" y="469" width="7.0039%" height="15" fill="rgb(222,124,15)"/><text x="47.7360%" y="479.50">dyper_ops..</text></g><g><title>dyper_ops`v8::internal::Code::OffHeapInstructionStart (5 samples, 0.02%)</title><rect x="54.4969%" y="485" width="0.0172%" height="15" fill="rgb(231,179,28)"/><text x="54.7469%" y="495.50"></text></g><g><title>dyper_ops`v8::internal::EmbeddedData::InstructionStartOfBuiltin (3 samples, 0.01%)</title><rect x="54.5141%" y="485" width="0.0103%" height="15" fill="rgb(226,93,45)"/><text x="54.7641%" y="495.50"></text></g><g><title>dyper_ops`v8::internal::PerIsolateAssertScope&lt;(v8::internal::PerIsolateAssertType)0, true&gt;::IsAllowed (3 samples, 0.01%)</title><rect x="54.5348%" y="485" width="0.0103%" height="15" fill="rgb(215,8,51)"/><text x="54.7848%" y="495.50"></text></g><g><title>dyper_ops`v8::internal::SaveContext::~SaveContext (4 samples, 0.01%)</title><rect x="54.5520%" y="485" width="0.0138%" height="15" fill="rgb(223,106,5)"/><text x="54.8020%" y="495.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2,115 samples, 7.29%)</title><rect x="47.2757%" y="501" width="7.2936%" height="15" fill="rgb(250,191,5)"/><text x="47.5257%" y="511.50">dyper_ops`..</text></g><g><title>dyper_ops`v8::internal::Code::OffHeapInstructionStart (4 samples, 0.01%)</title><rect x="54.5727%" y="501" width="0.0138%" height="15" fill="rgb(242,132,44)"/><text x="54.8227%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (2,131 samples, 7.35%)</title><rect x="47.2515%" y="517" width="7.3488%" height="15" fill="rgb(251,152,29)"/><text x="47.5015%" y="527.50">dyper_ops`..</text></g><g><title>dyper_ops`v8::internal::Heap::ClearKeptObjects (4 samples, 0.01%)</title><rect x="54.6003%" y="517" width="0.0138%" height="15" fill="rgb(218,179,5)"/><text x="54.8503%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*, v8::internal::MaybeHandle (4 samples, 0.01%)</title><rect x="54.6762%" y="485" width="0.0138%" height="15" fill="rgb(227,67,19)"/><text x="54.9262%" y="495.50"></text></g><g><title>dyper_ops`v8::TryCatch::~TryCatch (4 samples, 0.01%)</title><rect x="54.7934%" y="453" width="0.0138%" height="15" fill="rgb(233,119,31)"/><text x="55.0434%" y="463.50"></text></g><g><title>dyper_ops`Builtins_PromiseFulfillReactionJob (4 samples, 0.01%)</title><rect x="54.8969%" y="405" width="0.0138%" height="15" fill="rgb(241,120,22)"/><text x="55.1469%" y="415.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitResolveClosure (4 samples, 0.01%)</title><rect x="55.1210%" y="389" width="0.0138%" height="15" fill="rgb(224,102,30)"/><text x="55.3710%" y="399.50"></text></g><g><title>dyper_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (15 samples, 0.05%)</title><rect x="55.1348%" y="389" width="0.0517%" height="15" fill="rgb(210,164,37)"/><text x="55.3848%" y="399.50"></text></g><g><title>dyper_ops`Builtins_Call_ReceiverIsNullOrUndefined (5 samples, 0.02%)</title><rect x="55.1866%" y="389" width="0.0172%" height="15" fill="rgb(226,191,16)"/><text x="55.4366%" y="399.50"></text></g><g><title>0x155400048c60 (3 samples, 0.01%)</title><rect x="55.3073%" y="357" width="0.0103%" height="15" fill="rgb(214,40,45)"/><text x="55.5573%" y="367.50"></text></g><g><title>dyper_ops`Builtins_EnqueueMicrotask (5 samples, 0.02%)</title><rect x="55.3383%" y="325" width="0.0172%" height="15" fill="rgb(244,29,26)"/><text x="55.5883%" y="335.50"></text></g><g><title>dyper_ops`Builtins_FulfillPromise (13 samples, 0.04%)</title><rect x="55.3555%" y="325" width="0.0448%" height="15" fill="rgb(216,16,5)"/><text x="55.6055%" y="335.50"></text></g><g><title>0x155400084d91 (27 samples, 0.09%)</title><rect x="55.3280%" y="357" width="0.0931%" height="15" fill="rgb(249,76,35)"/><text x="55.5780%" y="367.50"></text></g><g><title>dyper_ops`Builtins_ResolvePromise (26 samples, 0.09%)</title><rect x="55.3314%" y="341" width="0.0897%" height="15" fill="rgb(207,11,44)"/><text x="55.5814%" y="351.50"></text></g><g><title>dyper_ops`Builtins_GetProperty (6 samples, 0.02%)</title><rect x="55.4004%" y="325" width="0.0207%" height="15" fill="rgb(228,190,49)"/><text x="55.6504%" y="335.50"></text></g><g><title>0x155400086c1a (3 samples, 0.01%)</title><rect x="55.4349%" y="357" width="0.0103%" height="15" fill="rgb(214,173,12)"/><text x="55.6849%" y="367.50"></text></g><g><title>0x155400086cd2 (7 samples, 0.02%)</title><rect x="55.4555%" y="357" width="0.0241%" height="15" fill="rgb(218,26,35)"/><text x="55.7055%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (7 samples, 0.02%)</title><rect x="55.4555%" y="341" width="0.0241%" height="15" fill="rgb(220,200,19)"/><text x="55.7055%" y="351.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.01%)</title><rect x="55.4900%" y="341" width="0.0103%" height="15" fill="rgb(239,95,49)"/><text x="55.7400%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::GetOwnValuesOrEntries(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="55.5487%" y="309" width="0.0172%" height="15" fill="rgb(235,85,53)"/><text x="55.7987%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JSReceiver::GetOwnEntries(v8::internal::Handle (5 samples, 0.02%)</title><rect x="55.5659%" y="309" width="0.0172%" height="15" fill="rgb(233,133,31)"/><text x="55.8159%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (8 samples, 0.03%)</title><rect x="55.6211%" y="261" width="0.0276%" height="15" fill="rgb(218,25,20)"/><text x="55.8711%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (3 samples, 0.01%)</title><rect x="55.6383%" y="245" width="0.0103%" height="15" fill="rgb(252,210,38)"/><text x="55.8883%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="55.6556%" y="261" width="0.0207%" height="15" fill="rgb(242,134,21)"/><text x="55.9056%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (23 samples, 0.08%)</title><rect x="55.6004%" y="293" width="0.0793%" height="15" fill="rgb(213,28,48)"/><text x="55.8504%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (23 samples, 0.08%)</title><rect x="55.6004%" y="277" width="0.0793%" height="15" fill="rgb(250,196,2)"/><text x="55.8504%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FastGetOwnValuesOrEntries(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, bool, v8::internal::Handle (3 samples, 0.01%)</title><rect x="55.6797%" y="293" width="0.0103%" height="15" fill="rgb(227,5,17)"/><text x="55.9297%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::GetCapacity (4 samples, 0.01%)</title><rect x="55.7142%" y="277" width="0.0138%" height="15" fill="rgb(221,226,24)"/><text x="55.9642%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (5 samples, 0.02%)</title><rect x="55.7280%" y="277" width="0.0172%" height="15" fill="rgb(211,5,48)"/><text x="55.9780%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewUninitializedFixedArray (7 samples, 0.02%)</title><rect x="55.7452%" y="277" width="0.0241%" height="15" fill="rgb(219,150,6)"/><text x="55.9952%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (4 samples, 0.01%)</title><rect x="55.7763%" y="277" width="0.0138%" height="15" fill="rgb(251,46,16)"/><text x="56.0263%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (4 samples, 0.01%)</title><rect x="55.9901%" y="261" width="0.0138%" height="15" fill="rgb(220,204,40)"/><text x="56.2401%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (13 samples, 0.04%)</title><rect x="56.0487%" y="229" width="0.0448%" height="15" fill="rgb(211,85,2)"/><text x="56.2987%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.03%)</title><rect x="56.0659%" y="213" width="0.0276%" height="15" fill="rgb(229,17,7)"/><text x="56.3159%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.01%)</title><rect x="56.0797%" y="197" width="0.0138%" height="15" fill="rgb(239,72,28)"/><text x="56.3297%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (3 samples, 0.01%)</title><rect x="56.0832%" y="181" width="0.0103%" height="15" fill="rgb(230,47,54)"/><text x="56.3332%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="56.0935%" y="229" width="0.0103%" height="15" fill="rgb(214,50,8)"/><text x="56.3435%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (31 samples, 0.11%)</title><rect x="56.0177%" y="245" width="0.1069%" height="15" fill="rgb(216,198,43)"/><text x="56.2677%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="56.1039%" y="229" width="0.0207%" height="15" fill="rgb(234,20,35)"/><text x="56.3539%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (36 samples, 0.12%)</title><rect x="56.0039%" y="261" width="0.1241%" height="15" fill="rgb(254,45,19)"/><text x="56.2539%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (3 samples, 0.01%)</title><rect x="56.1280%" y="261" width="0.0103%" height="15" fill="rgb(219,14,44)"/><text x="56.3780%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (14 samples, 0.05%)</title><rect x="56.1901%" y="245" width="0.0483%" height="15" fill="rgb(217,220,26)"/><text x="56.4401%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (9 samples, 0.03%)</title><rect x="56.2625%" y="213" width="0.0310%" height="15" fill="rgb(213,158,28)"/><text x="56.5125%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (16 samples, 0.06%)</title><rect x="56.2453%" y="245" width="0.0552%" height="15" fill="rgb(252,51,52)"/><text x="56.4953%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (12 samples, 0.04%)</title><rect x="56.2591%" y="229" width="0.0414%" height="15" fill="rgb(246,89,16)"/><text x="56.5091%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (49 samples, 0.17%)</title><rect x="56.1384%" y="261" width="0.1690%" height="15" fill="rgb(216,158,49)"/><text x="56.3884%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::ValidateElements (5 samples, 0.02%)</title><rect x="56.3246%" y="261" width="0.0172%" height="15" fill="rgb(236,107,19)"/><text x="56.5746%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FastGetOwnValuesOrEntries(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, bool, v8::internal::Handle (164 samples, 0.57%)</title><rect x="55.7901%" y="277" width="0.5656%" height="15" fill="rgb(228,185,30)"/><text x="56.0401%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Map::OnlyHasSimpleProperties (4 samples, 0.01%)</title><rect x="56.3418%" y="261" width="0.0138%" height="15" fill="rgb(246,134,8)"/><text x="56.5918%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FixedArray::ShrinkOrEmpty(v8::internal::Isolate*, v8::internal::Handle (16 samples, 0.06%)</title><rect x="56.3556%" y="277" width="0.0552%" height="15" fill="rgb(214,143,50)"/><text x="56.6056%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Map::OnlyHasSimpleProperties (8 samples, 0.03%)</title><rect x="56.4108%" y="277" width="0.0276%" height="15" fill="rgb(228,75,8)"/><text x="56.6608%" y="287.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (261 samples, 0.90%)</title><rect x="55.5452%" y="325" width="0.9001%" height="15" fill="rgb(207,175,4)"/><text x="55.7952%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_ObjectEntries (250 samples, 0.86%)</title><rect x="55.5831%" y="309" width="0.8621%" height="15" fill="rgb(205,108,24)"/><text x="55.8331%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::GetOwnValuesOrEntries(v8::internal::Isolate*, v8::internal::Handle (219 samples, 0.76%)</title><rect x="55.6900%" y="293" width="0.7552%" height="15" fill="rgb(244,120,49)"/><text x="55.9400%" y="303.50"></text></g><g><title>0x155400086db8 (281 samples, 0.97%)</title><rect x="55.4900%" y="357" width="0.9690%" height="15" fill="rgb(223,47,38)"/><text x="55.7400%" y="367.50"></text></g><g><title>dyper_ops`Builtins_ObjectEntries (278 samples, 0.96%)</title><rect x="55.5004%" y="341" width="0.9587%" height="15" fill="rgb(229,179,11)"/><text x="55.7504%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_ObjectEntries (4 samples, 0.01%)</title><rect x="56.4453%" y="325" width="0.0138%" height="15" fill="rgb(231,122,1)"/><text x="56.6953%" y="335.50"></text></g><g><title>0x155400086e21 (4 samples, 0.01%)</title><rect x="56.4694%" y="357" width="0.0138%" height="15" fill="rgb(245,119,9)"/><text x="56.7194%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::IncrementalStringBuilder::IncrementalStringBuilder (4 samples, 0.01%)</title><rect x="56.5108%" y="309" width="0.0138%" height="15" fill="rgb(241,163,25)"/><text x="56.7608%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (3 samples, 0.01%)</title><rect x="56.5246%" y="309" width="0.0103%" height="15" fill="rgb(217,214,3)"/><text x="56.7746%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (3 samples, 0.01%)</title><rect x="56.6625%" y="261" width="0.0103%" height="15" fill="rgb(240,86,28)"/><text x="56.9125%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewConsString(v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::Handle (25 samples, 0.09%)</title><rect x="56.6005%" y="277" width="0.0862%" height="15" fill="rgb(215,47,9)"/><text x="56.8505%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.01%)</title><rect x="56.6729%" y="261" width="0.0138%" height="15" fill="rgb(252,25,45)"/><text x="56.9229%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.01%)</title><rect x="56.6763%" y="245" width="0.0103%" height="15" fill="rgb(251,164,9)"/><text x="56.9263%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::IncrementalStringBuilder::Finish (46 samples, 0.16%)</title><rect x="56.5694%" y="293" width="0.1586%" height="15" fill="rgb(233,194,0)"/><text x="56.8194%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::SeqString::Truncate(v8::internal::Handle (11 samples, 0.04%)</title><rect x="56.6901%" y="277" width="0.0379%" height="15" fill="rgb(249,111,24)"/><text x="56.9401%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CreateFillerObjectAt (5 samples, 0.02%)</title><rect x="56.7108%" y="261" width="0.0172%" height="15" fill="rgb(250,223,3)"/><text x="56.9608%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (17 samples, 0.06%)</title><rect x="56.7453%" y="277" width="0.0586%" height="15" fill="rgb(236,178,37)"/><text x="56.9953%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (9 samples, 0.03%)</title><rect x="56.7729%" y="261" width="0.0310%" height="15" fill="rgb(241,158,50)"/><text x="57.0229%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.02%)</title><rect x="56.7867%" y="245" width="0.0172%" height="15" fill="rgb(213,121,41)"/><text x="57.0367%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::IncrementalStringBuilder::IncrementalStringBuilder (23 samples, 0.08%)</title><rect x="56.7281%" y="293" width="0.0793%" height="15" fill="rgb(240,92,3)"/><text x="56.9781%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::ApplyToJsonFunction(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.01%)</title><rect x="56.8074%" y="293" width="0.0138%" height="15" fill="rgb(205,123,3)"/><text x="57.0574%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::InitializeReplacer(v8::internal::Handle (13 samples, 0.04%)</title><rect x="56.8212%" y="293" width="0.0448%" height="15" fill="rgb(205,97,47)"/><text x="57.0712%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::FastPropertyAt(v8::internal::Handle (4 samples, 0.01%)</title><rect x="57.1246%" y="277" width="0.0138%" height="15" fill="rgb(247,152,14)"/><text x="57.3746%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (5 samples, 0.02%)</title><rect x="57.2005%" y="261" width="0.0172%" height="15" fill="rgb(248,195,53)"/><text x="57.4505%" y="271.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::NextInternal&lt;false&gt; (7 samples, 0.02%)</title><rect x="57.2246%" y="261" width="0.0241%" height="15" fill="rgb(226,201,16)"/><text x="57.4746%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (5 samples, 0.02%)</title><rect x="57.2315%" y="245" width="0.0172%" height="15" fill="rgb(205,98,0)"/><text x="57.4815%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::ApplyToJsonFunction(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (44 samples, 0.15%)</title><rect x="57.1384%" y="277" width="0.1517%" height="15" fill="rgb(214,191,48)"/><text x="57.3884%" y="287.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;false&gt; (12 samples, 0.04%)</title><rect x="57.2488%" y="261" width="0.0414%" height="15" fill="rgb(237,112,39)"/><text x="57.4988%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (9 samples, 0.03%)</title><rect x="57.2591%" y="245" width="0.0310%" height="15" fill="rgb(247,203,27)"/><text x="57.5091%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FlatStringReader::FlatStringReader(v8::internal::Isolate*, v8::internal::Handle (6 samples, 0.02%)</title><rect x="57.4833%" y="261" width="0.0207%" height="15" fill="rgb(235,124,28)"/><text x="57.7333%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewConsString(v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::Handle (7 samples, 0.02%)</title><rect x="57.5212%" y="245" width="0.0241%" height="15" fill="rgb(208,207,46)"/><text x="57.7712%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (4 samples, 0.01%)</title><rect x="57.5902%" y="197" width="0.0138%" height="15" fill="rgb(234,176,4)"/><text x="57.8402%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::IncrementalStringBuilder::Extend (30 samples, 0.10%)</title><rect x="57.5040%" y="261" width="0.1035%" height="15" fill="rgb(230,133,28)"/><text x="57.7540%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (18 samples, 0.06%)</title><rect x="57.5453%" y="245" width="0.0621%" height="15" fill="rgb(211,137,40)"/><text x="57.7953%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (11 samples, 0.04%)</title><rect x="57.5695%" y="229" width="0.0379%" height="15" fill="rgb(254,35,13)"/><text x="57.8195%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (8 samples, 0.03%)</title><rect x="57.5798%" y="213" width="0.0276%" height="15" fill="rgb(225,49,51)"/><text x="57.8298%" y="223.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::NextInternal&lt;false&gt; (14 samples, 0.05%)</title><rect x="57.6454%" y="245" width="0.0483%" height="15" fill="rgb(251,10,15)"/><text x="57.8954%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (9 samples, 0.03%)</title><rect x="57.6626%" y="229" width="0.0310%" height="15" fill="rgb(228,207,15)"/><text x="57.9126%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::ApplyToJsonFunction(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (30 samples, 0.10%)</title><rect x="57.6143%" y="261" width="0.1035%" height="15" fill="rgb(241,99,19)"/><text x="57.8643%" y="271.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;false&gt; (7 samples, 0.02%)</title><rect x="57.6936%" y="245" width="0.0241%" height="15" fill="rgb(207,104,49)"/><text x="57.9436%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (6 samples, 0.02%)</title><rect x="57.6971%" y="229" width="0.0207%" height="15" fill="rgb(234,99,18)"/><text x="57.9471%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::Get(v8::internal::Handle (3 samples, 0.01%)</title><rect x="57.7695%" y="245" width="0.0103%" height="15" fill="rgb(213,191,49)"/><text x="58.0195%" y="255.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::NextInternal&lt;false&gt; (11 samples, 0.04%)</title><rect x="58.0143%" y="213" width="0.0379%" height="15" fill="rgb(210,226,19)"/><text x="58.2643%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (7 samples, 0.02%)</title><rect x="58.0281%" y="197" width="0.0241%" height="15" fill="rgb(229,97,18)"/><text x="58.2781%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::ApplyToJsonFunction(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (26 samples, 0.09%)</title><rect x="57.9902%" y="229" width="0.0897%" height="15" fill="rgb(211,167,15)"/><text x="58.2402%" y="239.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;false&gt; (8 samples, 0.03%)</title><rect x="58.0523%" y="213" width="0.0276%" height="15" fill="rgb(210,169,34)"/><text x="58.3023%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (5 samples, 0.02%)</title><rect x="58.0626%" y="197" width="0.0172%" height="15" fill="rgb(241,121,31)"/><text x="58.3126%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="58.1523%" y="197" width="0.0172%" height="15" fill="rgb(232,40,11)"/><text x="58.4023%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeString(v8::internal::Handle (23 samples, 0.08%)</title><rect x="58.1040%" y="213" width="0.0793%" height="15" fill="rgb(205,86,26)"/><text x="58.3540%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (4 samples, 0.01%)</title><rect x="58.1695%" y="197" width="0.0138%" height="15" fill="rgb(231,126,28)"/><text x="58.4195%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (34 samples, 0.12%)</title><rect x="58.0799%" y="229" width="0.1172%" height="15" fill="rgb(219,221,18)"/><text x="58.3299%" y="239.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (39 samples, 0.13%)</title><rect x="58.2178%" y="213" width="0.1345%" height="15" fill="rgb(211,40,0)"/><text x="58.4678%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (38 samples, 0.13%)</title><rect x="58.2213%" y="197" width="0.1310%" height="15" fill="rgb(239,85,43)"/><text x="58.4713%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (37 samples, 0.13%)</title><rect x="58.2247%" y="181" width="0.1276%" height="15" fill="rgb(231,55,21)"/><text x="58.4747%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.12%)</title><rect x="58.2316%" y="165" width="0.1207%" height="15" fill="rgb(225,184,43)"/><text x="58.4816%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.11%)</title><rect x="58.2419%" y="149" width="0.1104%" height="15" fill="rgb(251,158,41)"/><text x="58.4919%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.06%)</title><rect x="58.2937%" y="133" width="0.0586%" height="15" fill="rgb(234,159,37)"/><text x="58.5437%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="58.3385%" y="117" width="0.0138%" height="15" fill="rgb(216,204,22)"/><text x="58.5885%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="58.3764%" y="197" width="0.0241%" height="15" fill="rgb(214,17,3)"/><text x="58.6264%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="58.3764%" y="181" width="0.0241%" height="15" fill="rgb(212,111,17)"/><text x="58.6264%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.05%)</title><rect x="58.3557%" y="213" width="0.0483%" height="15" fill="rgb(221,157,24)"/><text x="58.6057%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.10%)</title><rect x="58.4040%" y="213" width="0.1000%" height="15" fill="rgb(252,16,13)"/><text x="58.6540%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.07%)</title><rect x="58.4316%" y="197" width="0.0724%" height="15" fill="rgb(221,62,2)"/><text x="58.6816%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.03%)</title><rect x="58.4730%" y="181" width="0.0310%" height="15" fill="rgb(247,87,22)"/><text x="58.7230%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::StackPush(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (98 samples, 0.34%)</title><rect x="58.1971%" y="229" width="0.3380%" height="15" fill="rgb(215,73,9)"/><text x="58.4471%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="58.5109%" y="213" width="0.0241%" height="15" fill="rgb(207,175,33)"/><text x="58.7609%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (221 samples, 0.76%)</title><rect x="57.7798%" y="245" width="0.7621%" height="15" fill="rgb(243,129,54)"/><text x="58.0298%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::GetDataValue (7 samples, 0.02%)</title><rect x="58.5454%" y="245" width="0.0241%" height="15" fill="rgb(227,119,45)"/><text x="58.7954%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (3 samples, 0.01%)</title><rect x="58.5696%" y="245" width="0.0103%" height="15" fill="rgb(205,109,36)"/><text x="58.8196%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Object::GetProperty (13 samples, 0.04%)</title><rect x="58.5834%" y="245" width="0.0448%" height="15" fill="rgb(205,6,39)"/><text x="58.8334%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::FetchValue (7 samples, 0.02%)</title><rect x="58.6040%" y="229" width="0.0241%" height="15" fill="rgb(221,32,16)"/><text x="58.8540%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeArrayLikeSlow(v8::internal::Handle (283 samples, 0.98%)</title><rect x="57.7212%" y="261" width="0.9759%" height="15" fill="rgb(228,144,50)"/><text x="57.9712%" y="271.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;true&gt; (20 samples, 0.07%)</title><rect x="58.6282%" y="245" width="0.0690%" height="15" fill="rgb(229,201,53)"/><text x="58.8782%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (16 samples, 0.06%)</title><rect x="58.6420%" y="229" width="0.0552%" height="15" fill="rgb(249,153,27)"/><text x="58.8920%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeSmi (17 samples, 0.06%)</title><rect x="58.6972%" y="261" width="0.0586%" height="15" fill="rgb(227,106,25)"/><text x="58.9472%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::IntToCString(int, v8::internal::Vector (5 samples, 0.02%)</title><rect x="58.7385%" y="245" width="0.0172%" height="15" fill="rgb(230,65,29)"/><text x="58.9885%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FlatStringReader::FlatStringReader(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="58.9144%" y="245" width="0.0172%" height="15" fill="rgb(221,57,46)"/><text x="59.1644%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FlatStringReader::PostGarbageCollection (4 samples, 0.01%)</title><rect x="58.9317%" y="245" width="0.0138%" height="15" fill="rgb(229,161,17)"/><text x="59.1817%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::IncrementalStringBuilder::Extend (8 samples, 0.03%)</title><rect x="58.9454%" y="245" width="0.0276%" height="15" fill="rgb(222,213,11)"/><text x="59.1954%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (5 samples, 0.02%)</title><rect x="58.9558%" y="229" width="0.0172%" height="15" fill="rgb(235,35,13)"/><text x="59.2058%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.01%)</title><rect x="58.9592%" y="213" width="0.0138%" height="15" fill="rgb(233,158,34)"/><text x="59.2092%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.01%)</title><rect x="58.9592%" y="197" width="0.0138%" height="15" fill="rgb(215,151,48)"/><text x="59.2092%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (3 samples, 0.01%)</title><rect x="58.9627%" y="181" width="0.0103%" height="15" fill="rgb(229,84,14)"/><text x="59.2127%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (9 samples, 0.03%)</title><rect x="58.9730%" y="245" width="0.0310%" height="15" fill="rgb(229,68,14)"/><text x="59.2230%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeString(v8::internal::Handle (76 samples, 0.26%)</title><rect x="58.7558%" y="261" width="0.2621%" height="15" fill="rgb(243,106,26)"/><text x="59.0058%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (4 samples, 0.01%)</title><rect x="59.0041%" y="245" width="0.0138%" height="15" fill="rgb(206,45,38)"/><text x="59.2541%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="59.0558%" y="197" width="0.0103%" height="15" fill="rgb(226,6,15)"/><text x="59.3058%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="59.1179%" y="165" width="0.0103%" height="15" fill="rgb(232,22,54)"/><text x="59.3679%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="59.1317%" y="165" width="0.0138%" height="15" fill="rgb(229,222,32)"/><text x="59.3817%" y="175.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (40 samples, 0.14%)</title><rect x="59.0420%" y="245" width="0.1379%" height="15" fill="rgb(228,62,29)"/><text x="59.2920%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (39 samples, 0.13%)</title><rect x="59.0455%" y="229" width="0.1345%" height="15" fill="rgb(251,103,34)"/><text x="59.2955%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (38 samples, 0.13%)</title><rect x="59.0489%" y="213" width="0.1310%" height="15" fill="rgb(233,12,30)"/><text x="59.2989%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.11%)</title><rect x="59.0661%" y="197" width="0.1138%" height="15" fill="rgb(238,52,0)"/><text x="59.3161%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.11%)</title><rect x="59.0696%" y="181" width="0.1104%" height="15" fill="rgb(223,98,5)"/><text x="59.3196%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.03%)</title><rect x="59.1455%" y="165" width="0.0345%" height="15" fill="rgb(228,75,37)"/><text x="59.3955%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.06%)</title><rect x="59.1903%" y="245" width="0.0621%" height="15" fill="rgb(205,115,49)"/><text x="59.4403%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.03%)</title><rect x="59.2213%" y="229" width="0.0310%" height="15" fill="rgb(250,154,43)"/><text x="59.4713%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.03%)</title><rect x="59.2248%" y="213" width="0.0276%" height="15" fill="rgb(226,43,29)"/><text x="59.4748%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.07%)</title><rect x="59.2524%" y="245" width="0.0655%" height="15" fill="rgb(249,228,39)"/><text x="59.5024%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.03%)</title><rect x="59.2834%" y="229" width="0.0345%" height="15" fill="rgb(216,79,43)"/><text x="59.5334%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="59.3075%" y="213" width="0.0103%" height="15" fill="rgb(228,95,12)"/><text x="59.5575%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::StackPush(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (93 samples, 0.32%)</title><rect x="59.0179%" y="261" width="0.3207%" height="15" fill="rgb(249,221,15)"/><text x="59.2679%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="59.3282%" y="245" width="0.0103%" height="15" fill="rgb(233,34,13)"/><text x="59.5782%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="59.3489%" y="261" width="0.0103%" height="15" fill="rgb(214,103,39)"/><text x="59.5989%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (609 samples, 2.10%)</title><rect x="57.2902%" y="277" width="2.1001%" height="15" fill="rgb(251,126,39)"/><text x="57.5402%" y="287.50">d..</text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeString(v8::internal::Handle (4 samples, 0.01%)</title><rect x="59.3903%" y="277" width="0.0138%" height="15" fill="rgb(214,216,36)"/><text x="59.6403%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.04%)</title><rect x="59.4317%" y="213" width="0.0379%" height="15" fill="rgb(220,221,8)"/><text x="59.6817%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (44 samples, 0.15%)</title><rect x="59.4317%" y="229" width="0.1517%" height="15" fill="rgb(240,216,3)"/><text x="59.6817%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.11%)</title><rect x="59.4696%" y="213" width="0.1138%" height="15" fill="rgb(232,218,17)"/><text x="59.7196%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.10%)</title><rect x="59.4834%" y="197" width="0.1000%" height="15" fill="rgb(229,163,45)"/><text x="59.7334%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.03%)</title><rect x="59.5524%" y="181" width="0.0310%" height="15" fill="rgb(231,110,42)"/><text x="59.8024%" y="191.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (47 samples, 0.16%)</title><rect x="59.4248%" y="261" width="0.1621%" height="15" fill="rgb(208,170,48)"/><text x="59.6748%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (46 samples, 0.16%)</title><rect x="59.4282%" y="245" width="0.1586%" height="15" fill="rgb(239,116,25)"/><text x="59.6782%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::StackPush(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (54 samples, 0.19%)</title><rect x="59.4041%" y="277" width="0.1862%" height="15" fill="rgb(219,200,50)"/><text x="59.6541%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (791 samples, 2.73%)</title><rect x="56.8660%" y="293" width="2.7278%" height="15" fill="rgb(245,200,0)"/><text x="57.1160%" y="303.50">dy..</text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.03%)</title><rect x="59.6214%" y="277" width="0.0310%" height="15" fill="rgb(245,119,33)"/><text x="59.8714%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.03%)</title><rect x="59.6248%" y="261" width="0.0276%" height="15" fill="rgb(231,125,12)"/><text x="59.8748%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="59.6110%" y="293" width="0.0448%" height="15" fill="rgb(216,96,41)"/><text x="59.8610%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (45 samples, 0.16%)</title><rect x="59.6558%" y="293" width="0.1552%" height="15" fill="rgb(248,43,45)"/><text x="59.9058%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.09%)</title><rect x="59.7248%" y="277" width="0.0862%" height="15" fill="rgb(217,222,7)"/><text x="59.9748%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.04%)</title><rect x="59.7696%" y="261" width="0.0414%" height="15" fill="rgb(233,28,6)"/><text x="60.0196%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringify(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (952 samples, 3.28%)</title><rect x="56.5349%" y="309" width="3.2830%" height="15" fill="rgb(231,218,15)"/><text x="56.7849%" y="319.50">dyp..</text></g><g><title>dyper_ops`v8::internal::Builtin_JsonStringify (967 samples, 3.33%)</title><rect x="56.4901%" y="325" width="3.3347%" height="15" fill="rgb(226,171,48)"/><text x="56.7401%" y="335.50">dyp..</text></g><g><title>0x155400086e48 (975 samples, 3.36%)</title><rect x="56.4832%" y="357" width="3.3623%" height="15" fill="rgb(235,201,9)"/><text x="56.7332%" y="367.50">0x1..</text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (975 samples, 3.36%)</title><rect x="56.4832%" y="341" width="3.3623%" height="15" fill="rgb(217,80,15)"/><text x="56.7332%" y="351.50">dyp..</text></g><g><title>dyper_ops`v8::internal::JsonStringify(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="59.8248%" y="325" width="0.0207%" height="15" fill="rgb(219,152,8)"/><text x="60.0748%" y="335.50"></text></g><g><title>0x155400086e86 (4 samples, 0.01%)</title><rect x="59.8490%" y="357" width="0.0138%" height="15" fill="rgb(243,107,38)"/><text x="60.0990%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (4 samples, 0.01%)</title><rect x="59.8490%" y="341" width="0.0138%" height="15" fill="rgb(231,17,5)"/><text x="60.0990%" y="351.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::EscapableHandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.01%)</title><rect x="59.9041%" y="309" width="0.0103%" height="15" fill="rgb(209,25,54)"/><text x="60.1541%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="60.0662%" y="181" width="0.0172%" height="15" fill="rgb(219,0,2)"/><text x="60.3162%" y="191.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::from_unique_ptr (34 samples, 0.12%)</title><rect x="59.9869%" y="293" width="0.1172%" height="15" fill="rgb(246,9,5)"/><text x="60.2369%" y="303.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__CONVERT__std__unique_ptr (33 samples, 0.11%)</title><rect x="59.9903%" y="277" width="0.1138%" height="15" fill="rgb(226,159,4)"/><text x="60.2403%" y="287.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (31 samples, 0.11%)</title><rect x="59.9972%" y="261" width="0.1069%" height="15" fill="rgb(219,175,34)"/><text x="60.2472%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (31 samples, 0.11%)</title><rect x="59.9972%" y="245" width="0.1069%" height="15" fill="rgb(236,10,46)"/><text x="60.2472%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (31 samples, 0.11%)</title><rect x="59.9972%" y="229" width="0.1069%" height="15" fill="rgb(240,211,16)"/><text x="60.2472%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.10%)</title><rect x="60.0007%" y="213" width="0.1035%" height="15" fill="rgb(205,3,43)"/><text x="60.2507%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.10%)</title><rect x="60.0076%" y="197" width="0.0966%" height="15" fill="rgb(245,7,22)"/><text x="60.2576%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.02%)</title><rect x="60.0835%" y="181" width="0.0207%" height="15" fill="rgb(239,132,32)"/><text x="60.3335%" y="191.50"></text></g><g><title>dyper_ops`__rdl_alloc (6 samples, 0.02%)</title><rect x="60.1041%" y="293" width="0.0207%" height="15" fill="rgb(228,202,34)"/><text x="60.3541%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="60.2628%" y="149" width="0.0207%" height="15" fill="rgb(254,200,22)"/><text x="60.5128%" y="159.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::new_backing_store_from_boxed_slice (53 samples, 0.18%)</title><rect x="60.1317%" y="293" width="0.1828%" height="15" fill="rgb(219,10,39)"/><text x="60.3817%" y="303.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__NewBackingStore__with_data (52 samples, 0.18%)</title><rect x="60.1352%" y="277" width="0.1793%" height="15" fill="rgb(226,210,39)"/><text x="60.3852%" y="287.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::NewBackingStore(void*, unsigned long, void (*) (51 samples, 0.18%)</title><rect x="60.1386%" y="261" width="0.1759%" height="15" fill="rgb(208,219,16)"/><text x="60.3886%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::BackingStore::WrapAllocation(void*, unsigned long, void (*) (51 samples, 0.18%)</title><rect x="60.1386%" y="245" width="0.1759%" height="15" fill="rgb(216,158,51)"/><text x="60.3886%" y="255.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (39 samples, 0.13%)</title><rect x="60.1800%" y="229" width="0.1345%" height="15" fill="rgb(233,14,44)"/><text x="60.4300%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (39 samples, 0.13%)</title><rect x="60.1800%" y="213" width="0.1345%" height="15" fill="rgb(237,97,39)"/><text x="60.4300%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (38 samples, 0.13%)</title><rect x="60.1835%" y="197" width="0.1310%" height="15" fill="rgb(218,198,43)"/><text x="60.4335%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.12%)</title><rect x="60.1938%" y="181" width="0.1207%" height="15" fill="rgb(231,104,20)"/><text x="60.4438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.11%)</title><rect x="60.2007%" y="165" width="0.1138%" height="15" fill="rgb(254,36,13)"/><text x="60.4507%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.03%)</title><rect x="60.2835%" y="149" width="0.0310%" height="15" fill="rgb(248,14,50)"/><text x="60.5335%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (4 samples, 0.01%)</title><rect x="60.4662%" y="181" width="0.0138%" height="15" fill="rgb(217,107,29)"/><text x="60.7162%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (15 samples, 0.05%)</title><rect x="60.4318%" y="229" width="0.0517%" height="15" fill="rgb(251,169,33)"/><text x="60.6818%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (11 samples, 0.04%)</title><rect x="60.4455%" y="213" width="0.0379%" height="15" fill="rgb(217,108,32)"/><text x="60.6955%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (6 samples, 0.02%)</title><rect x="60.4628%" y="197" width="0.0207%" height="15" fill="rgb(219,66,42)"/><text x="60.7128%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="60.4835%" y="229" width="0.0103%" height="15" fill="rgb(206,180,7)"/><text x="60.7335%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="60.4938%" y="229" width="0.0172%" height="15" fill="rgb(208,226,31)"/><text x="60.7438%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AppendArrayBufferExtension (3 samples, 0.01%)</title><rect x="60.5111%" y="229" width="0.0103%" height="15" fill="rgb(218,26,49)"/><text x="60.7611%" y="239.50"></text></g><g><title>dyper_ops`v8::Isolate::AdjustAmountOfExternalAllocatedMemory (6 samples, 0.02%)</title><rect x="60.5352%" y="213" width="0.0207%" height="15" fill="rgb(233,197,48)"/><text x="60.7852%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::ArrayBufferSweeper::Append (23 samples, 0.08%)</title><rect x="60.5559%" y="213" width="0.0793%" height="15" fill="rgb(252,181,51)"/><text x="60.8059%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::AllocWithRetry (30 samples, 0.10%)</title><rect x="60.6869%" y="181" width="0.1035%" height="15" fill="rgb(253,90,19)"/><text x="60.9369%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (30 samples, 0.10%)</title><rect x="60.6869%" y="165" width="0.1035%" height="15" fill="rgb(215,171,30)"/><text x="60.9369%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (29 samples, 0.10%)</title><rect x="60.6904%" y="149" width="0.1000%" height="15" fill="rgb(214,222,9)"/><text x="60.9404%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.09%)</title><rect x="60.7007%" y="133" width="0.0897%" height="15" fill="rgb(223,3,22)"/><text x="60.9507%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.08%)</title><rect x="60.7076%" y="117" width="0.0828%" height="15" fill="rgb(225,196,46)"/><text x="60.9576%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.03%)</title><rect x="60.7559%" y="101" width="0.0345%" height="15" fill="rgb(209,110,37)"/><text x="61.0059%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="60.7732%" y="85" width="0.0172%" height="15" fill="rgb(249,89,12)"/><text x="61.0232%" y="95.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::Attach(std::__1::shared_ptr (43 samples, 0.15%)</title><rect x="60.6456%" y="213" width="0.1483%" height="15" fill="rgb(226,27,33)"/><text x="60.8956%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Malloced::operator new (31 samples, 0.11%)</title><rect x="60.6869%" y="197" width="0.1069%" height="15" fill="rgb(213,82,22)"/><text x="60.9369%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::GetHeaderSize (8 samples, 0.03%)</title><rect x="60.7938%" y="213" width="0.0276%" height="15" fill="rgb(248,140,0)"/><text x="61.0438%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayBuffer(std::__1::shared_ptr (130 samples, 0.45%)</title><rect x="60.3904%" y="245" width="0.4483%" height="15" fill="rgb(228,106,3)"/><text x="60.6404%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::Setup(v8::internal::SharedFlag, std::__1::shared_ptr (92 samples, 0.32%)</title><rect x="60.5214%" y="229" width="0.3173%" height="15" fill="rgb(209,23,37)"/><text x="60.7714%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Malloced::operator new (5 samples, 0.02%)</title><rect x="60.8214%" y="213" width="0.0172%" height="15" fill="rgb(241,93,50)"/><text x="61.0714%" y="223.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::New(v8::Isolate*, std::__1::shared_ptr (140 samples, 0.48%)</title><rect x="60.3593%" y="261" width="0.4828%" height="15" fill="rgb(253,46,43)"/><text x="60.6093%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayBuffer(std::__1::shared_ptr (6 samples, 0.02%)</title><rect x="60.8421%" y="261" width="0.0207%" height="15" fill="rgb(226,206,43)"/><text x="61.0921%" y="271.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::with_backing_store (160 samples, 0.55%)</title><rect x="60.3145%" y="293" width="0.5518%" height="15" fill="rgb(217,54,7)"/><text x="60.5645%" y="303.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__New__with_backing_store (154 samples, 0.53%)</title><rect x="60.3352%" y="277" width="0.5311%" height="15" fill="rgb(223,5,52)"/><text x="60.5852%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (8 samples, 0.03%)</title><rect x="60.9352%" y="261" width="0.0276%" height="15" fill="rgb(206,52,46)"/><text x="61.1852%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (3 samples, 0.01%)</title><rect x="61.0939%" y="197" width="0.0103%" height="15" fill="rgb(253,136,11)"/><text x="61.3439%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (13 samples, 0.04%)</title><rect x="61.0697%" y="245" width="0.0448%" height="15" fill="rgb(208,106,33)"/><text x="61.3197%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.03%)</title><rect x="61.0870%" y="229" width="0.0276%" height="15" fill="rgb(206,54,4)"/><text x="61.3370%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (8 samples, 0.03%)</title><rect x="61.0870%" y="213" width="0.0276%" height="15" fill="rgb(213,3,15)"/><text x="61.3370%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (3 samples, 0.01%)</title><rect x="61.1042%" y="197" width="0.0103%" height="15" fill="rgb(252,211,39)"/><text x="61.3542%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.01%)</title><rect x="61.1042%" y="181" width="0.0103%" height="15" fill="rgb(223,6,36)"/><text x="61.3542%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (3 samples, 0.01%)</title><rect x="61.1042%" y="165" width="0.0103%" height="15" fill="rgb(252,169,45)"/><text x="61.3542%" y="175.50"></text></g><g><title>dyper_ops`void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (22 samples, 0.08%)</title><rect x="61.1146%" y="245" width="0.0759%" height="15" fill="rgb(212,48,26)"/><text x="61.3646%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="61.1732%" y="229" width="0.0172%" height="15" fill="rgb(251,102,48)"/><text x="61.4232%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::String::SlowFlatten(v8::internal::Isolate*, v8::internal::Handle (68 samples, 0.23%)</title><rect x="60.9663%" y="261" width="0.2345%" height="15" fill="rgb(243,208,16)"/><text x="61.2163%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="61.1904%" y="245" width="0.0103%" height="15" fill="rgb(219,96,24)"/><text x="61.4404%" y="255.50"></text></g><g><title>dyper_ops`v8::String::Utf8Length (95 samples, 0.33%)</title><rect x="60.8870%" y="277" width="0.3276%" height="15" fill="rgb(219,33,29)"/><text x="61.1370%" y="287.50"></text></g><g><title>dyper_ops`void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (4 samples, 0.01%)</title><rect x="61.2008%" y="261" width="0.0138%" height="15" fill="rgb(223,176,5)"/><text x="61.4508%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (6 samples, 0.02%)</title><rect x="61.3939%" y="261" width="0.0207%" height="15" fill="rgb(228,140,14)"/><text x="61.6439%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (4 samples, 0.01%)</title><rect x="61.4146%" y="261" width="0.0138%" height="15" fill="rgb(217,179,31)"/><text x="61.6646%" y="271.50"></text></g><g><title>dyper_ops`v8::String::WriteUtf8 (74 samples, 0.26%)</title><rect x="61.2146%" y="277" width="0.2552%" height="15" fill="rgb(230,9,30)"/><text x="61.4646%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.04%)</title><rect x="61.4284%" y="261" width="0.0414%" height="15" fill="rgb(230,136,20)"/><text x="61.6784%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (5 samples, 0.02%)</title><rect x="61.4732%" y="277" width="0.0172%" height="15" fill="rgb(215,210,22)"/><text x="61.7232%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (21 samples, 0.07%)</title><rect x="61.5008%" y="261" width="0.0724%" height="15" fill="rgb(218,43,5)"/><text x="61.7508%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.07%)</title><rect x="61.5042%" y="245" width="0.0690%" height="15" fill="rgb(216,11,5)"/><text x="61.7542%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.07%)</title><rect x="61.5077%" y="229" width="0.0655%" height="15" fill="rgb(209,82,29)"/><text x="61.7577%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.08%)</title><rect x="61.4973%" y="277" width="0.0828%" height="15" fill="rgb(244,115,12)"/><text x="61.7473%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::to_rust_string_lossy (211 samples, 0.73%)</title><rect x="60.8732%" y="293" width="0.7276%" height="15" fill="rgb(222,82,18)"/><text x="61.1232%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="61.5836%" y="277" width="0.0172%" height="15" fill="rgb(249,227,8)"/><text x="61.8336%" y="287.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__CONVERT__std__unique_ptr (5 samples, 0.02%)</title><rect x="61.6077%" y="293" width="0.0172%" height="15" fill="rgb(253,141,45)"/><text x="61.8577%" y="303.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__reset (7 samples, 0.02%)</title><rect x="61.6249%" y="293" width="0.0241%" height="15" fill="rgb(234,184,4)"/><text x="61.8749%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::ElementsKindToByteSize (3 samples, 0.01%)</title><rect x="61.7008%" y="261" width="0.0103%" height="15" fill="rgb(218,194,23)"/><text x="61.9508%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (4 samples, 0.01%)</title><rect x="61.8319%" y="245" width="0.0138%" height="15" fill="rgb(235,66,41)"/><text x="62.0819%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="61.8456%" y="245" width="0.0172%" height="15" fill="rgb(245,217,1)"/><text x="62.0956%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (4 samples, 0.01%)</title><rect x="61.8663%" y="213" width="0.0138%" height="15" fill="rgb(229,91,1)"/><text x="62.1163%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.03%)</title><rect x="61.8629%" y="245" width="0.0276%" height="15" fill="rgb(207,101,30)"/><text x="62.1129%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (7 samples, 0.02%)</title><rect x="61.8663%" y="229" width="0.0241%" height="15" fill="rgb(223,82,49)"/><text x="62.1163%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (3 samples, 0.01%)</title><rect x="61.8801%" y="213" width="0.0103%" height="15" fill="rgb(218,167,17)"/><text x="62.1301%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSTypedArray(v8::internal::ExternalArrayType, v8::internal::Handle (67 samples, 0.23%)</title><rect x="61.6767%" y="277" width="0.2311%" height="15" fill="rgb(208,103,14)"/><text x="61.9267%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayBufferView(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::FixedArrayBase&gt;, v8::internal::Handle (57 samples, 0.20%)</title><rect x="61.7112%" y="261" width="0.1966%" height="15" fill="rgb(238,20,8)"/><text x="61.9612%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::GetHeaderSize (5 samples, 0.02%)</title><rect x="61.8905%" y="245" width="0.0172%" height="15" fill="rgb(218,80,54)"/><text x="62.1405%" y="255.50"></text></g><g><title>dyper_ops`v8::Uint8Array::New(v8::Local (74 samples, 0.26%)</title><rect x="61.6560%" y="293" width="0.2552%" height="15" fill="rgb(240,144,17)"/><text x="61.9060%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSTypedArray(v8::internal::ExternalArrayType, v8::internal::Handle (4 samples, 0.01%)</title><rect x="61.9112%" y="293" width="0.0138%" height="15" fill="rgb(245,27,50)"/><text x="62.1612%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.03%)</title><rect x="61.9732%" y="277" width="0.0345%" height="15" fill="rgb(251,51,7)"/><text x="62.2232%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.03%)</title><rect x="61.9767%" y="261" width="0.0310%" height="15" fill="rgb(245,217,29)"/><text x="62.2267%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.06%)</title><rect x="61.9560%" y="293" width="0.0552%" height="15" fill="rgb(221,176,29)"/><text x="62.2060%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.02%)</title><rect x="62.0112%" y="293" width="0.0172%" height="15" fill="rgb(212,180,24)"/><text x="62.2612%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="62.1146%" y="229" width="0.0207%" height="15" fill="rgb(254,24,2)"/><text x="62.3646%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (46 samples, 0.16%)</title><rect x="62.0284%" y="293" width="0.1586%" height="15" fill="rgb(230,100,2)"/><text x="62.2784%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (44 samples, 0.15%)</title><rect x="62.0353%" y="277" width="0.1517%" height="15" fill="rgb(219,142,25)"/><text x="62.2853%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.14%)</title><rect x="62.0422%" y="261" width="0.1448%" height="15" fill="rgb(240,73,43)"/><text x="62.2922%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.14%)</title><rect x="62.0457%" y="245" width="0.1414%" height="15" fill="rgb(214,114,15)"/><text x="62.2957%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.05%)</title><rect x="62.1353%" y="229" width="0.0517%" height="15" fill="rgb(207,130,4)"/><text x="62.3853%" y="239.50"></text></g><g><title>dyper_ops`deno_core::bindings::encode (657 samples, 2.27%)</title><rect x="59.9352%" y="309" width="2.2657%" height="15" fill="rgb(221,25,40)"/><text x="60.1852%" y="319.50">d..</text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::with_backing_store (4 samples, 0.01%)</title><rect x="62.2043%" y="309" width="0.0138%" height="15" fill="rgb(241,184,7)"/><text x="62.4543%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::String&gt;&gt;::try_from (4 samples, 0.01%)</title><rect x="62.2215%" y="309" width="0.0138%" height="15" fill="rgb(235,159,4)"/><text x="62.4715%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_callback_scope_data (8 samples, 0.03%)</title><rect x="62.2422%" y="309" width="0.0276%" height="15" fill="rgb(214,87,48)"/><text x="62.4922%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.01%)</title><rect x="62.2698%" y="309" width="0.0103%" height="15" fill="rgb(246,198,24)"/><text x="62.5198%" y="319.50"></text></g><g><title>dyper_ops`v8__Uint8Array__New (3 samples, 0.01%)</title><rect x="62.3112%" y="309" width="0.0103%" height="15" fill="rgb(209,66,40)"/><text x="62.5612%" y="319.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (711 samples, 2.45%)</title><rect x="59.8800%" y="325" width="2.4519%" height="15" fill="rgb(233,147,39)"/><text x="60.1300%" y="335.50">dy..</text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.01%)</title><rect x="62.3526%" y="325" width="0.0103%" height="15" fill="rgb(231,145,52)"/><text x="62.6026%" y="335.50"></text></g><g><title>0x155400086ed3 (725 samples, 2.50%)</title><rect x="59.8662%" y="357" width="2.5002%" height="15" fill="rgb(206,20,26)"/><text x="60.1162%" y="367.50">0x..</text></g><g><title>dyper_ops`Builtins_CallApiCallback (725 samples, 2.50%)</title><rect x="59.8662%" y="341" width="2.5002%" height="15" fill="rgb(238,220,4)"/><text x="60.1162%" y="351.50">dy..</text></g><g><title>0x155400086f1a (32 samples, 0.11%)</title><rect x="62.3698%" y="357" width="0.1104%" height="15" fill="rgb(252,195,42)"/><text x="62.6198%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC_Megamorphic (32 samples, 0.11%)</title><rect x="62.3698%" y="341" width="0.1104%" height="15" fill="rgb(209,10,6)"/><text x="62.6198%" y="351.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="62.5836%" y="309" width="0.0207%" height="15" fill="rgb(229,3,52)"/><text x="62.8336%" y="319.50"></text></g><g><title>dyper_ops`&lt;T as core::any::Any&gt;::type_id (4 samples, 0.01%)</title><rect x="62.7285%" y="293" width="0.0138%" height="15" fill="rgb(253,49,37)"/><text x="62.9785%" y="303.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (3 samples, 0.01%)</title><rect x="62.7423%" y="293" width="0.0103%" height="15" fill="rgb(240,103,49)"/><text x="62.9923%" y="303.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="62.7664%" y="293" width="0.0103%" height="15" fill="rgb(250,182,30)"/><text x="63.0164%" y="303.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (5 samples, 0.02%)</title><rect x="62.7767%" y="293" width="0.0172%" height="15" fill="rgb(248,8,30)"/><text x="63.0267%" y="303.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::BuildTypeIdHasher as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.02%)</title><rect x="62.8009%" y="293" width="0.0172%" height="15" fill="rgb(237,120,30)"/><text x="63.0509%" y="303.50"></text></g><g><title>dyper_ops`std::__1::__shared_weak_count::__release_weak (6 samples, 0.02%)</title><rect x="62.9974%" y="197" width="0.0207%" height="15" fill="rgb(221,146,34)"/><text x="63.2474%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="63.4044%" y="101" width="0.0172%" height="15" fill="rgb(242,55,13)"/><text x="63.6544%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (44 samples, 0.15%)</title><rect x="63.3044%" y="149" width="0.1517%" height="15" fill="rgb(242,112,31)"/><text x="63.5544%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.14%)</title><rect x="63.3113%" y="133" width="0.1448%" height="15" fill="rgb(249,192,27)"/><text x="63.5613%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (40 samples, 0.14%)</title><rect x="63.3182%" y="117" width="0.1379%" height="15" fill="rgb(208,204,44)"/><text x="63.5682%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.03%)</title><rect x="63.4216%" y="101" width="0.0345%" height="15" fill="rgb(208,93,54)"/><text x="63.6716%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="63.4458%" y="85" width="0.0103%" height="15" fill="rgb(242,1,31)"/><text x="63.6958%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (47 samples, 0.16%)</title><rect x="63.3009%" y="165" width="0.1621%" height="15" fill="rgb(241,83,25)"/><text x="63.5509%" y="175.50"></text></g><g><title>dyper_ops`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::__unordered_map_hasher&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::hash&lt;void const*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::equal_to&lt;void const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;void const*, std::__1::pair&lt;void const* const, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt;(void const* const&amp;, std::__1::pair&lt;void const* const, std::__1::weak_ptr (130 samples, 0.45%)</title><rect x="63.0181%" y="197" width="0.4483%" height="15" fill="rgb(205,169,50)"/><text x="63.2681%" y="207.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (48 samples, 0.17%)</title><rect x="63.3009%" y="181" width="0.1655%" height="15" fill="rgb(239,186,37)"/><text x="63.5509%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (32 samples, 0.11%)</title><rect x="63.4664%" y="197" width="0.1104%" height="15" fill="rgb(205,221,10)"/><text x="63.7164%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (32 samples, 0.11%)</title><rect x="63.4664%" y="181" width="0.1104%" height="15" fill="rgb(218,196,15)"/><text x="63.7164%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (24 samples, 0.08%)</title><rect x="63.5768%" y="181" width="0.0828%" height="15" fill="rgb(218,196,35)"/><text x="63.8268%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::GlobalBackingStoreRegistry::Register(std::__1::shared_ptr (207 samples, 0.71%)</title><rect x="62.9492%" y="213" width="0.7138%" height="15" fill="rgb(233,63,24)"/><text x="63.1992%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (25 samples, 0.09%)</title><rect x="63.5768%" y="197" width="0.0862%" height="15" fill="rgb(225,8,4)"/><text x="63.8268%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::GetBackingStore (5 samples, 0.02%)</title><rect x="63.6630%" y="213" width="0.0172%" height="15" fill="rgb(234,105,35)"/><text x="63.9130%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.01%)</title><rect x="63.6803%" y="213" width="0.0103%" height="15" fill="rgb(236,21,32)"/><text x="63.9303%" y="223.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::get_backing_store (241 samples, 0.83%)</title><rect x="62.8630%" y="261" width="0.8311%" height="15" fill="rgb(228,109,6)"/><text x="63.1130%" y="271.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__GetBackingStore (240 samples, 0.83%)</title><rect x="62.8664%" y="245" width="0.8276%" height="15" fill="rgb(229,215,31)"/><text x="63.1164%" y="255.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::GetBackingStore (240 samples, 0.83%)</title><rect x="62.8664%" y="229" width="0.8276%" height="15" fill="rgb(221,52,54)"/><text x="63.1164%" y="239.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::ArrayBufferView&gt;&gt;::try_from (4 samples, 0.01%)</title><rect x="63.6975%" y="261" width="0.0138%" height="15" fill="rgb(252,129,43)"/><text x="63.9475%" y="271.50"></text></g><g><title>dyper_ops`v8::Value::IsArrayBufferView (3 samples, 0.01%)</title><rect x="63.7009%" y="245" width="0.0103%" height="15" fill="rgb(248,183,27)"/><text x="63.9509%" y="255.50"></text></g><g><title>dyper_ops`v8::ArrayBufferView::Buffer (5 samples, 0.02%)</title><rect x="63.7113%" y="261" width="0.0172%" height="15" fill="rgb(250,0,22)"/><text x="63.9613%" y="271.50"></text></g><g><title>dyper_ops`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (258 samples, 0.89%)</title><rect x="62.8561%" y="277" width="0.8897%" height="15" fill="rgb(213,166,10)"/><text x="63.1061%" y="287.50"></text></g><g><title>dyper_ops`smallvec::SmallVec&lt;A&gt;::reserve (5 samples, 0.02%)</title><rect x="63.7596%" y="277" width="0.0172%" height="15" fill="rgb(207,163,36)"/><text x="64.0096%" y="287.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (280 samples, 0.97%)</title><rect x="62.8181%" y="293" width="0.9656%" height="15" fill="rgb(208,122,22)"/><text x="63.0681%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="63.8975%" y="165" width="0.0138%" height="15" fill="rgb(207,104,49)"/><text x="64.1475%" y="175.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (40 samples, 0.14%)</title><rect x="63.8113%" y="245" width="0.1379%" height="15" fill="rgb(248,211,50)"/><text x="64.0613%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (39 samples, 0.13%)</title><rect x="63.8147%" y="229" width="0.1345%" height="15" fill="rgb(217,13,45)"/><text x="64.0647%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (37 samples, 0.13%)</title><rect x="63.8216%" y="213" width="0.1276%" height="15" fill="rgb(211,216,49)"/><text x="64.0716%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.11%)</title><rect x="63.8354%" y="197" width="0.1138%" height="15" fill="rgb(221,58,53)"/><text x="64.0854%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.11%)</title><rect x="63.8354%" y="181" width="0.1138%" height="15" fill="rgb(220,112,41)"/><text x="64.0854%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.04%)</title><rect x="63.9113%" y="165" width="0.0379%" height="15" fill="rgb(236,38,28)"/><text x="64.1613%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.03%)</title><rect x="63.9216%" y="149" width="0.0276%" height="15" fill="rgb(227,195,22)"/><text x="64.1716%" y="159.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::from_unique_ptr (43 samples, 0.15%)</title><rect x="63.8044%" y="277" width="0.1483%" height="15" fill="rgb(214,55,33)"/><text x="64.0544%" y="287.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__CONVERT__std__unique_ptr (43 samples, 0.15%)</title><rect x="63.8044%" y="261" width="0.1483%" height="15" fill="rgb(248,80,13)"/><text x="64.0544%" y="271.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::NewBackingStore(void*, unsigned long, void (*) (3 samples, 0.01%)</title><rect x="63.9561%" y="261" width="0.0103%" height="15" fill="rgb(238,52,6)"/><text x="64.2061%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="64.0665%" y="133" width="0.0103%" height="15" fill="rgb(224,198,47)"/><text x="64.3165%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="64.0803%" y="133" width="0.0172%" height="15" fill="rgb(233,171,20)"/><text x="64.3303%" y="143.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::new_backing_store_from_boxed_slice (50 samples, 0.17%)</title><rect x="63.9527%" y="277" width="0.1724%" height="15" fill="rgb(241,30,25)"/><text x="64.2027%" y="287.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__NewBackingStore__with_data (46 samples, 0.16%)</title><rect x="63.9665%" y="261" width="0.1586%" height="15" fill="rgb(207,171,38)"/><text x="64.2165%" y="271.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::NewBackingStore(void*, unsigned long, void (*) (45 samples, 0.16%)</title><rect x="63.9699%" y="245" width="0.1552%" height="15" fill="rgb(234,70,1)"/><text x="64.2199%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::BackingStore::WrapAllocation(void*, unsigned long, void (*) (45 samples, 0.16%)</title><rect x="63.9699%" y="229" width="0.1552%" height="15" fill="rgb(232,178,18)"/><text x="64.2199%" y="239.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (36 samples, 0.12%)</title><rect x="64.0010%" y="213" width="0.1241%" height="15" fill="rgb(241,78,40)"/><text x="64.2510%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (36 samples, 0.12%)</title><rect x="64.0010%" y="197" width="0.1241%" height="15" fill="rgb(222,35,25)"/><text x="64.2510%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (36 samples, 0.12%)</title><rect x="64.0010%" y="181" width="0.1241%" height="15" fill="rgb(207,92,16)"/><text x="64.2510%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.12%)</title><rect x="64.0010%" y="165" width="0.1241%" height="15" fill="rgb(216,59,51)"/><text x="64.2510%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (34 samples, 0.12%)</title><rect x="64.0079%" y="149" width="0.1172%" height="15" fill="rgb(213,80,28)"/><text x="64.2579%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.03%)</title><rect x="64.0975%" y="133" width="0.0276%" height="15" fill="rgb(220,93,7)"/><text x="64.3475%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (5 samples, 0.02%)</title><rect x="64.2527%" y="165" width="0.0172%" height="15" fill="rgb(225,24,44)"/><text x="64.5027%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (3 samples, 0.01%)</title><rect x="64.2699%" y="133" width="0.0103%" height="15" fill="rgb(243,74,40)"/><text x="64.5199%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.01%)</title><rect x="64.2699%" y="117" width="0.0103%" height="15" fill="rgb(228,39,7)"/><text x="64.5199%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (12 samples, 0.04%)</title><rect x="64.2424%" y="197" width="0.0414%" height="15" fill="rgb(227,79,8)"/><text x="64.4924%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (11 samples, 0.04%)</title><rect x="64.2458%" y="181" width="0.0379%" height="15" fill="rgb(236,58,11)"/><text x="64.4958%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (4 samples, 0.01%)</title><rect x="64.2699%" y="165" width="0.0138%" height="15" fill="rgb(249,63,35)"/><text x="64.5199%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.01%)</title><rect x="64.2699%" y="149" width="0.0138%" height="15" fill="rgb(252,114,16)"/><text x="64.5199%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (15 samples, 0.05%)</title><rect x="64.2355%" y="213" width="0.0517%" height="15" fill="rgb(254,151,24)"/><text x="64.4855%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="64.2872%" y="213" width="0.0207%" height="15" fill="rgb(253,54,39)"/><text x="64.5372%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (13 samples, 0.04%)</title><rect x="64.3079%" y="213" width="0.0448%" height="15" fill="rgb(243,25,45)"/><text x="64.5579%" y="223.50"></text></g><g><title>dyper_ops`v8::Isolate::AdjustAmountOfExternalAllocatedMemory (6 samples, 0.02%)</title><rect x="64.3872%" y="197" width="0.0207%" height="15" fill="rgb(234,134,9)"/><text x="64.6372%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::ArrayBufferSweeper::Append (16 samples, 0.06%)</title><rect x="64.4079%" y="197" width="0.0552%" height="15" fill="rgb(227,166,31)"/><text x="64.6579%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::ArrayBufferSweeper::AdjustCountersAndMergeIfPossible (3 samples, 0.01%)</title><rect x="64.4527%" y="181" width="0.0103%" height="15" fill="rgb(245,143,41)"/><text x="64.7027%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.02%)</title><rect x="64.6010%" y="85" width="0.0241%" height="15" fill="rgb(238,181,32)"/><text x="64.8510%" y="95.50"></text></g><g><title>dyper_ops`v8::internal::AllocWithRetry (45 samples, 0.16%)</title><rect x="64.5182%" y="165" width="0.1552%" height="15" fill="rgb(224,113,18)"/><text x="64.7682%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (43 samples, 0.15%)</title><rect x="64.5251%" y="149" width="0.1483%" height="15" fill="rgb(240,229,28)"/><text x="64.7751%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (42 samples, 0.14%)</title><rect x="64.5286%" y="133" width="0.1448%" height="15" fill="rgb(250,185,3)"/><text x="64.7786%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.13%)</title><rect x="64.5389%" y="117" width="0.1345%" height="15" fill="rgb(212,59,25)"/><text x="64.7889%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.13%)</title><rect x="64.5389%" y="101" width="0.1345%" height="15" fill="rgb(221,87,20)"/><text x="64.7889%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.05%)</title><rect x="64.6251%" y="85" width="0.0483%" height="15" fill="rgb(213,74,28)"/><text x="64.8751%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.03%)</title><rect x="64.6458%" y="69" width="0.0276%" height="15" fill="rgb(224,132,34)"/><text x="64.8958%" y="79.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::Attach(std::__1::shared_ptr (62 samples, 0.21%)</title><rect x="64.4631%" y="197" width="0.2138%" height="15" fill="rgb(222,101,24)"/><text x="64.7131%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Malloced::operator new (46 samples, 0.16%)</title><rect x="64.5182%" y="181" width="0.1586%" height="15" fill="rgb(254,142,4)"/><text x="64.7682%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::Setup(v8::internal::SharedFlag, std::__1::shared_ptr (91 samples, 0.31%)</title><rect x="64.3665%" y="213" width="0.3138%" height="15" fill="rgb(230,229,49)"/><text x="64.6165%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayBuffer(std::__1::shared_ptr (141 samples, 0.49%)</title><rect x="64.2010%" y="229" width="0.4862%" height="15" fill="rgb(238,70,47)"/><text x="64.4510%" y="239.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::New(v8::Isolate*, std::__1::shared_ptr (156 samples, 0.54%)</title><rect x="64.1596%" y="245" width="0.5380%" height="15" fill="rgb(231,160,17)"/><text x="64.4096%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Logger::is_logging (3 samples, 0.01%)</title><rect x="64.6872%" y="229" width="0.0103%" height="15" fill="rgb(218,68,53)"/><text x="64.9372%" y="239.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::with_backing_store (167 samples, 0.58%)</title><rect x="64.1251%" y="277" width="0.5759%" height="15" fill="rgb(236,111,10)"/><text x="64.3751%" y="287.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__New__with_backing_store (163 samples, 0.56%)</title><rect x="64.1389%" y="261" width="0.5621%" height="15" fill="rgb(224,34,41)"/><text x="64.3889%" y="271.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__reset (5 samples, 0.02%)</title><rect x="64.7045%" y="277" width="0.0172%" height="15" fill="rgb(241,118,19)"/><text x="64.9545%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::ElementsKindToByteSize (3 samples, 0.01%)</title><rect x="64.7803%" y="245" width="0.0103%" height="15" fill="rgb(238,129,25)"/><text x="65.0303%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="64.8355%" y="229" width="0.0103%" height="15" fill="rgb(238,22,31)"/><text x="65.0855%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="64.8459%" y="229" width="0.0172%" height="15" fill="rgb(222,174,48)"/><text x="65.0959%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (4 samples, 0.01%)</title><rect x="64.8803%" y="197" width="0.0138%" height="15" fill="rgb(206,152,40)"/><text x="65.1303%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (13 samples, 0.04%)</title><rect x="64.8631%" y="229" width="0.0448%" height="15" fill="rgb(218,99,54)"/><text x="65.1131%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (8 samples, 0.03%)</title><rect x="64.8803%" y="213" width="0.0276%" height="15" fill="rgb(220,174,26)"/><text x="65.1303%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (4 samples, 0.01%)</title><rect x="64.8941%" y="197" width="0.0138%" height="15" fill="rgb(245,116,9)"/><text x="65.1441%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.01%)</title><rect x="64.8941%" y="181" width="0.0138%" height="15" fill="rgb(209,72,35)"/><text x="65.1441%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (4 samples, 0.01%)</title><rect x="64.8941%" y="165" width="0.0138%" height="15" fill="rgb(226,126,21)"/><text x="65.1441%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.01%)</title><rect x="64.8976%" y="149" width="0.0103%" height="15" fill="rgb(227,192,1)"/><text x="65.1476%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayBufferView(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::FixedArrayBase&gt;, v8::internal::Handle (35 samples, 0.12%)</title><rect x="64.7907%" y="245" width="0.1207%" height="15" fill="rgb(237,180,29)"/><text x="65.0407%" y="255.50"></text></g><g><title>dyper_ops`v8::Uint8Array::New(v8::Local (56 samples, 0.19%)</title><rect x="64.7217%" y="277" width="0.1931%" height="15" fill="rgb(230,197,35)"/><text x="64.9717%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSTypedArray(v8::internal::ExternalArrayType, v8::internal::Handle (54 samples, 0.19%)</title><rect x="64.7286%" y="261" width="0.1862%" height="15" fill="rgb(246,193,31)"/><text x="64.9786%" y="271.50"></text></g><g><title>dyper_ops`deno_core::bindings::boxed_slice_to_uint8array (332 samples, 1.14%)</title><rect x="63.7837%" y="293" width="1.1449%" height="15" fill="rgb(241,36,4)"/><text x="64.0337%" y="303.50"></text></g><g><title>dyper_ops`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="65.0114%" y="261" width="0.0103%" height="15" fill="rgb(241,130,17)"/><text x="65.2614%" y="271.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="65.0217%" y="261" width="0.0103%" height="15" fill="rgb(206,137,32)"/><text x="65.2717%" y="271.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="65.1148%" y="245" width="0.0207%" height="15" fill="rgb(237,228,51)"/><text x="65.3648%" y="255.50"></text></g><g><title>dyper_ops`&lt;bytes::bytes::Bytes as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.02%)</title><rect x="65.1355%" y="245" width="0.0207%" height="15" fill="rgb(243,6,42)"/><text x="65.3855%" y="255.50"></text></g><g><title>dyper_ops`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="65.1562%" y="245" width="0.0241%" height="15" fill="rgb(251,74,28)"/><text x="65.4062%" y="255.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::reset (3 samples, 0.01%)</title><rect x="65.1873%" y="245" width="0.0103%" height="15" fill="rgb(218,20,49)"/><text x="65.4373%" y="255.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="65.1976%" y="245" width="0.0241%" height="15" fill="rgb(238,28,14)"/><text x="65.4476%" y="255.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__reset (4 samples, 0.01%)</title><rect x="65.2079%" y="229" width="0.0138%" height="15" fill="rgb(229,40,46)"/><text x="65.4579%" y="239.50"></text></g><g><title>dyper_ops`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="65.2252%" y="245" width="0.0103%" height="15" fill="rgb(244,195,20)"/><text x="65.4752%" y="255.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="65.5631%" y="213" width="0.0241%" height="15" fill="rgb(253,56,35)"/><text x="65.8131%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="65.5942%" y="213" width="0.0138%" height="15" fill="rgb(210,149,44)"/><text x="65.8442%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.12%)</title><rect x="65.6080%" y="213" width="0.1207%" height="15" fill="rgb(240,135,12)"/><text x="65.8580%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.08%)</title><rect x="65.6459%" y="197" width="0.0828%" height="15" fill="rgb(251,24,50)"/><text x="65.8959%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.07%)</title><rect x="65.6563%" y="181" width="0.0724%" height="15" fill="rgb(243,200,47)"/><text x="65.9063%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.02%)</title><rect x="65.8045%" y="197" width="0.0241%" height="15" fill="rgb(224,166,26)"/><text x="66.0545%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.08%)</title><rect x="65.9080%" y="181" width="0.0759%" height="15" fill="rgb(233,0,47)"/><text x="66.1580%" y="191.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (138 samples, 0.48%)</title><rect x="65.5183%" y="229" width="0.4759%" height="15" fill="rgb(253,80,5)"/><text x="65.7683%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (77 samples, 0.27%)</title><rect x="65.7287%" y="213" width="0.2655%" height="15" fill="rgb(214,133,25)"/><text x="65.9787%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (47 samples, 0.16%)</title><rect x="65.8321%" y="197" width="0.1621%" height="15" fill="rgb(209,27,14)"/><text x="66.0821%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.01%)</title><rect x="65.9839%" y="181" width="0.0103%" height="15" fill="rgb(219,102,51)"/><text x="66.2339%" y="191.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.06%)</title><rect x="66.1597%" y="213" width="0.0552%" height="15" fill="rgb(237,18,16)"/><text x="66.4097%" y="223.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (13 samples, 0.04%)</title><rect x="66.2184%" y="213" width="0.0448%" height="15" fill="rgb(241,85,17)"/><text x="66.4684%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.02%)</title><rect x="66.4977%" y="101" width="0.0241%" height="15" fill="rgb(236,90,42)"/><text x="66.7477%" y="111.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (46 samples, 0.16%)</title><rect x="66.4080%" y="197" width="0.1586%" height="15" fill="rgb(249,57,21)"/><text x="66.6580%" y="207.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (40 samples, 0.14%)</title><rect x="66.4287%" y="181" width="0.1379%" height="15" fill="rgb(243,12,36)"/><text x="66.6787%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (39 samples, 0.13%)</title><rect x="66.4322%" y="165" width="0.1345%" height="15" fill="rgb(253,128,47)"/><text x="66.6822%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (37 samples, 0.13%)</title><rect x="66.4391%" y="149" width="0.1276%" height="15" fill="rgb(207,33,20)"/><text x="66.6891%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.12%)</title><rect x="66.4425%" y="133" width="0.1241%" height="15" fill="rgb(233,215,35)"/><text x="66.6925%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (35 samples, 0.12%)</title><rect x="66.4460%" y="117" width="0.1207%" height="15" fill="rgb(249,188,52)"/><text x="66.6960%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.04%)</title><rect x="66.5253%" y="101" width="0.0414%" height="15" fill="rgb(225,12,32)"/><text x="66.7753%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="66.5494%" y="85" width="0.0172%" height="15" fill="rgb(247,98,14)"/><text x="66.7994%" y="95.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="66.5667%" y="197" width="0.0172%" height="15" fill="rgb(247,219,48)"/><text x="66.8167%" y="207.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (5 samples, 0.02%)</title><rect x="66.6253%" y="181" width="0.0172%" height="15" fill="rgb(253,60,48)"/><text x="66.8753%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="66.7701%" y="85" width="0.0103%" height="15" fill="rgb(245,15,52)"/><text x="67.0201%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.12%)</title><rect x="66.6977%" y="149" width="0.1172%" height="15" fill="rgb(220,133,28)"/><text x="66.9477%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.12%)</title><rect x="66.6977%" y="133" width="0.1172%" height="15" fill="rgb(217,180,4)"/><text x="66.9477%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.12%)</title><rect x="66.6977%" y="117" width="0.1172%" height="15" fill="rgb(251,24,1)"/><text x="66.9477%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.11%)</title><rect x="66.7012%" y="101" width="0.1138%" height="15" fill="rgb(212,185,49)"/><text x="66.9512%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.03%)</title><rect x="66.7805%" y="85" width="0.0345%" height="15" fill="rgb(215,175,22)"/><text x="67.0305%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="66.8046%" y="69" width="0.0103%" height="15" fill="rgb(250,205,14)"/><text x="67.0546%" y="79.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (41 samples, 0.14%)</title><rect x="66.6805%" y="165" width="0.1414%" height="15" fill="rgb(225,211,22)"/><text x="66.9305%" y="175.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (70 samples, 0.24%)</title><rect x="66.5839%" y="197" width="0.2414%" height="15" fill="rgb(251,179,42)"/><text x="66.8339%" y="207.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (53 samples, 0.18%)</title><rect x="66.6425%" y="181" width="0.1828%" height="15" fill="rgb(208,216,51)"/><text x="66.8925%" y="191.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (166 samples, 0.57%)</title><rect x="66.2701%" y="213" width="0.5725%" height="15" fill="rgb(235,36,11)"/><text x="66.5201%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="66.8287%" y="197" width="0.0138%" height="15" fill="rgb(213,189,28)"/><text x="67.0787%" y="207.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (246 samples, 0.85%)</title><rect x="65.9977%" y="229" width="0.8483%" height="15" fill="rgb(227,203,42)"/><text x="66.2477%" y="239.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (4 samples, 0.01%)</title><rect x="66.8460%" y="229" width="0.0138%" height="15" fill="rgb(244,72,36)"/><text x="67.0960%" y="239.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.02%)</title><rect x="66.8943%" y="213" width="0.0172%" height="15" fill="rgb(213,53,17)"/><text x="67.1443%" y="223.50"></text></g><g><title>dyper_ops`serde_json::ser::format_escaped_str (27 samples, 0.09%)</title><rect x="66.9115%" y="213" width="0.0931%" height="15" fill="rgb(207,167,3)"/><text x="67.1615%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="66.9908%" y="197" width="0.0138%" height="15" fill="rgb(216,98,30)"/><text x="67.2408%" y="207.50"></text></g><g><title>dyper_ops`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 0.06%)</title><rect x="67.0046%" y="213" width="0.0586%" height="15" fill="rgb(236,123,15)"/><text x="67.2546%" y="223.50"></text></g><g><title>dyper_ops`serde::ser::SerializeMap::serialize_entry (60 samples, 0.21%)</title><rect x="66.8598%" y="229" width="0.2069%" height="15" fill="rgb(248,81,50)"/><text x="67.1098%" y="239.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (8 samples, 0.03%)</title><rect x="67.1357%" y="213" width="0.0276%" height="15" fill="rgb(214,120,4)"/><text x="67.3857%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="67.1460%" y="197" width="0.0172%" height="15" fill="rgb(208,179,34)"/><text x="67.3960%" y="207.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (5 samples, 0.02%)</title><rect x="67.1633%" y="213" width="0.0172%" height="15" fill="rgb(227,140,7)"/><text x="67.4133%" y="223.50"></text></g><g><title>dyper_ops`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (34 samples, 0.12%)</title><rect x="67.0667%" y="229" width="0.1172%" height="15" fill="rgb(214,22,6)"/><text x="67.3167%" y="239.50"></text></g><g><title>dyper_ops`serde_json::ser::format_escaped_str (5 samples, 0.02%)</title><rect x="67.1839%" y="229" width="0.0172%" height="15" fill="rgb(207,137,27)"/><text x="67.4339%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.02%)</title><rect x="67.2150%" y="229" width="0.0207%" height="15" fill="rgb(210,8,46)"/><text x="67.4650%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="67.2391%" y="229" width="0.0103%" height="15" fill="rgb(240,16,54)"/><text x="67.4891%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.05%)</title><rect x="67.2495%" y="229" width="0.0483%" height="15" fill="rgb(211,209,29)"/><text x="67.4995%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="67.2736%" y="213" width="0.0241%" height="15" fill="rgb(226,228,24)"/><text x="67.5236%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="67.2736%" y="197" width="0.0241%" height="15" fill="rgb(222,84,9)"/><text x="67.5236%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="67.4046%" y="197" width="0.0241%" height="15" fill="rgb(234,203,30)"/><text x="67.6546%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (42 samples, 0.14%)</title><rect x="67.2977%" y="229" width="0.1448%" height="15" fill="rgb(238,109,14)"/><text x="67.5477%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (31 samples, 0.11%)</title><rect x="67.3357%" y="213" width="0.1069%" height="15" fill="rgb(233,206,34)"/><text x="67.5857%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.01%)</title><rect x="67.4288%" y="197" width="0.0138%" height="15" fill="rgb(220,167,47)"/><text x="67.6788%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="67.4736%" y="197" width="0.0103%" height="15" fill="rgb(238,105,10)"/><text x="67.7236%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="67.6736%" y="165" width="0.0103%" height="15" fill="rgb(213,227,17)"/><text x="67.9236%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="67.6840%" y="165" width="0.0103%" height="15" fill="rgb(217,132,38)"/><text x="67.9340%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.09%)</title><rect x="67.6978%" y="165" width="0.0931%" height="15" fill="rgb(242,146,4)"/><text x="67.9478%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="67.7667%" y="149" width="0.0241%" height="15" fill="rgb(212,61,9)"/><text x="68.0167%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (97 samples, 0.33%)</title><rect x="67.4598%" y="213" width="0.3345%" height="15" fill="rgb(247,126,22)"/><text x="67.7098%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (90 samples, 0.31%)</title><rect x="67.4840%" y="197" width="0.3104%" height="15" fill="rgb(220,196,2)"/><text x="67.7340%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (86 samples, 0.30%)</title><rect x="67.4978%" y="181" width="0.2966%" height="15" fill="rgb(208,46,4)"/><text x="67.7478%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (103 samples, 0.36%)</title><rect x="67.4426%" y="229" width="0.3552%" height="15" fill="rgb(252,104,46)"/><text x="67.6926%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="67.8495%" y="197" width="0.0172%" height="15" fill="rgb(237,152,48)"/><text x="68.0995%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.05%)</title><rect x="67.8736%" y="197" width="0.0517%" height="15" fill="rgb(221,59,37)"/><text x="68.1236%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="67.9012%" y="181" width="0.0241%" height="15" fill="rgb(209,202,51)"/><text x="68.1512%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.01%)</title><rect x="67.9116%" y="165" width="0.0138%" height="15" fill="rgb(228,81,30)"/><text x="68.1616%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="68.1116%" y="149" width="0.0138%" height="15" fill="rgb(227,42,39)"/><text x="68.3616%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (58 samples, 0.20%)</title><rect x="67.9633%" y="181" width="0.2000%" height="15" fill="rgb(221,26,2)"/><text x="68.2133%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (39 samples, 0.13%)</title><rect x="68.0288%" y="165" width="0.1345%" height="15" fill="rgb(254,61,31)"/><text x="68.2788%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.04%)</title><rect x="68.1254%" y="149" width="0.0379%" height="15" fill="rgb(222,173,38)"/><text x="68.3754%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (99 samples, 0.34%)</title><rect x="67.8254%" y="213" width="0.3414%" height="15" fill="rgb(218,50,12)"/><text x="68.0754%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_shrink_in_place (70 samples, 0.24%)</title><rect x="67.9254%" y="197" width="0.2414%" height="15" fill="rgb(223,88,40)"/><text x="68.1754%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="68.1702%" y="213" width="0.0103%" height="15" fill="rgb(237,54,19)"/><text x="68.4202%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.01%)</title><rect x="68.1702%" y="197" width="0.0103%" height="15" fill="rgb(251,129,25)"/><text x="68.4202%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (121 samples, 0.42%)</title><rect x="67.8047%" y="229" width="0.4173%" height="15" fill="rgb(238,97,19)"/><text x="68.0547%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_shrink_in_place (12 samples, 0.04%)</title><rect x="68.1806%" y="213" width="0.0414%" height="15" fill="rgb(240,169,18)"/><text x="68.4306%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.01%)</title><rect x="68.2219%" y="229" width="0.0103%" height="15" fill="rgb(230,187,49)"/><text x="68.4719%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="68.2323%" y="229" width="0.0103%" height="15" fill="rgb(209,44,26)"/><text x="68.4823%" y="239.50"></text></g><g><title>dyper_ops`deno_core::ops::json_serialize_op_result (865 samples, 2.98%)</title><rect x="65.2631%" y="245" width="2.9830%" height="15" fill="rgb(244,0,6)"/><text x="65.5131%" y="255.50">dyp..</text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve_one (3 samples, 0.01%)</title><rect x="68.4875%" y="229" width="0.0103%" height="15" fill="rgb(248,18,21)"/><text x="68.7375%" y="239.50"></text></g><g><title>dyper_ops`http::header::map::hash_elem_using (4 samples, 0.01%)</title><rect x="68.4978%" y="229" width="0.0138%" height="15" fill="rgb(245,180,19)"/><text x="68.7478%" y="239.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::from_bytes (3 samples, 0.01%)</title><rect x="68.5116%" y="229" width="0.0103%" height="15" fill="rgb(252,118,36)"/><text x="68.7616%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="68.7634%" y="133" width="0.0103%" height="15" fill="rgb(210,224,19)"/><text x="69.0134%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="68.7737%" y="133" width="0.0241%" height="15" fill="rgb(218,30,24)"/><text x="69.0237%" y="143.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::copy_from_slice (39 samples, 0.13%)</title><rect x="68.6668%" y="213" width="0.1345%" height="15" fill="rgb(219,75,50)"/><text x="68.9168%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (33 samples, 0.11%)</title><rect x="68.6875%" y="197" width="0.1138%" height="15" fill="rgb(234,72,50)"/><text x="68.9375%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (32 samples, 0.11%)</title><rect x="68.6909%" y="181" width="0.1104%" height="15" fill="rgb(219,100,48)"/><text x="68.9409%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.10%)</title><rect x="68.7013%" y="165" width="0.1000%" height="15" fill="rgb(253,5,41)"/><text x="68.9513%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.10%)</title><rect x="68.7013%" y="149" width="0.1000%" height="15" fill="rgb(247,181,11)"/><text x="68.9513%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="68.9220%" y="165" width="0.0103%" height="15" fill="rgb(222,223,25)"/><text x="69.1720%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.02%)</title><rect x="69.0530%" y="133" width="0.0172%" height="15" fill="rgb(214,198,28)"/><text x="69.3030%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.04%)</title><rect x="69.0737%" y="133" width="0.0379%" height="15" fill="rgb(230,46,43)"/><text x="69.3237%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.27%)</title><rect x="68.9323%" y="165" width="0.2690%" height="15" fill="rgb(233,65,53)"/><text x="69.1823%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (76 samples, 0.26%)</title><rect x="68.9392%" y="149" width="0.2621%" height="15" fill="rgb(221,121,27)"/><text x="69.1892%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.09%)</title><rect x="69.1117%" y="133" width="0.0897%" height="15" fill="rgb(247,70,47)"/><text x="69.3617%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="69.1841%" y="117" width="0.0172%" height="15" fill="rgb(228,85,35)"/><text x="69.4341%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (86 samples, 0.30%)</title><rect x="68.9082%" y="181" width="0.2966%" height="15" fill="rgb(209,50,18)"/><text x="69.1582%" y="191.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve_one (117 samples, 0.40%)</title><rect x="68.8047%" y="213" width="0.4035%" height="15" fill="rgb(250,19,35)"/><text x="69.0547%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (89 samples, 0.31%)</title><rect x="68.9013%" y="197" width="0.3069%" height="15" fill="rgb(253,107,29)"/><text x="69.1513%" y="207.50"></text></g><g><title>dyper_ops`http::header::map::hash_elem_using (7 samples, 0.02%)</title><rect x="69.2082%" y="213" width="0.0241%" height="15" fill="rgb(252,179,29)"/><text x="69.4582%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.08%)</title><rect x="69.2944%" y="181" width="0.0828%" height="15" fill="rgb(238,194,6)"/><text x="69.5444%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (22 samples, 0.08%)</title><rect x="69.3013%" y="165" width="0.0759%" height="15" fill="rgb(238,164,29)"/><text x="69.5513%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.08%)</title><rect x="69.3013%" y="149" width="0.0759%" height="15" fill="rgb(224,25,9)"/><text x="69.5513%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.07%)</title><rect x="69.3082%" y="133" width="0.0690%" height="15" fill="rgb(244,153,23)"/><text x="69.5582%" y="143.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::copy_from_slice (30 samples, 0.10%)</title><rect x="69.2772%" y="197" width="0.1035%" height="15" fill="rgb(212,203,14)"/><text x="69.5272%" y="207.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::from_bytes (57 samples, 0.20%)</title><rect x="69.2324%" y="213" width="0.1966%" height="15" fill="rgb(220,164,20)"/><text x="69.4824%" y="223.50"></text></g><g><title>dyper_ops`http::header::name::parse_hdr (14 samples, 0.05%)</title><rect x="69.3806%" y="197" width="0.0483%" height="15" fill="rgb(222,203,48)"/><text x="69.6306%" y="207.50"></text></g><g><title>dyper_ops`http::header::name::parse_hdr (3 samples, 0.01%)</title><rect x="69.4289%" y="213" width="0.0103%" height="15" fill="rgb(215,159,22)"/><text x="69.6789%" y="223.50"></text></g><g><title>dyper_ops`http::response::Builder::header (298 samples, 1.03%)</title><rect x="68.5220%" y="229" width="1.0277%" height="15" fill="rgb(216,183,47)"/><text x="68.7720%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.11%)</title><rect x="69.4393%" y="213" width="0.1104%" height="15" fill="rgb(229,195,25)"/><text x="69.6893%" y="223.50"></text></g><g><title>dyper_ops`http::response::Builder::status (15 samples, 0.05%)</title><rect x="69.5496%" y="229" width="0.0517%" height="15" fill="rgb(224,132,51)"/><text x="69.7996%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.03%)</title><rect x="69.5669%" y="213" width="0.0345%" height="15" fill="rgb(240,63,7)"/><text x="69.8169%" y="223.50"></text></g><g><title>dyper_ops`http::response::Parts::new (4 samples, 0.01%)</title><rect x="69.6014%" y="229" width="0.0138%" height="15" fill="rgb(249,182,41)"/><text x="69.8514%" y="239.50"></text></g><g><title>dyper_ops`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="69.6462%" y="213" width="0.0103%" height="15" fill="rgb(243,47,26)"/><text x="69.8962%" y="223.50"></text></g><g><title>dyper_ops`__rust_dealloc (4 samples, 0.01%)</title><rect x="69.6600%" y="213" width="0.0138%" height="15" fill="rgb(233,48,2)"/><text x="69.9100%" y="223.50"></text></g><g><title>dyper_ops`serde_json::value::de::MapDeserializer::new (4 samples, 0.01%)</title><rect x="69.6738%" y="213" width="0.0138%" height="15" fill="rgb(244,165,34)"/><text x="69.9238%" y="223.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u16 (4 samples, 0.01%)</title><rect x="69.6945%" y="213" width="0.0138%" height="15" fill="rgb(207,89,7)"/><text x="69.9445%" y="223.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u32 (4 samples, 0.01%)</title><rect x="69.7083%" y="213" width="0.0138%" height="15" fill="rgb(244,117,36)"/><text x="69.9583%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="69.9876%" y="181" width="0.0103%" height="15" fill="rgb(226,144,34)"/><text x="70.2376%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.05%)</title><rect x="69.9979%" y="181" width="0.0483%" height="15" fill="rgb(213,23,19)"/><text x="70.2479%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.03%)</title><rect x="70.0152%" y="165" width="0.0310%" height="15" fill="rgb(217,75,12)"/><text x="70.2652%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="70.0221%" y="149" width="0.0241%" height="15" fill="rgb(224,159,17)"/><text x="70.2721%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.03%)</title><rect x="70.1014%" y="149" width="0.0276%" height="15" fill="rgb(217,118,1)"/><text x="70.3514%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.07%)</title><rect x="70.0772%" y="165" width="0.0690%" height="15" fill="rgb(232,180,48)"/><text x="70.3272%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.02%)</title><rect x="70.1290%" y="149" width="0.0172%" height="15" fill="rgb(230,27,33)"/><text x="70.3790%" y="159.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.18%)</title><rect x="69.9703%" y="197" width="0.1793%" height="15" fill="rgb(205,31,21)"/><text x="70.2203%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.10%)</title><rect x="70.0462%" y="181" width="0.1035%" height="15" fill="rgb(253,59,4)"/><text x="70.2962%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.02%)</title><rect x="70.1876%" y="165" width="0.0207%" height="15" fill="rgb(224,201,9)"/><text x="70.4376%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="70.1910%" y="149" width="0.0172%" height="15" fill="rgb(229,206,30)"/><text x="70.4410%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="70.1842%" y="181" width="0.0276%" height="15" fill="rgb(212,67,47)"/><text x="70.4342%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.04%)</title><rect x="70.2117%" y="181" width="0.0379%" height="15" fill="rgb(211,96,50)"/><text x="70.4617%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="70.2393%" y="165" width="0.0103%" height="15" fill="rgb(252,114,18)"/><text x="70.4893%" y="175.50"></text></g><g><title>dyper_ops`serde_json::value::de::MapDeserializer::new (27 samples, 0.09%)</title><rect x="70.1600%" y="197" width="0.0931%" height="15" fill="rgb(223,58,37)"/><text x="70.4100%" y="207.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="70.2600%" y="181" width="0.0138%" height="15" fill="rgb(237,70,4)"/><text x="70.5100%" y="191.50"></text></g><g><title>dyper_ops`serde_json::value::de::SeqDeserializer::new (4 samples, 0.01%)</title><rect x="70.2773%" y="181" width="0.0138%" height="15" fill="rgb(244,85,46)"/><text x="70.5273%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="70.4428%" y="117" width="0.0241%" height="15" fill="rgb(223,39,52)"/><text x="70.6928%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.10%)</title><rect x="70.4669%" y="117" width="0.1000%" height="15" fill="rgb(218,200,14)"/><text x="70.7169%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.06%)</title><rect x="70.5049%" y="101" width="0.0621%" height="15" fill="rgb(208,171,16)"/><text x="70.7549%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="70.5531%" y="85" width="0.0138%" height="15" fill="rgb(234,200,18)"/><text x="70.8031%" y="95.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_array (63 samples, 0.22%)</title><rect x="70.3842%" y="133" width="0.2173%" height="15" fill="rgb(228,45,11)"/><text x="70.6342%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.03%)</title><rect x="70.5704%" y="117" width="0.0310%" height="15" fill="rgb(237,182,11)"/><text x="70.8204%" y="127.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_tuple (79 samples, 0.27%)</title><rect x="70.3462%" y="149" width="0.2724%" height="15" fill="rgb(241,175,49)"/><text x="70.5962%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="70.6083%" y="133" width="0.0103%" height="15" fill="rgb(247,38,35)"/><text x="70.8583%" y="143.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_array (4 samples, 0.01%)</title><rect x="70.6187%" y="149" width="0.0138%" height="15" fill="rgb(228,39,49)"/><text x="70.8687%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="70.6463%" y="117" width="0.0138%" height="15" fill="rgb(226,101,26)"/><text x="70.8963%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="70.7221%" y="85" width="0.0138%" height="15" fill="rgb(206,141,19)"/><text x="70.9721%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (50 samples, 0.17%)</title><rect x="70.6325%" y="149" width="0.1724%" height="15" fill="rgb(211,200,13)"/><text x="70.8825%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (50 samples, 0.17%)</title><rect x="70.6325%" y="133" width="0.1724%" height="15" fill="rgb(241,121,6)"/><text x="70.8825%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.14%)</title><rect x="70.6600%" y="117" width="0.1448%" height="15" fill="rgb(234,221,29)"/><text x="70.9100%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.13%)</title><rect x="70.6773%" y="101" width="0.1276%" height="15" fill="rgb(229,136,5)"/><text x="70.9273%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.07%)</title><rect x="70.7359%" y="85" width="0.0690%" height="15" fill="rgb(238,36,11)"/><text x="70.9859%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.03%)</title><rect x="70.7704%" y="69" width="0.0345%" height="15" fill="rgb(251,55,41)"/><text x="71.0204%" y="79.50"></text></g><g><title>dyper_ops`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (148 samples, 0.51%)</title><rect x="70.3014%" y="165" width="0.5104%" height="15" fill="rgb(242,34,40)"/><text x="70.5514%" y="175.50"></text></g><g><title>dyper_ops`serde_json::value::de::SeqDeserializer::new (3 samples, 0.01%)</title><rect x="70.8187%" y="165" width="0.0103%" height="15" fill="rgb(215,42,17)"/><text x="71.0687%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="70.8394%" y="165" width="0.0103%" height="15" fill="rgb(207,44,46)"/><text x="71.0894%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.03%)</title><rect x="70.8497%" y="165" width="0.0345%" height="15" fill="rgb(211,206,28)"/><text x="71.0997%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.03%)</title><rect x="70.8566%" y="149" width="0.0276%" height="15" fill="rgb(237,167,16)"/><text x="71.1066%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.03%)</title><rect x="70.8566%" y="133" width="0.0276%" height="15" fill="rgb(233,66,6)"/><text x="71.1066%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="70.9911%" y="133" width="0.0207%" height="15" fill="rgb(246,123,29)"/><text x="71.2411%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.17%)</title><rect x="70.8842%" y="165" width="0.1655%" height="15" fill="rgb(209,62,40)"/><text x="71.1342%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (35 samples, 0.12%)</title><rect x="70.9290%" y="149" width="0.1207%" height="15" fill="rgb(218,4,25)"/><text x="71.1790%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.04%)</title><rect x="71.0118%" y="133" width="0.0379%" height="15" fill="rgb(253,91,49)"/><text x="71.2618%" y="143.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_array (225 samples, 0.78%)</title><rect x="70.2911%" y="181" width="0.7759%" height="15" fill="rgb(228,155,29)"/><text x="70.5411%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="71.0532%" y="165" width="0.0138%" height="15" fill="rgb(243,57,37)"/><text x="71.3032%" y="175.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (238 samples, 0.82%)</title><rect x="70.2531%" y="197" width="0.8207%" height="15" fill="rgb(244,167,17)"/><text x="70.5031%" y="207.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u16 (4 samples, 0.01%)</title><rect x="71.0739%" y="197" width="0.0138%" height="15" fill="rgb(207,181,38)"/><text x="71.3239%" y="207.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_array (6 samples, 0.02%)</title><rect x="71.0946%" y="197" width="0.0207%" height="15" fill="rgb(211,8,23)"/><text x="71.3446%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (4 samples, 0.01%)</title><rect x="71.1152%" y="197" width="0.0138%" height="15" fill="rgb(235,11,44)"/><text x="71.3652%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="71.1290%" y="197" width="0.0103%" height="15" fill="rgb(248,18,52)"/><text x="71.3790%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.11%)</title><rect x="71.1394%" y="197" width="0.1104%" height="15" fill="rgb(208,4,7)"/><text x="71.3894%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.05%)</title><rect x="71.2015%" y="181" width="0.0483%" height="15" fill="rgb(240,17,39)"/><text x="71.4515%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.04%)</title><rect x="71.2049%" y="165" width="0.0448%" height="15" fill="rgb(207,170,3)"/><text x="71.4549%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="71.3635%" y="181" width="0.0138%" height="15" fill="rgb(236,100,52)"/><text x="71.6135%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.09%)</title><rect x="71.4877%" y="165" width="0.0862%" height="15" fill="rgb(246,78,51)"/><text x="71.7377%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (96 samples, 0.33%)</title><rect x="71.2497%" y="197" width="0.3311%" height="15" fill="rgb(211,17,15)"/><text x="71.4997%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57 samples, 0.20%)</title><rect x="71.3842%" y="181" width="0.1966%" height="15" fill="rgb(209,59,46)"/><text x="71.6342%" y="191.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_object (561 samples, 1.93%)</title><rect x="69.7220%" y="213" width="1.9346%" height="15" fill="rgb(210,92,25)"/><text x="69.9720%" y="223.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.07%)</title><rect x="71.5877%" y="197" width="0.0690%" height="15" fill="rgb(238,174,52)"/><text x="71.8377%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="71.6567%" y="213" width="0.0103%" height="15" fill="rgb(230,73,7)"/><text x="71.9067%" y="223.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (606 samples, 2.09%)</title><rect x="69.6151%" y="229" width="2.0898%" height="15" fill="rgb(243,124,40)"/><text x="69.8651%" y="239.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.03%)</title><rect x="71.6739%" y="213" width="0.0310%" height="15" fill="rgb(244,170,11)"/><text x="71.9239%" y="223.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_object (3 samples, 0.01%)</title><rect x="71.7049%" y="229" width="0.0103%" height="15" fill="rgb(207,114,54)"/><text x="71.9549%" y="239.50"></text></g><g><title>dyper_ops`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (30 samples, 0.10%)</title><rect x="71.7153%" y="229" width="0.1035%" height="15" fill="rgb(205,42,20)"/><text x="71.9653%" y="239.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="71.8084%" y="213" width="0.0103%" height="15" fill="rgb(230,30,28)"/><text x="72.0584%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.06%)</title><rect x="71.8636%" y="213" width="0.0621%" height="15" fill="rgb(205,73,54)"/><text x="72.1136%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.05%)</title><rect x="71.8739%" y="197" width="0.0517%" height="15" fill="rgb(254,227,23)"/><text x="72.1239%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.10%)</title><rect x="71.8325%" y="229" width="0.0966%" height="15" fill="rgb(228,202,34)"/><text x="72.0825%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (6 samples, 0.02%)</title><rect x="71.9912%" y="213" width="0.0207%" height="15" fill="rgb(222,225,37)"/><text x="72.2412%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.07%)</title><rect x="72.0636%" y="197" width="0.0724%" height="15" fill="rgb(221,14,54)"/><text x="72.3136%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (62 samples, 0.21%)</title><rect x="71.9291%" y="229" width="0.2138%" height="15" fill="rgb(254,102,2)"/><text x="72.1791%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (38 samples, 0.13%)</title><rect x="72.0119%" y="213" width="0.1310%" height="15" fill="rgb(232,104,17)"/><text x="72.2619%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.15%)</title><rect x="72.1429%" y="229" width="0.1517%" height="15" fill="rgb(250,220,14)"/><text x="72.3929%" y="239.50"></text></g><g><title>dyper_ops`dyper_ops::op_respond (1,175 samples, 4.05%)</title><rect x="68.2461%" y="245" width="4.0520%" height="15" fill="rgb(241,158,9)"/><text x="68.4961%" y="255.50">dype..</text></g><g><title>dyper_ops`http::response::Parts::new (3 samples, 0.01%)</title><rect x="72.3119%" y="245" width="0.0103%" height="15" fill="rgb(246,9,43)"/><text x="72.5619%" y="255.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.02%)</title><rect x="72.3567%" y="229" width="0.0172%" height="15" fill="rgb(206,73,33)"/><text x="72.6067%" y="239.50"></text></g><g><title>dyper_ops`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.01%)</title><rect x="72.4878%" y="213" width="0.0138%" height="15" fill="rgb(222,79,8)"/><text x="72.7378%" y="223.50"></text></g><g><title>dyper_ops`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (33 samples, 0.11%)</title><rect x="72.6705%" y="181" width="0.1138%" height="15" fill="rgb(234,8,54)"/><text x="72.9205%" y="191.50"></text></g><g><title>dyper_ops`core::str::converts::from_utf8 (15 samples, 0.05%)</title><rect x="72.7326%" y="165" width="0.0517%" height="15" fill="rgb(209,134,38)"/><text x="72.9826%" y="175.50"></text></g><g><title>dyper_ops`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (28 samples, 0.10%)</title><rect x="72.7981%" y="165" width="0.0966%" height="15" fill="rgb(230,127,29)"/><text x="73.0481%" y="175.50"></text></g><g><title>dyper_ops`core::str::converts::from_utf8 (4 samples, 0.01%)</title><rect x="72.8809%" y="149" width="0.0138%" height="15" fill="rgb(242,44,41)"/><text x="73.1309%" y="159.50"></text></g><g><title>dyper_ops`core::str::converts::from_utf8 (5 samples, 0.02%)</title><rect x="72.8947%" y="165" width="0.0172%" height="15" fill="rgb(222,56,43)"/><text x="73.1447%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (37 samples, 0.13%)</title><rect x="72.9119%" y="165" width="0.1276%" height="15" fill="rgb(238,39,47)"/><text x="73.1619%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (36 samples, 0.12%)</title><rect x="72.9154%" y="149" width="0.1241%" height="15" fill="rgb(226,79,43)"/><text x="73.1654%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.12%)</title><rect x="72.9223%" y="133" width="0.1172%" height="15" fill="rgb(242,105,53)"/><text x="73.1723%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.11%)</title><rect x="72.9292%" y="117" width="0.1104%" height="15" fill="rgb(251,132,46)"/><text x="73.1792%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.03%)</title><rect x="73.0085%" y="101" width="0.0310%" height="15" fill="rgb(231,77,14)"/><text x="73.2585%" y="111.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (76 samples, 0.26%)</title><rect x="72.7843%" y="181" width="0.2621%" height="15" fill="rgb(240,135,9)"/><text x="73.0343%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (64 samples, 0.22%)</title><rect x="73.0740%" y="165" width="0.2207%" height="15" fill="rgb(248,109,14)"/><text x="73.3240%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (61 samples, 0.21%)</title><rect x="73.0844%" y="149" width="0.2104%" height="15" fill="rgb(227,146,52)"/><text x="73.3344%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (58 samples, 0.20%)</title><rect x="73.0947%" y="133" width="0.2000%" height="15" fill="rgb(232,54,3)"/><text x="73.3447%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.05%)</title><rect x="73.2464%" y="117" width="0.0483%" height="15" fill="rgb(229,201,43)"/><text x="73.4964%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (71 samples, 0.24%)</title><rect x="73.0533%" y="181" width="0.2448%" height="15" fill="rgb(252,161,33)"/><text x="73.3033%" y="191.50"></text></g><g><title>dyper_ops`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (204 samples, 0.70%)</title><rect x="72.6085%" y="197" width="0.7035%" height="15" fill="rgb(226,146,40)"/><text x="72.8585%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="73.2982%" y="181" width="0.0138%" height="15" fill="rgb(219,47,25)"/><text x="73.5482%" y="191.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.01%)</title><rect x="73.3120%" y="197" width="0.0103%" height="15" fill="rgb(250,135,13)"/><text x="73.5620%" y="207.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.06%)</title><rect x="73.5706%" y="181" width="0.0586%" height="15" fill="rgb(219,229,18)"/><text x="73.8206%" y="191.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4 samples, 0.01%)</title><rect x="73.6292%" y="181" width="0.0138%" height="15" fill="rgb(217,152,27)"/><text x="73.8792%" y="191.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (5 samples, 0.02%)</title><rect x="73.6430%" y="181" width="0.0172%" height="15" fill="rgb(225,71,47)"/><text x="73.8930%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="73.8672%" y="101" width="0.0103%" height="15" fill="rgb(220,139,14)"/><text x="74.1172%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="73.9499%" y="69" width="0.0138%" height="15" fill="rgb(247,54,32)"/><text x="74.1999%" y="79.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (48 samples, 0.17%)</title><rect x="73.8534%" y="149" width="0.1655%" height="15" fill="rgb(252,131,39)"/><text x="74.1034%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (47 samples, 0.16%)</title><rect x="73.8568%" y="133" width="0.1621%" height="15" fill="rgb(210,108,39)"/><text x="74.1068%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (45 samples, 0.16%)</title><rect x="73.8637%" y="117" width="0.1552%" height="15" fill="rgb(205,23,29)"/><text x="74.1137%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.14%)</title><rect x="73.8775%" y="101" width="0.1414%" height="15" fill="rgb(246,139,46)"/><text x="74.1275%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.14%)</title><rect x="73.8775%" y="85" width="0.1414%" height="15" fill="rgb(250,81,26)"/><text x="74.1275%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.06%)</title><rect x="73.9637%" y="69" width="0.0552%" height="15" fill="rgb(214,104,7)"/><text x="74.2137%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="74.0017%" y="53" width="0.0172%" height="15" fill="rgb(233,189,8)"/><text x="74.2517%" y="63.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (50 samples, 0.17%)</title><rect x="73.8499%" y="165" width="0.1724%" height="15" fill="rgb(228,141,17)"/><text x="74.0999%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (46 samples, 0.16%)</title><rect x="74.1534%" y="101" width="0.1586%" height="15" fill="rgb(247,157,1)"/><text x="74.4034%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.14%)</title><rect x="74.1672%" y="85" width="0.1448%" height="15" fill="rgb(249,225,5)"/><text x="74.4172%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (40 samples, 0.14%)</title><rect x="74.1741%" y="69" width="0.1379%" height="15" fill="rgb(242,55,13)"/><text x="74.4241%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc (50 samples, 0.17%)</title><rect x="74.1465%" y="117" width="0.1724%" height="15" fill="rgb(230,49,50)"/><text x="74.3965%" y="127.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (57 samples, 0.20%)</title><rect x="74.1327%" y="133" width="0.1966%" height="15" fill="rgb(241,111,38)"/><text x="74.3827%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="74.3189%" y="117" width="0.0103%" height="15" fill="rgb(252,155,4)"/><text x="74.5689%" y="127.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (90 samples, 0.31%)</title><rect x="74.0223%" y="165" width="0.3104%" height="15" fill="rgb(212,69,32)"/><text x="74.2723%" y="175.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (71 samples, 0.24%)</title><rect x="74.0879%" y="149" width="0.2448%" height="15" fill="rgb(243,107,47)"/><text x="74.3379%" y="159.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (323 samples, 1.11%)</title><rect x="73.3326%" y="197" width="1.1139%" height="15" fill="rgb(247,130,12)"/><text x="73.5826%" y="207.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (228 samples, 0.79%)</title><rect x="73.6603%" y="181" width="0.7863%" height="15" fill="rgb(233,74,16)"/><text x="73.9103%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.11%)</title><rect x="74.3362%" y="165" width="0.1104%" height="15" fill="rgb(208,58,18)"/><text x="74.5862%" y="175.50"></text></g><g><title>dyper_ops`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (3 samples, 0.01%)</title><rect x="74.4465%" y="197" width="0.0103%" height="15" fill="rgb(242,225,1)"/><text x="74.6965%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="74.6983%" y="85" width="0.0103%" height="15" fill="rgb(249,39,40)"/><text x="74.9483%" y="95.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (45 samples, 0.16%)</title><rect x="74.6258%" y="165" width="0.1552%" height="15" fill="rgb(207,72,44)"/><text x="74.8758%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (45 samples, 0.16%)</title><rect x="74.6258%" y="149" width="0.1552%" height="15" fill="rgb(215,193,12)"/><text x="74.8758%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (44 samples, 0.15%)</title><rect x="74.6293%" y="133" width="0.1517%" height="15" fill="rgb(248,41,39)"/><text x="74.8793%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (40 samples, 0.14%)</title><rect x="74.6431%" y="117" width="0.1379%" height="15" fill="rgb(253,85,4)"/><text x="74.8931%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.13%)</title><rect x="74.6465%" y="101" width="0.1345%" height="15" fill="rgb(243,70,31)"/><text x="74.8965%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.07%)</title><rect x="74.7086%" y="85" width="0.0724%" height="15" fill="rgb(253,195,26)"/><text x="74.9586%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.03%)</title><rect x="74.7534%" y="69" width="0.0276%" height="15" fill="rgb(243,42,11)"/><text x="75.0034%" y="79.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (55 samples, 0.19%)</title><rect x="74.5948%" y="181" width="0.1897%" height="15" fill="rgb(239,66,17)"/><text x="74.8448%" y="191.50"></text></g><g><title>dyper_ops`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (12 samples, 0.04%)</title><rect x="74.7845%" y="181" width="0.0414%" height="15" fill="rgb(217,132,21)"/><text x="75.0345%" y="191.50"></text></g><g><title>dyper_ops`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.01%)</title><rect x="74.9948%" y="165" width="0.0103%" height="15" fill="rgb(252,202,21)"/><text x="75.2448%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="75.0569%" y="101" width="0.0103%" height="15" fill="rgb(233,98,36)"/><text x="75.3069%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.02%)</title><rect x="75.1362%" y="69" width="0.0241%" height="15" fill="rgb(216,153,54)"/><text x="75.3862%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc (50 samples, 0.17%)</title><rect x="75.0362%" y="133" width="0.1724%" height="15" fill="rgb(250,99,7)"/><text x="75.2862%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (45 samples, 0.16%)</title><rect x="75.0535%" y="117" width="0.1552%" height="15" fill="rgb(207,56,50)"/><text x="75.3035%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.14%)</title><rect x="75.0672%" y="101" width="0.1414%" height="15" fill="rgb(244,61,34)"/><text x="75.3172%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (40 samples, 0.14%)</title><rect x="75.0707%" y="85" width="0.1379%" height="15" fill="rgb(241,50,38)"/><text x="75.3207%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.05%)</title><rect x="75.1604%" y="69" width="0.0483%" height="15" fill="rgb(212,166,30)"/><text x="75.4104%" y="79.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (52 samples, 0.18%)</title><rect x="75.0328%" y="149" width="0.1793%" height="15" fill="rgb(249,127,32)"/><text x="75.2828%" y="159.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (61 samples, 0.21%)</title><rect x="75.0052%" y="165" width="0.2104%" height="15" fill="rgb(209,103,0)"/><text x="75.2552%" y="175.50"></text></g><g><title>dyper_ops`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (35 samples, 0.12%)</title><rect x="75.2604%" y="149" width="0.1207%" height="15" fill="rgb(238,209,51)"/><text x="75.5104%" y="159.50"></text></g><g><title>dyper_ops`core::str::converts::from_utf8 (13 samples, 0.04%)</title><rect x="75.3362%" y="133" width="0.0448%" height="15" fill="rgb(237,56,23)"/><text x="75.5862%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.02%)</title><rect x="75.3983%" y="117" width="0.0241%" height="15" fill="rgb(215,153,46)"/><text x="75.6483%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (71 samples, 0.24%)</title><rect x="75.3914%" y="133" width="0.2448%" height="15" fill="rgb(224,49,31)"/><text x="75.6414%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (62 samples, 0.21%)</title><rect x="75.4224%" y="117" width="0.2138%" height="15" fill="rgb(250,18,42)"/><text x="75.6724%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (60 samples, 0.21%)</title><rect x="75.4293%" y="101" width="0.2069%" height="15" fill="rgb(215,176,39)"/><text x="75.6793%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.04%)</title><rect x="75.5983%" y="85" width="0.0379%" height="15" fill="rgb(223,77,29)"/><text x="75.8483%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (75 samples, 0.26%)</title><rect x="75.3811%" y="149" width="0.2586%" height="15" fill="rgb(234,94,52)"/><text x="75.6311%" y="159.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (128 samples, 0.44%)</title><rect x="75.2190%" y="165" width="0.4414%" height="15" fill="rgb(220,154,50)"/><text x="75.4690%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="75.6431%" y="149" width="0.0172%" height="15" fill="rgb(212,11,10)"/><text x="75.8931%" y="159.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (260 samples, 0.90%)</title><rect x="74.8259%" y="181" width="0.8966%" height="15" fill="rgb(205,166,19)"/><text x="75.0759%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.06%)</title><rect x="75.6638%" y="165" width="0.0586%" height="15" fill="rgb(244,198,16)"/><text x="75.9138%" y="175.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (379 samples, 1.31%)</title><rect x="74.4569%" y="197" width="1.3070%" height="15" fill="rgb(219,69,12)"/><text x="74.7069%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.04%)</title><rect x="75.7225%" y="181" width="0.0414%" height="15" fill="rgb(245,30,7)"/><text x="75.9725%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.03%)</title><rect x="75.7638%" y="197" width="0.0345%" height="15" fill="rgb(218,221,48)"/><text x="76.0138%" y="207.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (981 samples, 3.38%)</title><rect x="72.5016%" y="213" width="3.3830%" height="15" fill="rgb(216,66,15)"/><text x="72.7516%" y="223.50">dyp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.09%)</title><rect x="75.7983%" y="197" width="0.0862%" height="15" fill="rgb(226,122,50)"/><text x="76.0483%" y="207.50"></text></g><g><title>dyper_ops`serde_json::de::from_slice (1,043 samples, 3.60%)</title><rect x="72.3360%" y="245" width="3.5968%" height="15" fill="rgb(239,156,16)"/><text x="72.5860%" y="255.50">dype..</text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,031 samples, 3.56%)</title><rect x="72.3774%" y="229" width="3.5554%" height="15" fill="rgb(224,27,38)"/><text x="72.6274%" y="239.50">dype..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="75.9052%" y="213" width="0.0276%" height="15" fill="rgb(224,39,27)"/><text x="76.1552%" y="223.50"></text></g><g><title>dyper_ops`serde_json::read::StrRead::new (5 samples, 0.02%)</title><rect x="75.9328%" y="245" width="0.0172%" height="15" fill="rgb(215,92,29)"/><text x="76.1828%" y="255.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.01%)</title><rect x="75.9535%" y="245" width="0.0103%" height="15" fill="rgb(207,159,16)"/><text x="76.2035%" y="255.50"></text></g><g><title>dyper_ops`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="75.9639%" y="245" width="0.0310%" height="15" fill="rgb(238,163,47)"/><text x="76.2139%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="75.9949%" y="245" width="0.0172%" height="15" fill="rgb(219,91,49)"/><text x="76.2449%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.01%)</title><rect x="76.0190%" y="245" width="0.0138%" height="15" fill="rgb(227,167,31)"/><text x="76.2690%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.01%)</title><rect x="76.0328%" y="245" width="0.0103%" height="15" fill="rgb(234,80,54)"/><text x="76.2828%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="76.0432%" y="245" width="0.0172%" height="15" fill="rgb(212,114,2)"/><text x="76.2932%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (18 samples, 0.06%)</title><rect x="76.0604%" y="245" width="0.0621%" height="15" fill="rgb(234,50,24)"/><text x="76.3104%" y="255.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (3,237 samples, 11.16%)</title><rect x="65.0321%" y="261" width="11.1628%" height="15" fill="rgb(221,68,8)"/><text x="65.2821%" y="271.50">dyper_ops`deno_c..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (21 samples, 0.07%)</title><rect x="76.1225%" y="245" width="0.0724%" height="15" fill="rgb(254,180,31)"/><text x="76.3725%" y="255.50"></text></g><g><title>dyper_ops`deno_core::ops::json_serialize_op_result (4 samples, 0.01%)</title><rect x="76.1949%" y="261" width="0.0138%" height="15" fill="rgb(247,130,50)"/><text x="76.4449%" y="271.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (3,257 samples, 11.23%)</title><rect x="64.9941%" y="277" width="11.2318%" height="15" fill="rgb(211,109,4)"/><text x="65.2441%" y="287.50">dyper_ops`&lt;alloc:..</text></g><g><title>dyper_ops`serde_json::de::from_slice (3 samples, 0.01%)</title><rect x="76.2156%" y="261" width="0.0103%" height="15" fill="rgb(238,50,21)"/><text x="76.4656%" y="271.50"></text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (3,283 samples, 11.32%)</title><rect x="64.9286%" y="293" width="11.3215%" height="15" fill="rgb(225,57,45)"/><text x="65.1786%" y="303.50">dyper_ops`deno_co..</text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (7 samples, 0.02%)</title><rect x="76.2259%" y="277" width="0.0241%" height="15" fill="rgb(209,196,50)"/><text x="76.4759%" y="287.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="76.2673%" y="277" width="0.0138%" height="15" fill="rgb(242,140,13)"/><text x="76.5173%" y="287.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (15 samples, 0.05%)</title><rect x="76.2501%" y="293" width="0.0517%" height="15" fill="rgb(217,111,7)"/><text x="76.5001%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Integer&gt;&gt;::try_from (4 samples, 0.01%)</title><rect x="76.3122%" y="293" width="0.0138%" height="15" fill="rgb(253,193,51)"/><text x="76.5622%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_slot (17 samples, 0.06%)</title><rect x="76.3363%" y="293" width="0.0586%" height="15" fill="rgb(252,70,29)"/><text x="76.5863%" y="303.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (3 samples, 0.01%)</title><rect x="76.3846%" y="277" width="0.0103%" height="15" fill="rgb(232,127,12)"/><text x="76.6346%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::typed_array::_&lt;impl rusty_v8::data::Uint8Array&gt;::new (3 samples, 0.01%)</title><rect x="76.3949%" y="293" width="0.0103%" height="15" fill="rgb(211,180,21)"/><text x="76.6449%" y="303.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (4,008 samples, 13.82%)</title><rect x="62.6112%" y="309" width="13.8216%" height="15" fill="rgb(229,72,13)"/><text x="62.8612%" y="319.50">dyper_ops`deno_core::..</text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (3 samples, 0.01%)</title><rect x="76.4398%" y="309" width="0.0103%" height="15" fill="rgb(240,211,49)"/><text x="76.6898%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::number::_&lt;impl rusty_v8::data::Integer&gt;::value (4 samples, 0.01%)</title><rect x="76.4570%" y="309" width="0.0138%" height="15" fill="rgb(219,149,40)"/><text x="76.7070%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_callback_scope_data (4 samples, 0.01%)</title><rect x="76.4742%" y="309" width="0.0138%" height="15" fill="rgb(210,127,46)"/><text x="76.7242%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.01%)</title><rect x="76.4880%" y="309" width="0.0103%" height="15" fill="rgb(220,106,7)"/><text x="76.7380%" y="319.50"></text></g><g><title>dyper_ops`v8__Integer__Value (7 samples, 0.02%)</title><rect x="76.5018%" y="309" width="0.0241%" height="15" fill="rgb(249,31,22)"/><text x="76.7518%" y="319.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4,064 samples, 14.01%)</title><rect x="62.5216%" y="325" width="14.0148%" height="15" fill="rgb(253,1,49)"/><text x="62.7716%" y="335.50">dyper_ops`&lt;extern &quot;C&quot;..</text></g><g><title>0x155400086f56 (4,085 samples, 14.09%)</title><rect x="62.4802%" y="357" width="14.0872%" height="15" fill="rgb(227,144,33)"/><text x="62.7302%" y="367.50">0x155400086f56</text></g><g><title>dyper_ops`Builtins_CallApiCallback (4,083 samples, 14.08%)</title><rect x="62.4871%" y="341" width="14.0803%" height="15" fill="rgb(249,163,44)"/><text x="62.7371%" y="351.50">dyper_ops`Builtins_Ca..</text></g><g><title>0x155400086f5a (4 samples, 0.01%)</title><rect x="76.5673%" y="357" width="0.0138%" height="15" fill="rgb(234,15,39)"/><text x="76.8173%" y="367.50"></text></g><g><title>0x155400086f8b (5 samples, 0.02%)</title><rect x="76.5811%" y="357" width="0.0172%" height="15" fill="rgb(207,66,16)"/><text x="76.8311%" y="367.50"></text></g><g><title>0x155400086f8e (8 samples, 0.03%)</title><rect x="76.5984%" y="357" width="0.0276%" height="15" fill="rgb(233,112,24)"/><text x="76.8484%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (8 samples, 0.03%)</title><rect x="76.5984%" y="341" width="0.0276%" height="15" fill="rgb(230,90,22)"/><text x="76.8484%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="77.0950%" y="165" width="0.0103%" height="15" fill="rgb(229,61,13)"/><text x="77.3450%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="77.1812%" y="133" width="0.0138%" height="15" fill="rgb(225,57,24)"/><text x="77.4312%" y="143.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (45 samples, 0.16%)</title><rect x="77.0915%" y="213" width="0.1552%" height="15" fill="rgb(208,169,48)"/><text x="77.3415%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (45 samples, 0.16%)</title><rect x="77.0915%" y="197" width="0.1552%" height="15" fill="rgb(244,218,51)"/><text x="77.3415%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (44 samples, 0.15%)</title><rect x="77.0950%" y="181" width="0.1517%" height="15" fill="rgb(214,148,10)"/><text x="77.3450%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.14%)</title><rect x="77.1053%" y="165" width="0.1414%" height="15" fill="rgb(225,174,27)"/><text x="77.3553%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.13%)</title><rect x="77.1157%" y="149" width="0.1310%" height="15" fill="rgb(230,96,26)"/><text x="77.3657%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.05%)</title><rect x="77.1950%" y="133" width="0.0517%" height="15" fill="rgb(232,10,30)"/><text x="77.4450%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="77.2295%" y="117" width="0.0172%" height="15" fill="rgb(222,8,50)"/><text x="77.4795%" y="127.50"></text></g><g><title>dyper_ops`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::__unordered_map_hasher&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::hash&lt;void const*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::equal_to&lt;void const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;void const*, std::__1::pair&lt;void const* const, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt;(void const* const&amp;, std::__1::pair&lt;void const* const, std::__1::weak_ptr (124 samples, 0.43%)</title><rect x="76.8225%" y="229" width="0.4276%" height="15" fill="rgb(213,81,27)"/><text x="77.0725%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (33 samples, 0.11%)</title><rect x="77.2502%" y="229" width="0.1138%" height="15" fill="rgb(245,50,10)"/><text x="77.5002%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (33 samples, 0.11%)</title><rect x="77.2502%" y="213" width="0.1138%" height="15" fill="rgb(216,100,18)"/><text x="77.5002%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::GlobalBackingStoreRegistry::Register(std::__1::shared_ptr (204 samples, 0.70%)</title><rect x="76.7605%" y="245" width="0.7035%" height="15" fill="rgb(236,147,54)"/><text x="77.0105%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (29 samples, 0.10%)</title><rect x="77.3640%" y="229" width="0.1000%" height="15" fill="rgb(205,143,26)"/><text x="77.6140%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (27 samples, 0.09%)</title><rect x="77.3709%" y="213" width="0.0931%" height="15" fill="rgb(236,26,9)"/><text x="77.6209%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::GetBackingStore (6 samples, 0.02%)</title><rect x="77.4640%" y="245" width="0.0207%" height="15" fill="rgb(221,165,53)"/><text x="77.7140%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.02%)</title><rect x="77.4847%" y="245" width="0.0207%" height="15" fill="rgb(214,110,17)"/><text x="77.7347%" y="255.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::GetBackingStore (238 samples, 0.82%)</title><rect x="76.7018%" y="261" width="0.8207%" height="15" fill="rgb(237,197,12)"/><text x="76.9518%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (5 samples, 0.02%)</title><rect x="77.5053%" y="245" width="0.0172%" height="15" fill="rgb(205,84,17)"/><text x="77.7553%" y="255.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::get_backing_store (240 samples, 0.83%)</title><rect x="76.6984%" y="293" width="0.8276%" height="15" fill="rgb(237,18,45)"/><text x="76.9484%" y="303.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__GetBackingStore (239 samples, 0.82%)</title><rect x="76.7018%" y="277" width="0.8242%" height="15" fill="rgb(221,87,14)"/><text x="76.9518%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::ArrayBufferView&gt;&gt;::try_from (4 samples, 0.01%)</title><rect x="77.5295%" y="293" width="0.0138%" height="15" fill="rgb(238,186,15)"/><text x="77.7795%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::function::FunctionCallbackArguments::get (3 samples, 0.01%)</title><rect x="77.5433%" y="293" width="0.0103%" height="15" fill="rgb(208,115,11)"/><text x="77.7933%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (4 samples, 0.01%)</title><rect x="77.6398%" y="229" width="0.0138%" height="15" fill="rgb(254,175,0)"/><text x="77.8898%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (7 samples, 0.02%)</title><rect x="77.6640%" y="197" width="0.0241%" height="15" fill="rgb(227,24,42)"/><text x="77.9140%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (20 samples, 0.07%)</title><rect x="77.6226%" y="245" width="0.0690%" height="15" fill="rgb(223,211,37)"/><text x="77.8726%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (11 samples, 0.04%)</title><rect x="77.6536%" y="229" width="0.0379%" height="15" fill="rgb(235,49,27)"/><text x="77.9036%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (9 samples, 0.03%)</title><rect x="77.6605%" y="213" width="0.0310%" height="15" fill="rgb(254,97,51)"/><text x="77.9105%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (15 samples, 0.05%)</title><rect x="77.6985%" y="245" width="0.0517%" height="15" fill="rgb(249,51,40)"/><text x="77.9485%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewStringFromUtf8(v8::internal::Vector (51 samples, 0.18%)</title><rect x="77.5916%" y="261" width="0.1759%" height="15" fill="rgb(210,128,45)"/><text x="77.8416%" y="271.50"></text></g><g><title>dyper_ops`void v8::internal::Utf8Decoder::Decode&lt;unsigned char&gt;(unsigned char*, v8::internal::Vector (5 samples, 0.02%)</title><rect x="77.7502%" y="245" width="0.0172%" height="15" fill="rgb(224,137,50)"/><text x="78.0002%" y="255.50"></text></g><g><title>dyper_ops`v8::String::NewFromUtf8 (63 samples, 0.22%)</title><rect x="77.5674%" y="277" width="0.2173%" height="15" fill="rgb(242,15,9)"/><text x="77.8174%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (5 samples, 0.02%)</title><rect x="77.7674%" y="261" width="0.0172%" height="15" fill="rgb(233,187,41)"/><text x="78.0174%" y="271.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new_from_utf8 (71 samples, 0.24%)</title><rect x="77.5536%" y="293" width="0.2448%" height="15" fill="rgb(227,2,29)"/><text x="77.8036%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewStringFromUtf8(v8::internal::Vector (4 samples, 0.01%)</title><rect x="77.7847%" y="277" width="0.0138%" height="15" fill="rgb(222,70,3)"/><text x="78.0347%" y="287.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__reset (14 samples, 0.05%)</title><rect x="77.7985%" y="293" width="0.0483%" height="15" fill="rgb(213,11,42)"/><text x="78.0485%" y="303.50"></text></g><g><title>dyper_ops`v8::ArrayBufferView::Buffer (3 samples, 0.01%)</title><rect x="77.8467%" y="293" width="0.0103%" height="15" fill="rgb(225,150,9)"/><text x="78.0967%" y="303.50"></text></g><g><title>dyper_ops`deno_core::bindings::decode (350 samples, 1.21%)</title><rect x="76.6743%" y="309" width="1.2070%" height="15" fill="rgb(230,162,45)"/><text x="76.9243%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::get_current_mut (3 samples, 0.01%)</title><rect x="77.8985%" y="309" width="0.0103%" height="15" fill="rgb(222,14,52)"/><text x="78.1485%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_callback_scope_data (4 samples, 0.01%)</title><rect x="77.9088%" y="309" width="0.0138%" height="15" fill="rgb(254,198,14)"/><text x="78.1588%" y="319.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (373 samples, 1.29%)</title><rect x="76.6605%" y="325" width="1.2863%" height="15" fill="rgb(220,217,30)"/><text x="76.9105%" y="335.50"></text></g><g><title>dyper_ops`rusty_v8::function::FunctionCallbackArguments::from_function_callback_info (3 samples, 0.01%)</title><rect x="77.9571%" y="325" width="0.0103%" height="15" fill="rgb(215,146,41)"/><text x="78.2071%" y="335.50"></text></g><g><title>0x155400086fd8 (390 samples, 1.34%)</title><rect x="76.6329%" y="357" width="1.3449%" height="15" fill="rgb(217,27,36)"/><text x="76.8829%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (386 samples, 1.33%)</title><rect x="76.6467%" y="341" width="1.3311%" height="15" fill="rgb(219,218,39)"/><text x="76.8967%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::RemoveGCEpilogueCallback(void (*) (11 samples, 0.04%)</title><rect x="78.0640%" y="309" width="0.0379%" height="15" fill="rgb(219,4,42)"/><text x="78.3140%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::JsonParser(v8::internal::Isolate*, v8::internal::Handle (14 samples, 0.05%)</title><rect x="78.1019%" y="309" width="0.0483%" height="15" fill="rgb(249,119,36)"/><text x="78.3519%" y="319.50"></text></g><g><title>dyper_ops`std::__1::vector&lt;v8::internal::JsonProperty, std::__1::allocator&lt;v8::internal::JsonProperty&gt; &gt;::resize (3 samples, 0.01%)</title><rect x="78.1709%" y="293" width="0.0103%" height="15" fill="rgb(209,23,33)"/><text x="78.4209%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSObject(v8::internal::Handle (4 samples, 0.01%)</title><rect x="78.1813%" y="293" width="0.0138%" height="15" fill="rgb(211,10,0)"/><text x="78.4313%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="78.5951%" y="197" width="0.0207%" height="15" fill="rgb(208,99,37)"/><text x="78.8451%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (93 samples, 0.32%)</title><rect x="78.4537%" y="245" width="0.3207%" height="15" fill="rgb(213,132,31)"/><text x="78.7037%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (90 samples, 0.31%)</title><rect x="78.4640%" y="229" width="0.3104%" height="15" fill="rgb(243,129,40)"/><text x="78.7140%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (89 samples, 0.31%)</title><rect x="78.4675%" y="213" width="0.3069%" height="15" fill="rgb(210,66,33)"/><text x="78.7175%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (45 samples, 0.16%)</title><rect x="78.6192%" y="197" width="0.1552%" height="15" fill="rgb(209,189,4)"/><text x="78.8692%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.07%)</title><rect x="78.7054%" y="181" width="0.0690%" height="15" fill="rgb(214,107,37)"/><text x="78.9554%" y="191.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (98 samples, 0.34%)</title><rect x="78.4399%" y="277" width="0.3380%" height="15" fill="rgb(245,88,54)"/><text x="78.6899%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (98 samples, 0.34%)</title><rect x="78.4399%" y="261" width="0.3380%" height="15" fill="rgb(205,146,20)"/><text x="78.6899%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="78.8779%" y="181" width="0.0207%" height="15" fill="rgb(220,161,25)"/><text x="79.1279%" y="191.50"></text></g><g><title>dyper_ops`std::__1::vector&lt;v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation, std::__1::allocator&lt;v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation&gt; &gt;::reserve (49 samples, 0.17%)</title><rect x="78.7778%" y="277" width="0.1690%" height="15" fill="rgb(215,152,15)"/><text x="79.0278%" y="287.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (48 samples, 0.17%)</title><rect x="78.7813%" y="261" width="0.1655%" height="15" fill="rgb(233,192,44)"/><text x="79.0313%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (47 samples, 0.16%)</title><rect x="78.7847%" y="245" width="0.1621%" height="15" fill="rgb(240,170,46)"/><text x="79.0347%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (46 samples, 0.16%)</title><rect x="78.7882%" y="229" width="0.1586%" height="15" fill="rgb(207,104,33)"/><text x="79.0382%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.14%)</title><rect x="78.8020%" y="213" width="0.1448%" height="15" fill="rgb(219,21,39)"/><text x="79.0520%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (42 samples, 0.14%)</title><rect x="78.8020%" y="197" width="0.1448%" height="15" fill="rgb(214,133,29)"/><text x="79.0520%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.04%)</title><rect x="78.9020%" y="181" width="0.0448%" height="15" fill="rgb(226,93,6)"/><text x="79.1520%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (3 samples, 0.01%)</title><rect x="79.0089%" y="213" width="0.0103%" height="15" fill="rgb(252,222,34)"/><text x="79.2589%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (12 samples, 0.04%)</title><rect x="78.9813%" y="261" width="0.0414%" height="15" fill="rgb(252,92,48)"/><text x="79.2313%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (7 samples, 0.02%)</title><rect x="78.9986%" y="245" width="0.0241%" height="15" fill="rgb(245,223,24)"/><text x="79.2486%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.01%)</title><rect x="79.0089%" y="229" width="0.0138%" height="15" fill="rgb(205,176,3)"/><text x="79.2589%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="79.0296%" y="261" width="0.0207%" height="15" fill="rgb(235,151,15)"/><text x="79.2796%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSObject(v8::internal::Handle (43 samples, 0.15%)</title><rect x="78.9537%" y="277" width="0.1483%" height="15" fill="rgb(237,209,11)"/><text x="79.2037%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JSFunction::EnsureHasInitialMap(v8::internal::Handle (13 samples, 0.04%)</title><rect x="79.0572%" y="261" width="0.0448%" height="15" fill="rgb(243,227,24)"/><text x="79.3072%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (4 samples, 0.01%)</title><rect x="79.1020%" y="277" width="0.0138%" height="15" fill="rgb(239,193,16)"/><text x="79.3520%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::ObjectLiteralMapFromCache(v8::internal::Handle (5 samples, 0.02%)</title><rect x="79.1158%" y="277" width="0.0172%" height="15" fill="rgb(231,27,9)"/><text x="79.3658%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JSFunction::EnsureHasInitialMap(v8::internal::Handle (3 samples, 0.01%)</title><rect x="79.1399%" y="277" width="0.0103%" height="15" fill="rgb(219,169,10)"/><text x="79.3899%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (15 samples, 0.05%)</title><rect x="79.3710%" y="245" width="0.0517%" height="15" fill="rgb(244,229,43)"/><text x="79.6210%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (7 samples, 0.02%)</title><rect x="79.3986%" y="229" width="0.0241%" height="15" fill="rgb(254,38,20)"/><text x="79.6486%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.01%)</title><rect x="79.4124%" y="213" width="0.0103%" height="15" fill="rgb(250,47,30)"/><text x="79.6624%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="79.4227%" y="245" width="0.0103%" height="15" fill="rgb(224,124,36)"/><text x="79.6727%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSObjectFromMap(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (23 samples, 0.08%)</title><rect x="79.3572%" y="261" width="0.0793%" height="15" fill="rgb(246,68,51)"/><text x="79.6072%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::ObjectLiteralMapFromCache(v8::internal::Handle (13 samples, 0.04%)</title><rect x="79.4365%" y="261" width="0.0448%" height="15" fill="rgb(253,43,49)"/><text x="79.6865%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::Factory::InternalizeString&lt;v8::internal::SeqOneByteString&gt;(v8::internal::Handle (9 samples, 0.03%)</title><rect x="79.4882%" y="261" width="0.0310%" height="15" fill="rgb(219,54,36)"/><text x="79.7382%" y="271.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)0, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)0, unsigned char&gt;(v8::internal::Vector (11 samples, 0.04%)</title><rect x="79.5365%" y="245" width="0.0379%" height="15" fill="rgb(227,133,34)"/><text x="79.7865%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.01%)</title><rect x="79.5607%" y="229" width="0.0138%" height="15" fill="rgb(247,227,15)"/><text x="79.8107%" y="239.50"></text></g><g><title>dyper_ops`unsigned int v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (9 samples, 0.03%)</title><rect x="79.5745%" y="245" width="0.0310%" height="15" fill="rgb(229,96,14)"/><text x="79.8245%" y="255.50"></text></g><g><title>dyper_ops`unsigned int v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (12 samples, 0.04%)</title><rect x="79.6089%" y="229" width="0.0414%" height="15" fill="rgb(220,79,17)"/><text x="79.8589%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeStringWithKey&lt;v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt; &gt;(v8::internal::SeqSubStringKey (3 samples, 0.01%)</title><rect x="79.6503%" y="229" width="0.0103%" height="15" fill="rgb(205,131,53)"/><text x="79.9003%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::Factory::InternalizeString&lt;v8::internal::SeqOneByteString&gt;(v8::internal::Handle (39 samples, 0.13%)</title><rect x="79.6055%" y="245" width="0.1345%" height="15" fill="rgb(209,50,29)"/><text x="79.8555%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SeqSubStringKey (23 samples, 0.08%)</title><rect x="79.6607%" y="229" width="0.0793%" height="15" fill="rgb(245,86,46)"/><text x="79.9107%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt; &gt;(v8::internal::Isolate*, v8::internal::SeqSubStringKey (19 samples, 0.07%)</title><rect x="79.6745%" y="213" width="0.0655%" height="15" fill="rgb(235,66,46)"/><text x="79.9245%" y="223.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector (4 samples, 0.01%)</title><rect x="79.7262%" y="197" width="0.0138%" height="15" fill="rgb(232,148,31)"/><text x="79.9762%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::MakeString(v8::internal::JsonString const&amp;, v8::internal::Handle (71 samples, 0.24%)</title><rect x="79.5193%" y="261" width="0.2448%" height="15" fill="rgb(217,149,8)"/><text x="79.7693%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SeqSubStringKey&lt;v8::internal::SeqOneByteString&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SeqSubStringKey (7 samples, 0.02%)</title><rect x="79.7400%" y="245" width="0.0241%" height="15" fill="rgb(209,183,11)"/><text x="79.9900%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::ExpectedTransitionKey (17 samples, 0.06%)</title><rect x="79.7641%" y="261" width="0.0586%" height="15" fill="rgb(208,55,20)"/><text x="80.0141%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::TransitionArray::SearchDetailsAndGetTarget (4 samples, 0.01%)</title><rect x="79.8469%" y="245" width="0.0138%" height="15" fill="rgb(218,39,14)"/><text x="80.0969%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::TransitionArray::SearchAndGetTarget (3 samples, 0.01%)</title><rect x="79.8779%" y="229" width="0.0103%" height="15" fill="rgb(216,169,33)"/><text x="80.1279%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::FindTransitionToDataProperty(v8::internal::Handle (27 samples, 0.09%)</title><rect x="79.8227%" y="261" width="0.0931%" height="15" fill="rgb(233,80,24)"/><text x="80.0727%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::SearchTransition (16 samples, 0.06%)</title><rect x="79.8607%" y="245" width="0.0552%" height="15" fill="rgb(213,179,31)"/><text x="80.1107%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::TransitionArray::SearchDetailsAndGetTarget (8 samples, 0.03%)</title><rect x="79.8883%" y="229" width="0.0276%" height="15" fill="rgb(209,19,5)"/><text x="80.1383%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::BuildJsonObject(v8::internal::JsonParser&lt;unsigned char&gt;::JsonContinuation const&amp;, std::__1::vector&lt;v8::internal::JsonProperty, std::__1::allocator&lt;v8::internal::JsonProperty&gt; &gt; const&amp;, v8::internal::Handle (223 samples, 0.77%)</title><rect x="79.1503%" y="277" width="0.7690%" height="15" fill="rgb(219,18,35)"/><text x="79.4003%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ScanJsonPropertyKey(v8::internal::JsonParser (25 samples, 0.09%)</title><rect x="79.9193%" y="277" width="0.0862%" height="15" fill="rgb(209,169,16)"/><text x="80.1693%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ScanJsonString (21 samples, 0.07%)</title><rect x="79.9331%" y="261" width="0.0724%" height="15" fill="rgb(245,90,51)"/><text x="80.1831%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::ExpectedTransitionKey (3 samples, 0.01%)</title><rect x="80.0090%" y="277" width="0.0103%" height="15" fill="rgb(220,99,45)"/><text x="80.2590%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="80.0228%" y="277" width="0.0103%" height="15" fill="rgb(249,89,25)"/><text x="80.2728%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.14%)</title><rect x="80.0331%" y="277" width="0.1414%" height="15" fill="rgb(239,193,0)"/><text x="80.2831%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.08%)</title><rect x="80.0917%" y="261" width="0.0828%" height="15" fill="rgb(231,126,1)"/><text x="80.3417%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (22 samples, 0.08%)</title><rect x="80.0986%" y="245" width="0.0759%" height="15" fill="rgb(243,166,3)"/><text x="80.3486%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.08%)</title><rect x="80.4642%" y="245" width="0.0759%" height="15" fill="rgb(223,22,34)"/><text x="80.7142%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (116 samples, 0.40%)</title><rect x="80.1745%" y="277" width="0.4000%" height="15" fill="rgb(251,52,51)"/><text x="80.4245%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (82 samples, 0.28%)</title><rect x="80.2917%" y="261" width="0.2828%" height="15" fill="rgb(221,165,28)"/><text x="80.5417%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.03%)</title><rect x="80.5400%" y="245" width="0.0345%" height="15" fill="rgb(218,121,47)"/><text x="80.7900%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue (691 samples, 2.38%)</title><rect x="78.2019%" y="293" width="2.3829%" height="15" fill="rgb(209,120,9)"/><text x="78.4519%" y="303.50">dy..</text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (715 samples, 2.47%)</title><rect x="78.1502%" y="309" width="2.4657%" height="15" fill="rgb(236,68,12)"/><text x="78.4002%" y="319.50">dy..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.02%)</title><rect x="80.5987%" y="293" width="0.0172%" height="15" fill="rgb(225,194,26)"/><text x="80.8487%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_JsonParse (763 samples, 2.63%)</title><rect x="78.0088%" y="325" width="2.6312%" height="15" fill="rgb(231,84,39)"/><text x="78.2588%" y="335.50">dy..</text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="80.6228%" y="309" width="0.0172%" height="15" fill="rgb(210,11,45)"/><text x="80.8728%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::RemoveGCEpilogueCallback(void (*) (3 samples, 0.01%)</title><rect x="80.6400%" y="325" width="0.0103%" height="15" fill="rgb(224,54,52)"/><text x="80.8900%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::JsonParser(v8::internal::Isolate*, v8::internal::Handle (9 samples, 0.03%)</title><rect x="80.6504%" y="325" width="0.0310%" height="15" fill="rgb(238,102,14)"/><text x="80.9004%" y="335.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (778 samples, 2.68%)</title><rect x="78.0019%" y="341" width="2.6829%" height="15" fill="rgb(243,160,52)"/><text x="78.2519%" y="351.50">dy..</text></g><g><title>0x155400087031 (783 samples, 2.70%)</title><rect x="77.9985%" y="357" width="2.7002%" height="15" fill="rgb(216,114,19)"/><text x="78.2485%" y="367.50">0x..</text></g><g><title>0x1554000870c1 (7 samples, 0.02%)</title><rect x="80.7021%" y="357" width="0.0241%" height="15" fill="rgb(244,166,37)"/><text x="80.9521%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (7 samples, 0.02%)</title><rect x="80.7021%" y="341" width="0.0241%" height="15" fill="rgb(246,29,44)"/><text x="80.9521%" y="351.50"></text></g><g><title>0x155400087281 (23 samples, 0.08%)</title><rect x="80.7676%" y="357" width="0.0793%" height="15" fill="rgb(215,56,53)"/><text x="81.0176%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC_Megamorphic (23 samples, 0.08%)</title><rect x="80.7676%" y="341" width="0.0793%" height="15" fill="rgb(217,60,2)"/><text x="81.0176%" y="351.50"></text></g><g><title>0x15540008730d (6 samples, 0.02%)</title><rect x="80.8607%" y="357" width="0.0207%" height="15" fill="rgb(207,26,24)"/><text x="81.1107%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewConsString(v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="80.9849%" y="277" width="0.0103%" height="15" fill="rgb(252,210,15)"/><text x="81.2349%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::IncrementalStringBuilder::Finish (19 samples, 0.07%)</title><rect x="80.9677%" y="293" width="0.0655%" height="15" fill="rgb(253,209,26)"/><text x="81.2177%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::SeqString::Truncate(v8::internal::Handle (11 samples, 0.04%)</title><rect x="80.9952%" y="277" width="0.0379%" height="15" fill="rgb(238,170,14)"/><text x="81.2452%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (4 samples, 0.01%)</title><rect x="81.0711%" y="261" width="0.0138%" height="15" fill="rgb(216,178,15)"/><text x="81.3211%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.01%)</title><rect x="81.0884%" y="261" width="0.0138%" height="15" fill="rgb(250,197,2)"/><text x="81.3384%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.01%)</title><rect x="81.0918%" y="245" width="0.0103%" height="15" fill="rgb(212,70,42)"/><text x="81.3418%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (13 samples, 0.04%)</title><rect x="81.0608%" y="277" width="0.0448%" height="15" fill="rgb(227,213,9)"/><text x="81.3108%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::IncrementalStringBuilder::IncrementalStringBuilder (22 samples, 0.08%)</title><rect x="81.0332%" y="293" width="0.0759%" height="15" fill="rgb(245,99,25)"/><text x="81.2832%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::InitializeReplacer(v8::internal::Handle (11 samples, 0.04%)</title><rect x="81.1090%" y="293" width="0.0379%" height="15" fill="rgb(250,82,29)"/><text x="81.3590%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::FastPropertyAt(v8::internal::Handle (8 samples, 0.03%)</title><rect x="81.3022%" y="277" width="0.0276%" height="15" fill="rgb(241,226,54)"/><text x="81.5522%" y="287.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::NextInternal&lt;false&gt; (17 samples, 0.06%)</title><rect x="81.3815%" y="261" width="0.0586%" height="15" fill="rgb(221,99,41)"/><text x="81.6315%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (9 samples, 0.03%)</title><rect x="81.4091%" y="245" width="0.0310%" height="15" fill="rgb(213,90,21)"/><text x="81.6591%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::ApplyToJsonFunction(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (52 samples, 0.18%)</title><rect x="81.3297%" y="277" width="0.1793%" height="15" fill="rgb(205,208,24)"/><text x="81.5797%" y="287.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;false&gt; (20 samples, 0.07%)</title><rect x="81.4401%" y="261" width="0.0690%" height="15" fill="rgb(246,31,12)"/><text x="81.6901%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (16 samples, 0.06%)</title><rect x="81.4539%" y="245" width="0.0552%" height="15" fill="rgb(213,154,6)"/><text x="81.7039%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeSmi (21 samples, 0.07%)</title><rect x="81.5573%" y="261" width="0.0724%" height="15" fill="rgb(222,163,29)"/><text x="81.8073%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::IntToCString(int, v8::internal::Vector (10 samples, 0.03%)</title><rect x="81.5953%" y="245" width="0.0345%" height="15" fill="rgb(227,201,8)"/><text x="81.8453%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FlatStringReader::PostGarbageCollection (4 samples, 0.01%)</title><rect x="81.7918%" y="245" width="0.0138%" height="15" fill="rgb(233,9,32)"/><text x="82.0418%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (3 samples, 0.01%)</title><rect x="81.7953%" y="229" width="0.0103%" height="15" fill="rgb(217,54,24)"/><text x="82.0453%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (8 samples, 0.03%)</title><rect x="81.8056%" y="245" width="0.0276%" height="15" fill="rgb(235,192,0)"/><text x="82.0556%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeString(v8::internal::Handle (62 samples, 0.21%)</title><rect x="81.6298%" y="261" width="0.2138%" height="15" fill="rgb(235,45,9)"/><text x="81.8798%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (3 samples, 0.01%)</title><rect x="81.8332%" y="245" width="0.0103%" height="15" fill="rgb(246,42,40)"/><text x="82.0832%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (100 samples, 0.34%)</title><rect x="81.5091%" y="277" width="0.3449%" height="15" fill="rgb(248,111,24)"/><text x="81.7591%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::SerializeString(v8::internal::Handle (3 samples, 0.01%)</title><rect x="81.8539%" y="277" width="0.0103%" height="15" fill="rgb(249,65,22)"/><text x="82.1039%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.09%)</title><rect x="81.9091%" y="197" width="0.0862%" height="15" fill="rgb(238,111,51)"/><text x="82.1591%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="81.9712%" y="181" width="0.0241%" height="15" fill="rgb(250,118,22)"/><text x="82.2212%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (29 samples, 0.10%)</title><rect x="81.8988%" y="229" width="0.1000%" height="15" fill="rgb(234,84,26)"/><text x="82.1488%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.09%)</title><rect x="81.9056%" y="213" width="0.0931%" height="15" fill="rgb(243,172,12)"/><text x="82.1556%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (33 samples, 0.11%)</title><rect x="81.8953%" y="245" width="0.1138%" height="15" fill="rgb(236,150,49)"/><text x="82.1453%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (3 samples, 0.01%)</title><rect x="81.9988%" y="229" width="0.0103%" height="15" fill="rgb(225,197,26)"/><text x="82.2488%" y="239.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (35 samples, 0.12%)</title><rect x="81.8919%" y="261" width="0.1207%" height="15" fill="rgb(214,17,42)"/><text x="82.1419%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::StackPush(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (45 samples, 0.16%)</title><rect x="81.8643%" y="277" width="0.1552%" height="15" fill="rgb(224,165,40)"/><text x="82.1143%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (254 samples, 0.88%)</title><rect x="81.1470%" y="293" width="0.8759%" height="15" fill="rgb(246,100,4)"/><text x="81.3970%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="82.0332%" y="293" width="0.0448%" height="15" fill="rgb(222,103,0)"/><text x="82.2832%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.03%)</title><rect x="82.0505%" y="277" width="0.0276%" height="15" fill="rgb(227,189,26)"/><text x="82.3005%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.03%)</title><rect x="82.0505%" y="261" width="0.0276%" height="15" fill="rgb(214,202,17)"/><text x="82.3005%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="82.1057%" y="277" width="0.0103%" height="15" fill="rgb(229,111,3)"/><text x="82.3557%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.04%)</title><rect x="82.1781%" y="261" width="0.0379%" height="15" fill="rgb(229,172,15)"/><text x="82.4281%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (51 samples, 0.18%)</title><rect x="82.0781%" y="293" width="0.1759%" height="15" fill="rgb(230,224,35)"/><text x="82.3281%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.14%)</title><rect x="82.1160%" y="277" width="0.1379%" height="15" fill="rgb(251,141,6)"/><text x="82.3660%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.04%)</title><rect x="82.2160%" y="261" width="0.0379%" height="15" fill="rgb(225,208,6)"/><text x="82.4660%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringify(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (383 samples, 1.32%)</title><rect x="80.9401%" y="309" width="1.3208%" height="15" fill="rgb(246,181,16)"/><text x="81.1901%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_JsonStringify (390 samples, 1.34%)</title><rect x="80.9194%" y="325" width="1.3449%" height="15" fill="rgb(227,129,36)"/><text x="81.1694%" y="335.50"></text></g><g><title>0x1554000874e7 (391 samples, 1.35%)</title><rect x="80.9194%" y="357" width="1.3484%" height="15" fill="rgb(248,117,24)"/><text x="81.1694%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (391 samples, 1.35%)</title><rect x="80.9194%" y="341" width="1.3484%" height="15" fill="rgb(214,185,35)"/><text x="81.1694%" y="351.50"></text></g><g><title>0x155400087522 (6 samples, 0.02%)</title><rect x="82.2677%" y="357" width="0.0207%" height="15" fill="rgb(236,150,34)"/><text x="82.5177%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (6 samples, 0.02%)</title><rect x="82.2677%" y="341" width="0.0207%" height="15" fill="rgb(243,228,27)"/><text x="82.5177%" y="351.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::HandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.01%)</title><rect x="82.3298%" y="309" width="0.0103%" height="15" fill="rgb(245,77,44)"/><text x="82.5798%" y="319.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::from_unique_ptr (39 samples, 0.13%)</title><rect x="82.3815%" y="293" width="0.1345%" height="15" fill="rgb(235,214,42)"/><text x="82.6315%" y="303.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__CONVERT__std__unique_ptr (38 samples, 0.13%)</title><rect x="82.3850%" y="277" width="0.1310%" height="15" fill="rgb(221,74,3)"/><text x="82.6350%" y="287.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (36 samples, 0.12%)</title><rect x="82.3919%" y="261" width="0.1241%" height="15" fill="rgb(206,121,29)"/><text x="82.6419%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.12%)</title><rect x="82.3988%" y="245" width="0.1172%" height="15" fill="rgb(249,131,53)"/><text x="82.6488%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.12%)</title><rect x="82.3988%" y="229" width="0.1172%" height="15" fill="rgb(236,170,29)"/><text x="82.6488%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.11%)</title><rect x="82.4091%" y="213" width="0.1069%" height="15" fill="rgb(247,96,15)"/><text x="82.6591%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.10%)</title><rect x="82.4160%" y="197" width="0.1000%" height="15" fill="rgb(211,210,7)"/><text x="82.6660%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.04%)</title><rect x="82.4781%" y="181" width="0.0379%" height="15" fill="rgb(240,88,50)"/><text x="82.7281%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="82.5022%" y="165" width="0.0138%" height="15" fill="rgb(209,229,26)"/><text x="82.7522%" y="175.50"></text></g><g><title>dyper_ops`__rdl_alloc (3 samples, 0.01%)</title><rect x="82.5229%" y="293" width="0.0103%" height="15" fill="rgb(210,68,23)"/><text x="82.7729%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="82.6367%" y="149" width="0.0138%" height="15" fill="rgb(229,180,13)"/><text x="82.8867%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="82.6505%" y="149" width="0.0103%" height="15" fill="rgb(236,53,44)"/><text x="82.9005%" y="159.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (42 samples, 0.14%)</title><rect x="82.5747%" y="229" width="0.1448%" height="15" fill="rgb(244,214,29)"/><text x="82.8247%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (41 samples, 0.14%)</title><rect x="82.5781%" y="213" width="0.1414%" height="15" fill="rgb(220,75,29)"/><text x="82.8281%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (41 samples, 0.14%)</title><rect x="82.5781%" y="197" width="0.1414%" height="15" fill="rgb(214,183,37)"/><text x="82.8281%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.14%)</title><rect x="82.5781%" y="181" width="0.1414%" height="15" fill="rgb(239,117,29)"/><text x="82.8281%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (40 samples, 0.14%)</title><rect x="82.5816%" y="165" width="0.1379%" height="15" fill="rgb(237,171,35)"/><text x="82.8316%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.06%)</title><rect x="82.6609%" y="149" width="0.0586%" height="15" fill="rgb(229,178,53)"/><text x="82.9109%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="82.7023%" y="133" width="0.0172%" height="15" fill="rgb(210,102,19)"/><text x="82.9523%" y="143.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::new_backing_store_from_boxed_slice (55 samples, 0.19%)</title><rect x="82.5333%" y="293" width="0.1897%" height="15" fill="rgb(235,127,22)"/><text x="82.7833%" y="303.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__NewBackingStore__with_data (54 samples, 0.19%)</title><rect x="82.5367%" y="277" width="0.1862%" height="15" fill="rgb(244,31,31)"/><text x="82.7867%" y="287.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::NewBackingStore(void*, unsigned long, void (*) (54 samples, 0.19%)</title><rect x="82.5367%" y="261" width="0.1862%" height="15" fill="rgb(231,43,21)"/><text x="82.7867%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::BackingStore::WrapAllocation(void*, unsigned long, void (*) (53 samples, 0.18%)</title><rect x="82.5402%" y="245" width="0.1828%" height="15" fill="rgb(217,131,35)"/><text x="82.7902%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (4 samples, 0.01%)</title><rect x="82.8402%" y="181" width="0.0138%" height="15" fill="rgb(221,149,4)"/><text x="83.0902%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (10 samples, 0.03%)</title><rect x="82.8264%" y="213" width="0.0345%" height="15" fill="rgb(232,170,28)"/><text x="83.0764%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (10 samples, 0.03%)</title><rect x="82.8264%" y="197" width="0.0345%" height="15" fill="rgb(238,56,10)"/><text x="83.0764%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (20 samples, 0.07%)</title><rect x="82.7954%" y="229" width="0.0690%" height="15" fill="rgb(235,196,14)"/><text x="83.0454%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="82.8643%" y="229" width="0.0207%" height="15" fill="rgb(216,45,48)"/><text x="83.1143%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (6 samples, 0.02%)</title><rect x="82.8850%" y="229" width="0.0207%" height="15" fill="rgb(238,213,17)"/><text x="83.1350%" y="239.50"></text></g><g><title>dyper_ops`v8::Isolate::AdjustAmountOfExternalAllocatedMemory (3 samples, 0.01%)</title><rect x="82.9333%" y="213" width="0.0103%" height="15" fill="rgb(212,13,2)"/><text x="83.1833%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::ArrayBufferSweeper::Append (20 samples, 0.07%)</title><rect x="82.9437%" y="213" width="0.0690%" height="15" fill="rgb(240,114,20)"/><text x="83.1937%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="83.1023%" y="101" width="0.0138%" height="15" fill="rgb(228,41,40)"/><text x="83.3523%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (43 samples, 0.15%)</title><rect x="83.0230%" y="165" width="0.1483%" height="15" fill="rgb(244,132,35)"/><text x="83.2730%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (42 samples, 0.14%)</title><rect x="83.0264%" y="149" width="0.1448%" height="15" fill="rgb(253,189,4)"/><text x="83.2764%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.13%)</title><rect x="83.0368%" y="133" width="0.1345%" height="15" fill="rgb(224,37,19)"/><text x="83.2868%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.13%)</title><rect x="83.0368%" y="117" width="0.1345%" height="15" fill="rgb(235,223,18)"/><text x="83.2868%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.06%)</title><rect x="83.1161%" y="101" width="0.0552%" height="15" fill="rgb(235,163,25)"/><text x="83.3661%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="83.1575%" y="85" width="0.0138%" height="15" fill="rgb(217,145,28)"/><text x="83.4075%" y="95.50"></text></g><g><title>dyper_ops`v8::internal::AllocWithRetry (45 samples, 0.16%)</title><rect x="83.0230%" y="181" width="0.1552%" height="15" fill="rgb(223,223,32)"/><text x="83.2730%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::Attach(std::__1::shared_ptr (50 samples, 0.17%)</title><rect x="83.0126%" y="213" width="0.1724%" height="15" fill="rgb(227,189,39)"/><text x="83.2626%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Malloced::operator new (47 samples, 0.16%)</title><rect x="83.0230%" y="197" width="0.1621%" height="15" fill="rgb(248,10,22)"/><text x="83.2730%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::GetHeaderSize (4 samples, 0.01%)</title><rect x="83.1850%" y="213" width="0.0138%" height="15" fill="rgb(248,46,39)"/><text x="83.4350%" y="223.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::with_backing_store (139 samples, 0.48%)</title><rect x="82.7229%" y="293" width="0.4793%" height="15" fill="rgb(248,113,48)"/><text x="82.9729%" y="303.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__New__with_backing_store (136 samples, 0.47%)</title><rect x="82.7333%" y="277" width="0.4690%" height="15" fill="rgb(245,16,25)"/><text x="82.9833%" y="287.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::New(v8::Isolate*, std::__1::shared_ptr (128 samples, 0.44%)</title><rect x="82.7609%" y="261" width="0.4414%" height="15" fill="rgb(249,152,16)"/><text x="83.0109%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayBuffer(std::__1::shared_ptr (121 samples, 0.42%)</title><rect x="82.7850%" y="245" width="0.4173%" height="15" fill="rgb(250,16,1)"/><text x="83.0350%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::Setup(v8::internal::SharedFlag, std::__1::shared_ptr (84 samples, 0.29%)</title><rect x="82.9126%" y="229" width="0.2897%" height="15" fill="rgb(249,138,3)"/><text x="83.1626%" y="239.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::String&gt;&gt;::try_from (3 samples, 0.01%)</title><rect x="83.2023%" y="293" width="0.0103%" height="15" fill="rgb(227,71,41)"/><text x="83.4523%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (4 samples, 0.01%)</title><rect x="83.2782%" y="261" width="0.0138%" height="15" fill="rgb(209,184,23)"/><text x="83.5282%" y="271.50"></text></g><g><title>dyper_ops`v8::String::Utf8Length (20 samples, 0.07%)</title><rect x="83.2299%" y="277" width="0.0690%" height="15" fill="rgb(223,215,31)"/><text x="83.4799%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Logger::is_logging (3 samples, 0.01%)</title><rect x="83.4299%" y="261" width="0.0103%" height="15" fill="rgb(210,146,28)"/><text x="83.6799%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (6 samples, 0.02%)</title><rect x="83.4402%" y="261" width="0.0207%" height="15" fill="rgb(209,183,41)"/><text x="83.6902%" y="271.50"></text></g><g><title>dyper_ops`v8::String::WriteUtf8 (60 samples, 0.21%)</title><rect x="83.2988%" y="277" width="0.2069%" height="15" fill="rgb(209,224,45)"/><text x="83.5488%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.04%)</title><rect x="83.4644%" y="261" width="0.0414%" height="15" fill="rgb(224,209,51)"/><text x="83.7144%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="83.5851%" y="213" width="0.0207%" height="15" fill="rgb(223,17,39)"/><text x="83.8351%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (39 samples, 0.13%)</title><rect x="83.5058%" y="277" width="0.1345%" height="15" fill="rgb(234,204,37)"/><text x="83.7558%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (36 samples, 0.12%)</title><rect x="83.5161%" y="261" width="0.1241%" height="15" fill="rgb(236,120,5)"/><text x="83.7661%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.12%)</title><rect x="83.5230%" y="245" width="0.1172%" height="15" fill="rgb(248,97,27)"/><text x="83.7730%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.11%)</title><rect x="83.5265%" y="229" width="0.1138%" height="15" fill="rgb(240,66,17)"/><text x="83.7765%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.03%)</title><rect x="83.6058%" y="213" width="0.0345%" height="15" fill="rgb(210,79,3)"/><text x="83.8558%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="83.6299%" y="197" width="0.0103%" height="15" fill="rgb(214,176,27)"/><text x="83.8799%" y="207.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::to_rust_string_lossy (125 samples, 0.43%)</title><rect x="83.2126%" y="293" width="0.4311%" height="15" fill="rgb(235,185,3)"/><text x="83.4626%" y="303.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__reset (3 samples, 0.01%)</title><rect x="83.6471%" y="293" width="0.0103%" height="15" fill="rgb(227,24,12)"/><text x="83.8971%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.01%)</title><rect x="83.7472%" y="245" width="0.0138%" height="15" fill="rgb(252,169,48)"/><text x="83.9972%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (4 samples, 0.01%)</title><rect x="83.7644%" y="213" width="0.0138%" height="15" fill="rgb(212,65,1)"/><text x="84.0144%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (12 samples, 0.04%)</title><rect x="83.7609%" y="245" width="0.0414%" height="15" fill="rgb(242,39,24)"/><text x="84.0109%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (12 samples, 0.04%)</title><rect x="83.7609%" y="229" width="0.0414%" height="15" fill="rgb(249,32,23)"/><text x="84.0109%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (7 samples, 0.02%)</title><rect x="83.7782%" y="213" width="0.0241%" height="15" fill="rgb(251,195,23)"/><text x="84.0282%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (6 samples, 0.02%)</title><rect x="83.7816%" y="197" width="0.0207%" height="15" fill="rgb(236,174,8)"/><text x="84.0316%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (6 samples, 0.02%)</title><rect x="83.7816%" y="181" width="0.0207%" height="15" fill="rgb(220,197,8)"/><text x="84.0316%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (6 samples, 0.02%)</title><rect x="83.7816%" y="165" width="0.0207%" height="15" fill="rgb(240,108,37)"/><text x="84.0316%" y="175.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobHandle::Join (5 samples, 0.02%)</title><rect x="83.7851%" y="149" width="0.0172%" height="15" fill="rgb(232,176,24)"/><text x="84.0351%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSTypedArray(v8::internal::ExternalArrayType, v8::internal::Handle (43 samples, 0.15%)</title><rect x="83.6678%" y="277" width="0.1483%" height="15" fill="rgb(243,35,29)"/><text x="83.9178%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayBufferView(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::FixedArrayBase&gt;, v8::internal::Handle (31 samples, 0.11%)</title><rect x="83.7092%" y="261" width="0.1069%" height="15" fill="rgb(210,37,18)"/><text x="83.9592%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::GetHeaderSize (4 samples, 0.01%)</title><rect x="83.8023%" y="245" width="0.0138%" height="15" fill="rgb(224,184,40)"/><text x="84.0523%" y="255.50"></text></g><g><title>dyper_ops`v8::Uint8Array::New(v8::Local (47 samples, 0.16%)</title><rect x="83.6609%" y="293" width="0.1621%" height="15" fill="rgb(236,39,29)"/><text x="83.9109%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.06%)</title><rect x="83.8437%" y="293" width="0.0552%" height="15" fill="rgb(232,48,39)"/><text x="84.0937%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.04%)</title><rect x="83.8541%" y="277" width="0.0448%" height="15" fill="rgb(236,34,42)"/><text x="84.1041%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.04%)</title><rect x="83.8610%" y="261" width="0.0379%" height="15" fill="rgb(243,106,37)"/><text x="84.1110%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.11%)</title><rect x="83.8989%" y="293" width="0.1138%" height="15" fill="rgb(218,96,6)"/><text x="84.1489%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.07%)</title><rect x="83.9472%" y="277" width="0.0655%" height="15" fill="rgb(235,130,12)"/><text x="84.1972%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.05%)</title><rect x="83.9644%" y="261" width="0.0483%" height="15" fill="rgb(231,95,0)"/><text x="84.2144%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (37 samples, 0.13%)</title><rect x="84.0127%" y="293" width="0.1276%" height="15" fill="rgb(228,12,23)"/><text x="84.2627%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.12%)</title><rect x="84.0230%" y="277" width="0.1172%" height="15" fill="rgb(216,12,1)"/><text x="84.2730%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.11%)</title><rect x="84.0265%" y="261" width="0.1138%" height="15" fill="rgb(219,59,3)"/><text x="84.2765%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.11%)</title><rect x="84.0299%" y="245" width="0.1104%" height="15" fill="rgb(215,208,46)"/><text x="84.2799%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.06%)</title><rect x="84.0817%" y="229" width="0.0586%" height="15" fill="rgb(254,224,29)"/><text x="84.3317%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="84.1230%" y="213" width="0.0172%" height="15" fill="rgb(232,14,29)"/><text x="84.3730%" y="223.50"></text></g><g><title>dyper_ops`deno_core::bindings::encode (520 samples, 1.79%)</title><rect x="82.3540%" y="309" width="1.7932%" height="15" fill="rgb(208,45,52)"/><text x="82.6040%" y="319.50">d..</text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_callback_scope_data (3 samples, 0.01%)</title><rect x="84.1644%" y="309" width="0.0103%" height="15" fill="rgb(234,191,28)"/><text x="84.4144%" y="319.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (547 samples, 1.89%)</title><rect x="82.3195%" y="325" width="1.8863%" height="15" fill="rgb(244,67,43)"/><text x="82.5695%" y="335.50">d..</text></g><g><title>0x155400087569 (560 samples, 1.93%)</title><rect x="82.2919%" y="357" width="1.9312%" height="15" fill="rgb(236,189,24)"/><text x="82.5419%" y="367.50">0..</text></g><g><title>dyper_ops`Builtins_CallApiCallback (560 samples, 1.93%)</title><rect x="82.2919%" y="341" width="1.9312%" height="15" fill="rgb(239,214,33)"/><text x="82.5419%" y="351.50">d..</text></g><g><title>0x1554000875aa (5 samples, 0.02%)</title><rect x="84.2265%" y="357" width="0.0172%" height="15" fill="rgb(226,176,41)"/><text x="84.4765%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC_Megamorphic (5 samples, 0.02%)</title><rect x="84.2265%" y="341" width="0.0172%" height="15" fill="rgb(248,47,8)"/><text x="84.4765%" y="351.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::HandleScope as core::convert::AsRef&lt;rusty_v8::scope::HandleScope&gt;&gt;::as_ref (3 samples, 0.01%)</title><rect x="84.2989%" y="309" width="0.0103%" height="15" fill="rgb(218,81,44)"/><text x="84.5489%" y="319.50"></text></g><g><title>dyper_ops`&lt;T as core::any::Any&gt;::type_id (3 samples, 0.01%)</title><rect x="84.4300%" y="293" width="0.0103%" height="15" fill="rgb(213,98,6)"/><text x="84.6800%" y="303.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (3 samples, 0.01%)</title><rect x="84.4438%" y="293" width="0.0103%" height="15" fill="rgb(222,85,22)"/><text x="84.6938%" y="303.50"></text></g><g><title>dyper_ops`std::__1::__shared_weak_count::__release_weak (3 samples, 0.01%)</title><rect x="84.6024%" y="197" width="0.0103%" height="15" fill="rgb(239,46,39)"/><text x="84.8524%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="84.8990%" y="101" width="0.0138%" height="15" fill="rgb(237,12,29)"/><text x="85.1490%" y="111.50"></text></g><g><title>dyper_ops`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::__unordered_map_hasher&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::hash&lt;void const*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::equal_to&lt;void const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt; &gt;::__emplace_unique_key_args&lt;void const*, std::__1::pair&lt;void const* const, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt;(void const* const&amp;, std::__1::pair&lt;void const* const, std::__1::weak_ptr (102 samples, 0.35%)</title><rect x="84.6127%" y="197" width="0.3517%" height="15" fill="rgb(214,77,8)"/><text x="84.8627%" y="207.50"></text></g><g><title>dyper_ops`operator new(unsigned long) (37 samples, 0.13%)</title><rect x="84.8369%" y="181" width="0.1276%" height="15" fill="rgb(217,168,37)"/><text x="85.0869%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (36 samples, 0.12%)</title><rect x="84.8403%" y="165" width="0.1241%" height="15" fill="rgb(221,217,23)"/><text x="85.0903%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (36 samples, 0.12%)</title><rect x="84.8403%" y="149" width="0.1241%" height="15" fill="rgb(243,229,36)"/><text x="85.0903%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.12%)</title><rect x="84.8403%" y="133" width="0.1241%" height="15" fill="rgb(251,163,40)"/><text x="85.0903%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (35 samples, 0.12%)</title><rect x="84.8438%" y="117" width="0.1207%" height="15" fill="rgb(237,222,12)"/><text x="85.0938%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.05%)</title><rect x="84.9128%" y="101" width="0.0517%" height="15" fill="rgb(248,132,6)"/><text x="85.1628%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="84.9438%" y="85" width="0.0207%" height="15" fill="rgb(227,167,50)"/><text x="85.1938%" y="95.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (35 samples, 0.12%)</title><rect x="84.9645%" y="197" width="0.1207%" height="15" fill="rgb(242,84,37)"/><text x="85.2145%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (35 samples, 0.12%)</title><rect x="84.9645%" y="181" width="0.1207%" height="15" fill="rgb(212,4,50)"/><text x="85.2145%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (26 samples, 0.09%)</title><rect x="85.0852%" y="197" width="0.0897%" height="15" fill="rgb(230,228,32)"/><text x="85.3352%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (26 samples, 0.09%)</title><rect x="85.0852%" y="181" width="0.0897%" height="15" fill="rgb(248,217,23)"/><text x="85.3352%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::GlobalBackingStoreRegistry::Register(std::__1::shared_ptr (175 samples, 0.60%)</title><rect x="84.5748%" y="213" width="0.6035%" height="15" fill="rgb(238,197,32)"/><text x="84.8248%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::JSArrayBuffer::GetBackingStore (6 samples, 0.02%)</title><rect x="85.1783%" y="213" width="0.0207%" height="15" fill="rgb(236,106,1)"/><text x="85.4283%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.02%)</title><rect x="85.2024%" y="213" width="0.0172%" height="15" fill="rgb(219,228,13)"/><text x="85.4524%" y="223.50"></text></g><g><title>dyper_ops`rusty_v8::array_buffer::_&lt;impl rusty_v8::data::ArrayBuffer&gt;::get_backing_store (215 samples, 0.74%)</title><rect x="84.4920%" y="261" width="0.7414%" height="15" fill="rgb(238,30,35)"/><text x="84.7420%" y="271.50"></text></g><g><title>dyper_ops`v8__ArrayBuffer__GetBackingStore (215 samples, 0.74%)</title><rect x="84.4920%" y="245" width="0.7414%" height="15" fill="rgb(236,70,23)"/><text x="84.7420%" y="255.50"></text></g><g><title>dyper_ops`v8::ArrayBuffer::GetBackingStore (215 samples, 0.74%)</title><rect x="84.4920%" y="229" width="0.7414%" height="15" fill="rgb(249,104,48)"/><text x="84.7420%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (4 samples, 0.01%)</title><rect x="85.2197%" y="213" width="0.0138%" height="15" fill="rgb(254,117,50)"/><text x="85.4697%" y="223.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::ArrayBufferView&gt;&gt;::try_from (4 samples, 0.01%)</title><rect x="85.2369%" y="261" width="0.0138%" height="15" fill="rgb(223,152,4)"/><text x="85.4869%" y="271.50"></text></g><g><title>dyper_ops`v8::Value::IsArrayBufferView (4 samples, 0.01%)</title><rect x="85.2369%" y="245" width="0.0138%" height="15" fill="rgb(245,6,2)"/><text x="85.4869%" y="255.50"></text></g><g><title>dyper_ops`v8::ArrayBufferView::Buffer (4 samples, 0.01%)</title><rect x="85.2507%" y="261" width="0.0138%" height="15" fill="rgb(249,150,24)"/><text x="85.5007%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JSTypedArray::GetBuffer (3 samples, 0.01%)</title><rect x="85.2542%" y="245" width="0.0103%" height="15" fill="rgb(228,185,42)"/><text x="85.5042%" y="255.50"></text></g><g><title>dyper_ops`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (230 samples, 0.79%)</title><rect x="84.4817%" y="277" width="0.7932%" height="15" fill="rgb(226,39,33)"/><text x="84.7317%" y="287.50"></text></g><g><title>dyper_ops`smallvec::SmallVec&lt;A&gt;::reserve (4 samples, 0.01%)</title><rect x="85.2817%" y="277" width="0.0138%" height="15" fill="rgb(221,166,19)"/><text x="85.5317%" y="287.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (243 samples, 0.84%)</title><rect x="84.4644%" y="293" width="0.8380%" height="15" fill="rgb(209,109,2)"/><text x="84.7144%" y="303.50"></text></g><g><title>dyper_ops`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="85.3783%" y="261" width="0.0103%" height="15" fill="rgb(252,216,26)"/><text x="85.6283%" y="271.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (9 samples, 0.03%)</title><rect x="85.3886%" y="261" width="0.0310%" height="15" fill="rgb(227,173,36)"/><text x="85.6386%" y="271.50"></text></g><g><title>dyper_ops`&lt;str as serde_json::value::index::Index&gt;::index_into (5 samples, 0.02%)</title><rect x="85.4266%" y="261" width="0.0172%" height="15" fill="rgb(209,90,7)"/><text x="85.6766%" y="271.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="85.5783%" y="245" width="0.0103%" height="15" fill="rgb(250,194,11)"/><text x="85.8283%" y="255.50"></text></g><g><title>dyper_ops`&lt;deno_core::zero_copy_buf::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="85.5887%" y="245" width="0.0172%" height="15" fill="rgb(220,72,50)"/><text x="85.8387%" y="255.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (11 samples, 0.04%)</title><rect x="85.6094%" y="245" width="0.0379%" height="15" fill="rgb(222,106,48)"/><text x="85.8594%" y="255.50"></text></g><g><title>dyper_ops`smallvec::SmallVec&lt;A&gt;::reserve (6 samples, 0.02%)</title><rect x="85.6266%" y="229" width="0.0207%" height="15" fill="rgb(216,220,45)"/><text x="85.8766%" y="239.50"></text></g><g><title>dyper_ops`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.05%)</title><rect x="85.6473%" y="245" width="0.0483%" height="15" fill="rgb(234,112,18)"/><text x="85.8973%" y="255.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__reset (12 samples, 0.04%)</title><rect x="85.6542%" y="229" width="0.0414%" height="15" fill="rgb(206,179,9)"/><text x="85.9042%" y="239.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="85.6990%" y="229" width="0.0103%" height="15" fill="rgb(215,115,40)"/><text x="85.9490%" y="239.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.08%)</title><rect x="85.7818%" y="213" width="0.0759%" height="15" fill="rgb(222,69,34)"/><text x="86.0318%" y="223.50"></text></g><g><title>dyper_ops`&lt;str as serde_json::value::index::Index&gt;::index_into (49 samples, 0.17%)</title><rect x="85.6956%" y="245" width="0.1690%" height="15" fill="rgb(209,161,10)"/><text x="85.9456%" y="255.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (45 samples, 0.16%)</title><rect x="85.7094%" y="229" width="0.1552%" height="15" fill="rgb(217,6,38)"/><text x="85.9594%" y="239.50"></text></g><g><title>dyper_ops`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (8 samples, 0.03%)</title><rect x="86.0197%" y="213" width="0.0276%" height="15" fill="rgb(229,229,48)"/><text x="86.2697%" y="223.50"></text></g><g><title>dyper_ops`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (24 samples, 0.08%)</title><rect x="86.1922%" y="181" width="0.0828%" height="15" fill="rgb(225,21,28)"/><text x="86.4422%" y="191.50"></text></g><g><title>dyper_ops`core::str::converts::from_utf8 (13 samples, 0.04%)</title><rect x="86.2301%" y="165" width="0.0448%" height="15" fill="rgb(206,33,13)"/><text x="86.4801%" y="175.50"></text></g><g><title>dyper_ops`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (27 samples, 0.09%)</title><rect x="86.2922%" y="165" width="0.0931%" height="15" fill="rgb(242,178,17)"/><text x="86.5422%" y="175.50"></text></g><g><title>dyper_ops`core::str::converts::from_utf8 (10 samples, 0.03%)</title><rect x="86.3508%" y="149" width="0.0345%" height="15" fill="rgb(220,162,5)"/><text x="86.6008%" y="159.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (55 samples, 0.19%)</title><rect x="86.2749%" y="181" width="0.1897%" height="15" fill="rgb(210,33,43)"/><text x="86.5249%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.08%)</title><rect x="86.3887%" y="165" width="0.0759%" height="15" fill="rgb(216,116,54)"/><text x="86.6387%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (21 samples, 0.07%)</title><rect x="86.3922%" y="149" width="0.0724%" height="15" fill="rgb(249,92,24)"/><text x="86.6422%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.07%)</title><rect x="86.3922%" y="133" width="0.0724%" height="15" fill="rgb(231,189,14)"/><text x="86.6422%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.06%)</title><rect x="86.4025%" y="117" width="0.0621%" height="15" fill="rgb(230,8,41)"/><text x="86.6525%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="86.4473%" y="101" width="0.0172%" height="15" fill="rgb(249,7,27)"/><text x="86.6973%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.01%)</title><rect x="86.5129%" y="117" width="0.0103%" height="15" fill="rgb(232,86,5)"/><text x="86.7629%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (23 samples, 0.08%)</title><rect x="86.4680%" y="181" width="0.0793%" height="15" fill="rgb(224,175,18)"/><text x="86.7180%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.07%)</title><rect x="86.4784%" y="165" width="0.0690%" height="15" fill="rgb(220,129,12)"/><text x="86.7284%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.07%)</title><rect x="86.4818%" y="149" width="0.0655%" height="15" fill="rgb(210,19,36)"/><text x="86.7318%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.06%)</title><rect x="86.4853%" y="133" width="0.0621%" height="15" fill="rgb(219,96,14)"/><text x="86.7353%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="86.5232%" y="117" width="0.0241%" height="15" fill="rgb(249,106,1)"/><text x="86.7732%" y="127.50"></text></g><g><title>dyper_ops`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (121 samples, 0.42%)</title><rect x="86.1473%" y="197" width="0.4173%" height="15" fill="rgb(249,155,20)"/><text x="86.3973%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="86.5473%" y="181" width="0.0172%" height="15" fill="rgb(244,168,9)"/><text x="86.7973%" y="191.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.01%)</title><rect x="86.5646%" y="197" width="0.0103%" height="15" fill="rgb(216,23,50)"/><text x="86.8146%" y="207.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="86.7301%" y="181" width="0.0448%" height="15" fill="rgb(224,219,20)"/><text x="86.9801%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="86.9405%" y="69" width="0.0138%" height="15" fill="rgb(222,156,15)"/><text x="87.1905%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.12%)</title><rect x="86.8681%" y="117" width="0.1172%" height="15" fill="rgb(231,97,17)"/><text x="87.1181%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.11%)</title><rect x="86.8750%" y="101" width="0.1104%" height="15" fill="rgb(218,70,48)"/><text x="87.1250%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.10%)</title><rect x="86.8819%" y="85" width="0.1035%" height="15" fill="rgb(212,196,52)"/><text x="87.1319%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.03%)</title><rect x="86.9543%" y="69" width="0.0310%" height="15" fill="rgb(243,203,18)"/><text x="87.2043%" y="79.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (41 samples, 0.14%)</title><rect x="86.8508%" y="165" width="0.1414%" height="15" fill="rgb(252,125,41)"/><text x="87.1008%" y="175.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (40 samples, 0.14%)</title><rect x="86.8543%" y="149" width="0.1379%" height="15" fill="rgb(223,180,33)"/><text x="87.1043%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (38 samples, 0.13%)</title><rect x="86.8612%" y="133" width="0.1310%" height="15" fill="rgb(254,159,46)"/><text x="87.1112%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="87.1612%" y="53" width="0.0207%" height="15" fill="rgb(254,38,10)"/><text x="87.4112%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc (43 samples, 0.15%)</title><rect x="87.0853%" y="117" width="0.1483%" height="15" fill="rgb(208,217,32)"/><text x="87.3353%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (42 samples, 0.14%)</title><rect x="87.0888%" y="101" width="0.1448%" height="15" fill="rgb(221,120,13)"/><text x="87.3388%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (40 samples, 0.14%)</title><rect x="87.0957%" y="85" width="0.1379%" height="15" fill="rgb(246,54,52)"/><text x="87.3457%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.13%)</title><rect x="87.0991%" y="69" width="0.1345%" height="15" fill="rgb(242,34,25)"/><text x="87.3491%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.05%)</title><rect x="87.1819%" y="53" width="0.0517%" height="15" fill="rgb(247,209,9)"/><text x="87.4319%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="87.2233%" y="37" width="0.0103%" height="15" fill="rgb(228,71,26)"/><text x="87.4733%" y="47.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (49 samples, 0.17%)</title><rect x="87.0715%" y="133" width="0.1690%" height="15" fill="rgb(222,145,49)"/><text x="87.3215%" y="143.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::insert (72 samples, 0.25%)</title><rect x="86.9957%" y="165" width="0.2483%" height="15" fill="rgb(218,121,17)"/><text x="87.2457%" y="175.50"></text></g><g><title>dyper_ops`hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (58 samples, 0.20%)</title><rect x="87.0439%" y="149" width="0.2000%" height="15" fill="rgb(244,50,7)"/><text x="87.2939%" y="159.50"></text></g><g><title>dyper_ops`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (144 samples, 0.50%)</title><rect x="86.7784%" y="181" width="0.4966%" height="15" fill="rgb(246,229,37)"/><text x="87.0284%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="87.2508%" y="165" width="0.0241%" height="15" fill="rgb(225,18,5)"/><text x="87.5008%" y="175.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (204 samples, 0.70%)</title><rect x="86.5749%" y="197" width="0.7035%" height="15" fill="rgb(213,204,8)"/><text x="86.8249%" y="207.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21 samples, 0.07%)</title><rect x="87.2888%" y="197" width="0.0724%" height="15" fill="rgb(238,103,6)"/><text x="87.5388%" y="207.50"></text></g><g><title>dyper_ops`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (11 samples, 0.04%)</title><rect x="87.3233%" y="181" width="0.0379%" height="15" fill="rgb(222,25,35)"/><text x="87.5733%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.02%)</title><rect x="87.3612%" y="197" width="0.0207%" height="15" fill="rgb(213,203,35)"/><text x="87.6112%" y="207.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (399 samples, 1.38%)</title><rect x="86.0473%" y="213" width="1.3760%" height="15" fill="rgb(221,79,53)"/><text x="86.2973%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.04%)</title><rect x="87.3853%" y="197" width="0.0379%" height="15" fill="rgb(243,200,35)"/><text x="87.6353%" y="207.50"></text></g><g><title>dyper_ops`serde_json::de::from_slice (454 samples, 1.57%)</title><rect x="85.8714%" y="245" width="1.5656%" height="15" fill="rgb(248,60,25)"/><text x="86.1214%" y="255.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (439 samples, 1.51%)</title><rect x="85.9232%" y="229" width="1.5139%" height="15" fill="rgb(227,53,46)"/><text x="86.1732%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.03%)</title><rect x="87.5474%" y="181" width="0.0276%" height="15" fill="rgb(216,120,32)"/><text x="87.7974%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.16%)</title><rect x="87.4784%" y="213" width="0.1621%" height="15" fill="rgb(220,134,1)"/><text x="87.7284%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.16%)</title><rect x="87.4853%" y="197" width="0.1552%" height="15" fill="rgb(237,168,5)"/><text x="87.7353%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.07%)</title><rect x="87.5750%" y="181" width="0.0655%" height="15" fill="rgb(231,100,33)"/><text x="87.8250%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="87.6267%" y="165" width="0.0138%" height="15" fill="rgb(236,177,47)"/><text x="87.8767%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (54 samples, 0.19%)</title><rect x="87.4578%" y="245" width="0.1862%" height="15" fill="rgb(235,7,49)"/><text x="87.7078%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (51 samples, 0.18%)</title><rect x="87.4681%" y="229" width="0.1759%" height="15" fill="rgb(232,119,22)"/><text x="87.7181%" y="239.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_async::_{{closure}} (639 samples, 2.20%)</title><rect x="85.4438%" y="261" width="2.2036%" height="15" fill="rgb(254,73,53)"/><text x="85.6938%" y="271.50">d..</text></g><g><title>dyper_ops`serde_json::value::Value::as_u64 (11 samples, 0.04%)</title><rect x="87.6474%" y="261" width="0.0379%" height="15" fill="rgb(251,35,20)"/><text x="87.8974%" y="271.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (676 samples, 2.33%)</title><rect x="85.3611%" y="277" width="2.3312%" height="15" fill="rgb(241,119,20)"/><text x="85.6111%" y="287.50">d..</text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (702 samples, 2.42%)</title><rect x="85.3024%" y="293" width="2.4209%" height="15" fill="rgb(207,102,14)"/><text x="85.5524%" y="303.50">dy..</text></g><g><title>dyper_ops`deno_core::ops::json_op_async::_{{closure}} (9 samples, 0.03%)</title><rect x="87.6923%" y="277" width="0.0310%" height="15" fill="rgb(248,201,50)"/><text x="87.9423%" y="287.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (6 samples, 0.02%)</title><rect x="87.7233%" y="293" width="0.0207%" height="15" fill="rgb(222,185,44)"/><text x="87.9733%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="87.8957%" y="213" width="0.0207%" height="15" fill="rgb(218,107,18)"/><text x="88.1457%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (44 samples, 0.15%)</title><rect x="87.8198%" y="261" width="0.1517%" height="15" fill="rgb(237,177,39)"/><text x="88.0698%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (43 samples, 0.15%)</title><rect x="87.8233%" y="245" width="0.1483%" height="15" fill="rgb(246,69,6)"/><text x="88.0733%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (40 samples, 0.14%)</title><rect x="87.8336%" y="229" width="0.1379%" height="15" fill="rgb(234,208,37)"/><text x="88.0836%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.06%)</title><rect x="87.9164%" y="213" width="0.0552%" height="15" fill="rgb(225,4,6)"/><text x="88.1664%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="87.9578%" y="197" width="0.0138%" height="15" fill="rgb(233,45,0)"/><text x="88.2078%" y="207.50"></text></g><g><title>dyper_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (67 samples, 0.23%)</title><rect x="87.7440%" y="293" width="0.2311%" height="15" fill="rgb(226,136,5)"/><text x="87.9940%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (45 samples, 0.16%)</title><rect x="87.8198%" y="277" width="0.1552%" height="15" fill="rgb(211,91,47)"/><text x="88.0698%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_slot (8 samples, 0.03%)</title><rect x="87.9957%" y="293" width="0.0276%" height="15" fill="rgb(242,88,51)"/><text x="88.2457%" y="303.50"></text></g><g><title>dyper_ops`smallvec::SmallVec&lt;A&gt;::reserve (3 samples, 0.01%)</title><rect x="88.0233%" y="293" width="0.0103%" height="15" fill="rgb(230,91,28)"/><text x="88.2733%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.10%)</title><rect x="88.0509%" y="261" width="0.1035%" height="15" fill="rgb(254,186,29)"/><text x="88.3009%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.09%)</title><rect x="88.0612%" y="245" width="0.0931%" height="15" fill="rgb(238,6,4)"/><text x="88.3112%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (3 samples, 0.01%)</title><rect x="88.1440%" y="229" width="0.0103%" height="15" fill="rgb(221,151,16)"/><text x="88.3940%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (33 samples, 0.11%)</title><rect x="88.0440%" y="277" width="0.1138%" height="15" fill="rgb(251,143,52)"/><text x="88.2940%" y="287.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (1,114 samples, 3.84%)</title><rect x="84.3196%" y="309" width="3.8416%" height="15" fill="rgb(206,90,15)"/><text x="84.5696%" y="319.50">dype..</text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.12%)</title><rect x="88.0440%" y="293" width="0.1172%" height="15" fill="rgb(218,35,8)"/><text x="88.2940%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.01%)</title><rect x="88.1819%" y="309" width="0.0103%" height="15" fill="rgb(239,215,6)"/><text x="88.4319%" y="319.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1,133 samples, 3.91%)</title><rect x="84.2886%" y="325" width="3.9072%" height="15" fill="rgb(245,116,39)"/><text x="84.5386%" y="335.50">dype..</text></g><g><title>0x1554000875e0 (1,154 samples, 3.98%)</title><rect x="84.2437%" y="357" width="3.9796%" height="15" fill="rgb(242,65,28)"/><text x="84.4937%" y="367.50">0x15..</text></g><g><title>dyper_ops`Builtins_CallApiCallback (1,154 samples, 3.98%)</title><rect x="84.2437%" y="341" width="3.9796%" height="15" fill="rgb(252,132,53)"/><text x="84.4937%" y="351.50">dype..</text></g><g><title>0x1554000876ce (3 samples, 0.01%)</title><rect x="88.2475%" y="357" width="0.0103%" height="15" fill="rgb(224,159,50)"/><text x="88.4975%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Runtime::SetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (4 samples, 0.01%)</title><rect x="88.3026%" y="325" width="0.0138%" height="15" fill="rgb(224,93,4)"/><text x="88.5526%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (5 samples, 0.02%)</title><rect x="88.3544%" y="309" width="0.0172%" height="15" fill="rgb(208,81,34)"/><text x="88.6044%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (4 samples, 0.01%)</title><rect x="88.3716%" y="309" width="0.0138%" height="15" fill="rgb(233,92,54)"/><text x="88.6216%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::AddDataElement(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (5 samples, 0.02%)</title><rect x="88.4302%" y="293" width="0.0172%" height="15" fill="rgb(237,21,14)"/><text x="88.6802%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (3 samples, 0.01%)</title><rect x="88.4544%" y="293" width="0.0103%" height="15" fill="rgb(249,128,51)"/><text x="88.7044%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (4 samples, 0.01%)</title><rect x="88.4647%" y="293" width="0.0138%" height="15" fill="rgb(223,129,24)"/><text x="88.7147%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::AddImpl(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (5 samples, 0.02%)</title><rect x="88.5371%" y="277" width="0.0172%" height="15" fill="rgb(231,168,25)"/><text x="88.7871%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::IsMoreGeneralElementsKindTransition (5 samples, 0.02%)</title><rect x="88.5613%" y="277" width="0.0172%" height="15" fill="rgb(224,39,20)"/><text x="88.8113%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::SetEntry (4 samples, 0.01%)</title><rect x="88.8165%" y="229" width="0.0138%" height="15" fill="rgb(225,152,53)"/><text x="89.0665%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.03%)</title><rect x="88.8889%" y="197" width="0.0276%" height="15" fill="rgb(252,17,24)"/><text x="89.1389%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (8 samples, 0.03%)</title><rect x="88.8889%" y="181" width="0.0276%" height="15" fill="rgb(250,114,30)"/><text x="89.1389%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (7 samples, 0.02%)</title><rect x="88.8923%" y="165" width="0.0241%" height="15" fill="rgb(229,5,4)"/><text x="89.1423%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (7 samples, 0.02%)</title><rect x="88.8923%" y="149" width="0.0241%" height="15" fill="rgb(225,176,49)"/><text x="89.1423%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (6 samples, 0.02%)</title><rect x="88.8958%" y="133" width="0.0207%" height="15" fill="rgb(224,221,49)"/><text x="89.1458%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (6 samples, 0.02%)</title><rect x="88.8958%" y="117" width="0.0207%" height="15" fill="rgb(253,169,27)"/><text x="89.1458%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (17 samples, 0.06%)</title><rect x="88.8613%" y="213" width="0.0586%" height="15" fill="rgb(211,206,16)"/><text x="89.1113%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Rehash (28 samples, 0.10%)</title><rect x="88.9199%" y="213" width="0.0966%" height="15" fill="rgb(244,87,35)"/><text x="89.1699%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::NumberDictionary&gt; v8::internal::Dictionary&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::Add&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::NumberDictionary&gt;, unsigned int, v8::internal::Handle (78 samples, 0.27%)</title><rect x="88.7509%" y="245" width="0.2690%" height="15" fill="rgb(246,28,10)"/><text x="89.0009%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::NumberDictionary&gt; v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (53 samples, 0.18%)</title><rect x="88.8372%" y="229" width="0.1828%" height="15" fill="rgb(229,12,44)"/><text x="89.0872%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::NumberDictionary&gt; v8::internal::HashTable&lt;v8::internal::NumberDictionary, v8::internal::NumberDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="89.0199%" y="245" width="0.0172%" height="15" fill="rgb(210,145,37)"/><text x="89.2699%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap_GenerationalBarrierSlow (3 samples, 0.01%)</title><rect x="89.0372%" y="245" width="0.0103%" height="15" fill="rgb(227,112,52)"/><text x="89.2872%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::DictionaryElementsAccessor::AddImpl(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (112 samples, 0.39%)</title><rect x="88.6751%" y="261" width="0.3862%" height="15" fill="rgb(238,155,34)"/><text x="88.9251%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::NumberDictionary::UpdateMaxNumberKey(unsigned int, v8::internal::Handle (4 samples, 0.01%)</title><rect x="89.0475%" y="245" width="0.0138%" height="15" fill="rgb(239,226,36)"/><text x="89.2975%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (175 samples, 0.60%)</title><rect x="88.4785%" y="293" width="0.6035%" height="15" fill="rgb(230,16,23)"/><text x="88.7285%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::AddDataElement(v8::internal::Handle&lt;v8::internal::JSObject&gt;, unsigned int, v8::internal::Handle (146 samples, 0.50%)</title><rect x="88.5785%" y="277" width="0.5035%" height="15" fill="rgb(236,171,36)"/><text x="88.8285%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::NumberDictionary::UpdateMaxNumberKey(unsigned int, v8::internal::Handle (4 samples, 0.01%)</title><rect x="89.0682%" y="261" width="0.0138%" height="15" fill="rgb(221,22,14)"/><text x="89.3182%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Object::SetProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (3 samples, 0.01%)</title><rect x="89.0820%" y="293" width="0.0103%" height="15" fill="rgb(242,43,11)"/><text x="89.3320%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::GetEntryForIndex (5 samples, 0.02%)</title><rect x="89.1096%" y="277" width="0.0172%" height="15" fill="rgb(232,69,23)"/><text x="89.3596%" y="287.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::NextInternal&lt;true&gt; (14 samples, 0.05%)</title><rect x="89.0924%" y="293" width="0.0483%" height="15" fill="rgb(216,180,54)"/><text x="89.3424%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (4 samples, 0.01%)</title><rect x="89.1268%" y="277" width="0.0138%" height="15" fill="rgb(216,5,24)"/><text x="89.3768%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (4 samples, 0.01%)</title><rect x="89.1510%" y="277" width="0.0138%" height="15" fill="rgb(225,89,9)"/><text x="89.4010%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Runtime::SetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (257 samples, 0.89%)</title><rect x="88.3923%" y="309" width="0.8863%" height="15" fill="rgb(243,75,33)"/><text x="88.6423%" y="319.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;true&gt; (40 samples, 0.14%)</title><rect x="89.1406%" y="293" width="0.1379%" height="15" fill="rgb(247,141,45)"/><text x="89.3906%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (33 samples, 0.11%)</title><rect x="89.1648%" y="277" width="0.1138%" height="15" fill="rgb(232,177,36)"/><text x="89.4148%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::DictionaryElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)12&gt; &gt;::GetEntryForIndex (15 samples, 0.05%)</title><rect x="89.2268%" y="261" width="0.0517%" height="15" fill="rgb(219,125,36)"/><text x="89.4768%" y="271.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (288 samples, 0.99%)</title><rect x="88.2888%" y="341" width="0.9932%" height="15" fill="rgb(227,94,9)"/><text x="88.5388%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_SetKeyedProperty (280 samples, 0.97%)</title><rect x="88.3164%" y="325" width="0.9656%" height="15" fill="rgb(240,34,52)"/><text x="88.5664%" y="335.50"></text></g><g><title>dyper_ops`Builtins_KeyedStoreIC (17 samples, 0.06%)</title><rect x="89.2820%" y="341" width="0.0586%" height="15" fill="rgb(216,45,12)"/><text x="89.5320%" y="351.50"></text></g><g><title>dyper_ops`Builtins_KeyedStoreIC_Megamorphic (14 samples, 0.05%)</title><rect x="89.3406%" y="341" width="0.0483%" height="15" fill="rgb(246,21,19)"/><text x="89.5906%" y="351.50"></text></g><g><title>0x1554000877d7 (331 samples, 1.14%)</title><rect x="88.2854%" y="357" width="1.1415%" height="15" fill="rgb(213,98,42)"/><text x="88.5354%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_SetKeyedProperty (11 samples, 0.04%)</title><rect x="89.3889%" y="341" width="0.0379%" height="15" fill="rgb(250,136,47)"/><text x="89.6389%" y="351.50"></text></g><g><title>0x1554000877f0 (45 samples, 0.16%)</title><rect x="89.4269%" y="357" width="0.1552%" height="15" fill="rgb(251,124,27)"/><text x="89.6769%" y="367.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitUncaught (45 samples, 0.16%)</title><rect x="89.4269%" y="341" width="0.1552%" height="15" fill="rgb(229,180,14)"/><text x="89.6769%" y="351.50"></text></g><g><title>dyper_ops`Builtins_PerformPromiseThen (14 samples, 0.05%)</title><rect x="89.5338%" y="325" width="0.0483%" height="15" fill="rgb(245,216,25)"/><text x="89.7838%" y="335.50"></text></g><g><title>0x155400087913 (4 samples, 0.01%)</title><rect x="89.5993%" y="357" width="0.0138%" height="15" fill="rgb(251,43,5)"/><text x="89.8493%" y="367.50"></text></g><g><title>0x155400087916 (36 samples, 0.12%)</title><rect x="89.6131%" y="357" width="0.1241%" height="15" fill="rgb(250,128,24)"/><text x="89.8631%" y="367.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitUncaught (36 samples, 0.12%)</title><rect x="89.6131%" y="341" width="0.1241%" height="15" fill="rgb(217,117,27)"/><text x="89.8631%" y="351.50"></text></g><g><title>dyper_ops`Builtins_PerformPromiseThen (9 samples, 0.03%)</title><rect x="89.7062%" y="325" width="0.0310%" height="15" fill="rgb(245,147,4)"/><text x="89.9562%" y="335.50"></text></g><g><title>0x155400087938 (5 samples, 0.02%)</title><rect x="89.7407%" y="357" width="0.0172%" height="15" fill="rgb(242,201,35)"/><text x="89.9907%" y="367.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobState::Join (3 samples, 0.01%)</title><rect x="89.7958%" y="181" width="0.0103%" height="15" fill="rgb(218,181,1)"/><text x="90.0458%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (8 samples, 0.03%)</title><rect x="89.7890%" y="229" width="0.0276%" height="15" fill="rgb(222,6,29)"/><text x="90.0390%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (7 samples, 0.02%)</title><rect x="89.7924%" y="213" width="0.0241%" height="15" fill="rgb(208,186,3)"/><text x="90.0424%" y="223.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobHandle::Join (6 samples, 0.02%)</title><rect x="89.7958%" y="197" width="0.0207%" height="15" fill="rgb(216,36,26)"/><text x="90.0458%" y="207.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobState::~DefaultJobState (3 samples, 0.01%)</title><rect x="89.8062%" y="181" width="0.0103%" height="15" fill="rgb(248,201,23)"/><text x="90.0562%" y="191.50"></text></g><g><title>0x155400087af3 (11 samples, 0.04%)</title><rect x="89.7821%" y="357" width="0.0379%" height="15" fill="rgb(251,170,31)"/><text x="90.0321%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (11 samples, 0.04%)</title><rect x="89.7821%" y="341" width="0.0379%" height="15" fill="rgb(207,110,25)"/><text x="90.0321%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (11 samples, 0.04%)</title><rect x="89.7821%" y="325" width="0.0379%" height="15" fill="rgb(250,54,15)"/><text x="90.0321%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (11 samples, 0.04%)</title><rect x="89.7821%" y="309" width="0.0379%" height="15" fill="rgb(227,68,33)"/><text x="90.0321%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (11 samples, 0.04%)</title><rect x="89.7821%" y="293" width="0.0379%" height="15" fill="rgb(238,34,41)"/><text x="90.0321%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (11 samples, 0.04%)</title><rect x="89.7821%" y="277" width="0.0379%" height="15" fill="rgb(220,11,15)"/><text x="90.0321%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (10 samples, 0.03%)</title><rect x="89.7855%" y="261" width="0.0345%" height="15" fill="rgb(246,111,35)"/><text x="90.0355%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (9 samples, 0.03%)</title><rect x="89.7890%" y="245" width="0.0310%" height="15" fill="rgb(209,88,53)"/><text x="90.0390%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (6 samples, 0.02%)</title><rect x="89.8200%" y="245" width="0.0207%" height="15" fill="rgb(231,185,47)"/><text x="90.0700%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (6 samples, 0.02%)</title><rect x="89.8200%" y="229" width="0.0207%" height="15" fill="rgb(233,154,1)"/><text x="90.0700%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (6 samples, 0.02%)</title><rect x="89.8200%" y="213" width="0.0207%" height="15" fill="rgb(225,15,46)"/><text x="90.0700%" y="223.50"></text></g><g><title>0x155400087ca2 (7 samples, 0.02%)</title><rect x="89.8200%" y="357" width="0.0241%" height="15" fill="rgb(211,135,41)"/><text x="90.0700%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (7 samples, 0.02%)</title><rect x="89.8200%" y="341" width="0.0241%" height="15" fill="rgb(208,54,0)"/><text x="90.0700%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (7 samples, 0.02%)</title><rect x="89.8200%" y="325" width="0.0241%" height="15" fill="rgb(244,136,14)"/><text x="90.0700%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (7 samples, 0.02%)</title><rect x="89.8200%" y="309" width="0.0241%" height="15" fill="rgb(241,56,14)"/><text x="90.0700%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (7 samples, 0.02%)</title><rect x="89.8200%" y="293" width="0.0241%" height="15" fill="rgb(205,80,24)"/><text x="90.0700%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (7 samples, 0.02%)</title><rect x="89.8200%" y="277" width="0.0241%" height="15" fill="rgb(220,57,4)"/><text x="90.0700%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (7 samples, 0.02%)</title><rect x="89.8200%" y="261" width="0.0241%" height="15" fill="rgb(226,193,50)"/><text x="90.0700%" y="271.50"></text></g><g><title>0x155400087cd7 (7 samples, 0.02%)</title><rect x="89.8441%" y="357" width="0.0241%" height="15" fill="rgb(231,168,22)"/><text x="90.0941%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (7 samples, 0.02%)</title><rect x="89.8441%" y="341" width="0.0241%" height="15" fill="rgb(254,215,14)"/><text x="90.0941%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (7 samples, 0.02%)</title><rect x="89.8441%" y="325" width="0.0241%" height="15" fill="rgb(211,115,16)"/><text x="90.0941%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (7 samples, 0.02%)</title><rect x="89.8441%" y="309" width="0.0241%" height="15" fill="rgb(236,210,16)"/><text x="90.0941%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (7 samples, 0.02%)</title><rect x="89.8441%" y="293" width="0.0241%" height="15" fill="rgb(221,94,12)"/><text x="90.0941%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (7 samples, 0.02%)</title><rect x="89.8441%" y="277" width="0.0241%" height="15" fill="rgb(235,218,49)"/><text x="90.0941%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (5 samples, 0.02%)</title><rect x="89.8510%" y="261" width="0.0172%" height="15" fill="rgb(217,114,14)"/><text x="90.1010%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (5 samples, 0.02%)</title><rect x="89.8510%" y="245" width="0.0172%" height="15" fill="rgb(216,145,22)"/><text x="90.1010%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (4 samples, 0.01%)</title><rect x="89.8545%" y="229" width="0.0138%" height="15" fill="rgb(217,112,39)"/><text x="90.1045%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (4 samples, 0.01%)</title><rect x="89.8545%" y="213" width="0.0138%" height="15" fill="rgb(225,85,32)"/><text x="90.1045%" y="223.50"></text></g><g><title>0x155400087eda (5 samples, 0.02%)</title><rect x="89.8717%" y="357" width="0.0172%" height="15" fill="rgb(245,209,47)"/><text x="90.1217%" y="367.50"></text></g><g><title>0x155400087ee4 (3 samples, 0.01%)</title><rect x="89.8924%" y="357" width="0.0103%" height="15" fill="rgb(218,220,15)"/><text x="90.1424%" y="367.50"></text></g><g><title>dyper_ops`Builtins_AdaptorWithBuiltinExitFrame (9 samples, 0.03%)</title><rect x="89.9234%" y="357" width="0.0310%" height="15" fill="rgb(222,202,31)"/><text x="90.1734%" y="367.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitUncaught (4 samples, 0.01%)</title><rect x="89.9545%" y="357" width="0.0138%" height="15" fill="rgb(243,203,4)"/><text x="90.2045%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (3 samples, 0.01%)</title><rect x="89.9683%" y="357" width="0.0103%" height="15" fill="rgb(237,92,17)"/><text x="90.2183%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.01%)</title><rect x="89.9786%" y="357" width="0.0103%" height="15" fill="rgb(231,119,7)"/><text x="90.2286%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (18 samples, 0.06%)</title><rect x="89.9890%" y="357" width="0.0621%" height="15" fill="rgb(237,82,41)"/><text x="90.2390%" y="367.50"></text></g><g><title>0x155400085237 (3 samples, 0.01%)</title><rect x="90.0579%" y="341" width="0.0103%" height="15" fill="rgb(226,81,48)"/><text x="90.3079%" y="351.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (3 samples, 0.01%)</title><rect x="90.0579%" y="325" width="0.0103%" height="15" fill="rgb(234,70,51)"/><text x="90.3079%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_JsonStringify (3 samples, 0.01%)</title><rect x="90.0579%" y="309" width="0.0103%" height="15" fill="rgb(251,86,4)"/><text x="90.3079%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringify(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="90.0579%" y="293" width="0.0103%" height="15" fill="rgb(244,144,28)"/><text x="90.3079%" y="303.50"></text></g><g><title>0x1554000852fb (4 samples, 0.01%)</title><rect x="90.0752%" y="341" width="0.0138%" height="15" fill="rgb(232,161,39)"/><text x="90.3252%" y="351.50"></text></g><g><title>0x155400084b0e (4 samples, 0.01%)</title><rect x="90.0752%" y="325" width="0.0138%" height="15" fill="rgb(247,34,51)"/><text x="90.3252%" y="335.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (4 samples, 0.01%)</title><rect x="90.0752%" y="309" width="0.0138%" height="15" fill="rgb(225,132,2)"/><text x="90.3252%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_HandleApiCall (4 samples, 0.01%)</title><rect x="90.0752%" y="293" width="0.0138%" height="15" fill="rgb(209,159,44)"/><text x="90.3252%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (4 samples, 0.01%)</title><rect x="90.0752%" y="277" width="0.0138%" height="15" fill="rgb(251,214,1)"/><text x="90.3252%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FunctionCallbackArguments::Call (4 samples, 0.01%)</title><rect x="90.0752%" y="261" width="0.0138%" height="15" fill="rgb(247,84,47)"/><text x="90.3252%" y="271.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4 samples, 0.01%)</title><rect x="90.0752%" y="245" width="0.0138%" height="15" fill="rgb(240,111,43)"/><text x="90.3252%" y="255.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (4 samples, 0.01%)</title><rect x="90.0752%" y="229" width="0.0138%" height="15" fill="rgb(215,214,35)"/><text x="90.3252%" y="239.50"></text></g><g><title>0x155400086402 (6 samples, 0.02%)</title><rect x="90.0993%" y="341" width="0.0207%" height="15" fill="rgb(248,207,23)"/><text x="90.3493%" y="351.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (6 samples, 0.02%)</title><rect x="90.0993%" y="325" width="0.0207%" height="15" fill="rgb(214,186,4)"/><text x="90.3493%" y="335.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (6 samples, 0.02%)</title><rect x="90.0993%" y="309" width="0.0207%" height="15" fill="rgb(220,133,22)"/><text x="90.3493%" y="319.50"></text></g><g><title>dyper_ops`deno_core::bindings::encode (6 samples, 0.02%)</title><rect x="90.0993%" y="293" width="0.0207%" height="15" fill="rgb(239,134,19)"/><text x="90.3493%" y="303.50"></text></g><g><title>dyper_ops`deno_core::bindings::boxed_slice_to_uint8array (3 samples, 0.01%)</title><rect x="90.1200%" y="213" width="0.0103%" height="15" fill="rgb(250,140,9)"/><text x="90.3700%" y="223.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.01%)</title><rect x="90.1373%" y="149" width="0.0138%" height="15" fill="rgb(225,59,14)"/><text x="90.3873%" y="159.50"></text></g><g><title>dyper_ops`serde_json::value::de::visit_object (4 samples, 0.01%)</title><rect x="90.1373%" y="133" width="0.0138%" height="15" fill="rgb(214,152,51)"/><text x="90.3873%" y="143.50"></text></g><g><title>dyper_ops`dyper_ops::op_respond (6 samples, 0.02%)</title><rect x="90.1338%" y="165" width="0.0207%" height="15" fill="rgb(251,227,43)"/><text x="90.3838%" y="175.50"></text></g><g><title>0x155400086437 (12 samples, 0.04%)</title><rect x="90.1200%" y="341" width="0.0414%" height="15" fill="rgb(241,96,17)"/><text x="90.3700%" y="351.50"></text></g><g><title>0x155400084b0e (12 samples, 0.04%)</title><rect x="90.1200%" y="325" width="0.0414%" height="15" fill="rgb(234,198,43)"/><text x="90.3700%" y="335.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (12 samples, 0.04%)</title><rect x="90.1200%" y="309" width="0.0414%" height="15" fill="rgb(220,108,29)"/><text x="90.3700%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_HandleApiCall (12 samples, 0.04%)</title><rect x="90.1200%" y="293" width="0.0414%" height="15" fill="rgb(226,163,33)"/><text x="90.3700%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (12 samples, 0.04%)</title><rect x="90.1200%" y="277" width="0.0414%" height="15" fill="rgb(205,194,45)"/><text x="90.3700%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FunctionCallbackArguments::Call (12 samples, 0.04%)</title><rect x="90.1200%" y="261" width="0.0414%" height="15" fill="rgb(206,143,44)"/><text x="90.3700%" y="271.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (12 samples, 0.04%)</title><rect x="90.1200%" y="245" width="0.0414%" height="15" fill="rgb(236,136,36)"/><text x="90.3700%" y="255.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (12 samples, 0.04%)</title><rect x="90.1200%" y="229" width="0.0414%" height="15" fill="rgb(249,172,42)"/><text x="90.3700%" y="239.50"></text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (9 samples, 0.03%)</title><rect x="90.1304%" y="213" width="0.0310%" height="15" fill="rgb(216,139,23)"/><text x="90.3804%" y="223.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (9 samples, 0.03%)</title><rect x="90.1304%" y="197" width="0.0310%" height="15" fill="rgb(207,166,20)"/><text x="90.3804%" y="207.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (9 samples, 0.03%)</title><rect x="90.1304%" y="181" width="0.0310%" height="15" fill="rgb(210,209,22)"/><text x="90.3804%" y="191.50"></text></g><g><title>0x155400086510 (7 samples, 0.02%)</title><rect x="90.1717%" y="341" width="0.0241%" height="15" fill="rgb(232,118,20)"/><text x="90.4217%" y="351.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (7 samples, 0.02%)</title><rect x="90.1717%" y="325" width="0.0241%" height="15" fill="rgb(238,113,42)"/><text x="90.4217%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_JsonParse (7 samples, 0.02%)</title><rect x="90.1717%" y="309" width="0.0241%" height="15" fill="rgb(231,42,5)"/><text x="90.4217%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (7 samples, 0.02%)</title><rect x="90.1717%" y="293" width="0.0241%" height="15" fill="rgb(243,166,24)"/><text x="90.4217%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue (7 samples, 0.02%)</title><rect x="90.1717%" y="277" width="0.0241%" height="15" fill="rgb(237,226,12)"/><text x="90.4217%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.01%)</title><rect x="90.1855%" y="261" width="0.0103%" height="15" fill="rgb(229,133,24)"/><text x="90.4355%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.01%)</title><rect x="90.1855%" y="245" width="0.0103%" height="15" fill="rgb(238,33,43)"/><text x="90.4355%" y="255.50"></text></g><g><title>0x155400084b0e (5 samples, 0.02%)</title><rect x="90.2131%" y="325" width="0.0172%" height="15" fill="rgb(227,59,38)"/><text x="90.4631%" y="335.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (5 samples, 0.02%)</title><rect x="90.2131%" y="309" width="0.0172%" height="15" fill="rgb(230,97,0)"/><text x="90.4631%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_HandleApiCall (5 samples, 0.02%)</title><rect x="90.2131%" y="293" width="0.0172%" height="15" fill="rgb(250,173,50)"/><text x="90.4631%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="90.2131%" y="277" width="0.0172%" height="15" fill="rgb(240,15,50)"/><text x="90.4631%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FunctionCallbackArguments::Call (5 samples, 0.02%)</title><rect x="90.2131%" y="261" width="0.0172%" height="15" fill="rgb(221,93,22)"/><text x="90.4631%" y="271.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (5 samples, 0.02%)</title><rect x="90.2131%" y="245" width="0.0172%" height="15" fill="rgb(245,180,53)"/><text x="90.4631%" y="255.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (5 samples, 0.02%)</title><rect x="90.2131%" y="229" width="0.0172%" height="15" fill="rgb(231,88,51)"/><text x="90.4631%" y="239.50"></text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (4 samples, 0.01%)</title><rect x="90.2166%" y="213" width="0.0138%" height="15" fill="rgb(240,58,21)"/><text x="90.4666%" y="223.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (4 samples, 0.01%)</title><rect x="90.2166%" y="197" width="0.0138%" height="15" fill="rgb(237,21,10)"/><text x="90.4666%" y="207.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (4 samples, 0.01%)</title><rect x="90.2166%" y="181" width="0.0138%" height="15" fill="rgb(218,43,11)"/><text x="90.4666%" y="191.50"></text></g><g><title>dyper_ops`serde_json::de::from_slice (3 samples, 0.01%)</title><rect x="90.2200%" y="165" width="0.0103%" height="15" fill="rgb(218,221,29)"/><text x="90.4700%" y="175.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.01%)</title><rect x="90.2200%" y="149" width="0.0103%" height="15" fill="rgb(214,118,42)"/><text x="90.4700%" y="159.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.01%)</title><rect x="90.2200%" y="133" width="0.0103%" height="15" fill="rgb(251,200,26)"/><text x="90.4700%" y="143.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.01%)</title><rect x="90.2200%" y="117" width="0.0103%" height="15" fill="rgb(237,101,39)"/><text x="90.4700%" y="127.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::to_rust_string_lossy (4 samples, 0.01%)</title><rect x="90.2579%" y="213" width="0.0138%" height="15" fill="rgb(251,117,11)"/><text x="90.5079%" y="223.50"></text></g><g><title>dyper_ops`deno_core::bindings::encode (9 samples, 0.03%)</title><rect x="90.2476%" y="229" width="0.0310%" height="15" fill="rgb(216,223,23)"/><text x="90.4976%" y="239.50"></text></g><g><title>dyper_ops`deno_core::ops::json_serialize_op_result (8 samples, 0.03%)</title><rect x="90.3062%" y="165" width="0.0276%" height="15" fill="rgb(251,54,12)"/><text x="90.5562%" y="175.50"></text></g><g><title>dyper_ops`dyper_ops::op_respond (4 samples, 0.01%)</title><rect x="90.3338%" y="165" width="0.0138%" height="15" fill="rgb(254,176,54)"/><text x="90.5838%" y="175.50"></text></g><g><title>dyper_ops`indexmap::map::IndexMap&lt;K,V,S&gt;::insert (3 samples, 0.01%)</title><rect x="90.3545%" y="117" width="0.0103%" height="15" fill="rgb(210,32,8)"/><text x="90.6045%" y="127.50"></text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (24 samples, 0.08%)</title><rect x="90.2924%" y="213" width="0.0828%" height="15" fill="rgb(235,52,38)"/><text x="90.5424%" y="223.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (24 samples, 0.08%)</title><rect x="90.2924%" y="197" width="0.0828%" height="15" fill="rgb(231,4,44)"/><text x="90.5424%" y="207.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (22 samples, 0.08%)</title><rect x="90.2993%" y="181" width="0.0759%" height="15" fill="rgb(249,2,32)"/><text x="90.5493%" y="191.50"></text></g><g><title>dyper_ops`serde_json::de::from_slice (7 samples, 0.02%)</title><rect x="90.3511%" y="165" width="0.0241%" height="15" fill="rgb(224,65,26)"/><text x="90.6011%" y="175.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.02%)</title><rect x="90.3511%" y="149" width="0.0241%" height="15" fill="rgb(250,73,40)"/><text x="90.6011%" y="159.50"></text></g><g><title>dyper_ops`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.02%)</title><rect x="90.3511%" y="133" width="0.0241%" height="15" fill="rgb(253,177,16)"/><text x="90.6011%" y="143.50"></text></g><g><title>dyper_ops`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.01%)</title><rect x="90.3649%" y="117" width="0.0103%" height="15" fill="rgb(217,32,34)"/><text x="90.6149%" y="127.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (31 samples, 0.11%)</title><rect x="90.2786%" y="229" width="0.1069%" height="15" fill="rgb(212,7,10)"/><text x="90.5286%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_HandleApiCall (43 samples, 0.15%)</title><rect x="90.2407%" y="293" width="0.1483%" height="15" fill="rgb(245,89,8)"/><text x="90.4907%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (43 samples, 0.15%)</title><rect x="90.2407%" y="277" width="0.1483%" height="15" fill="rgb(237,16,53)"/><text x="90.4907%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FunctionCallbackArguments::Call (43 samples, 0.15%)</title><rect x="90.2407%" y="261" width="0.1483%" height="15" fill="rgb(250,204,30)"/><text x="90.4907%" y="271.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (42 samples, 0.14%)</title><rect x="90.2442%" y="245" width="0.1448%" height="15" fill="rgb(208,77,27)"/><text x="90.4942%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue (6 samples, 0.02%)</title><rect x="90.3890%" y="261" width="0.0207%" height="15" fill="rgb(250,204,28)"/><text x="90.6390%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_JsonParse (7 samples, 0.02%)</title><rect x="90.3890%" y="293" width="0.0241%" height="15" fill="rgb(244,63,21)"/><text x="90.6390%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (7 samples, 0.02%)</title><rect x="90.3890%" y="277" width="0.0241%" height="15" fill="rgb(236,85,44)"/><text x="90.6390%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_JsonStringify (4 samples, 0.01%)</title><rect x="90.4131%" y="293" width="0.0138%" height="15" fill="rgb(215,98,4)"/><text x="90.6631%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringify(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.01%)</title><rect x="90.4131%" y="277" width="0.0138%" height="15" fill="rgb(235,38,11)"/><text x="90.6631%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (3 samples, 0.01%)</title><rect x="90.4166%" y="261" width="0.0103%" height="15" fill="rgb(254,186,25)"/><text x="90.6666%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle (3 samples, 0.01%)</title><rect x="90.4166%" y="245" width="0.0103%" height="15" fill="rgb(225,55,31)"/><text x="90.6666%" y="255.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (57 samples, 0.20%)</title><rect x="90.2338%" y="309" width="0.1966%" height="15" fill="rgb(211,15,21)"/><text x="90.4838%" y="319.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (60 samples, 0.21%)</title><rect x="90.2338%" y="325" width="0.2069%" height="15" fill="rgb(215,187,41)"/><text x="90.4838%" y="335.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (72 samples, 0.25%)</title><rect x="90.2131%" y="341" width="0.2483%" height="15" fill="rgb(248,69,32)"/><text x="90.4631%" y="351.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (120 samples, 0.41%)</title><rect x="90.0579%" y="357" width="0.4138%" height="15" fill="rgb(252,102,52)"/><text x="90.3079%" y="367.50"></text></g><g><title>dyper_ops`Builtins_JsonStringify (4 samples, 0.01%)</title><rect x="90.4718%" y="357" width="0.0138%" height="15" fill="rgb(253,140,32)"/><text x="90.7218%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC_Megamorphic (15 samples, 0.05%)</title><rect x="90.4856%" y="357" width="0.0517%" height="15" fill="rgb(216,56,42)"/><text x="90.7356%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedStoreIC (5 samples, 0.02%)</title><rect x="90.5373%" y="357" width="0.0172%" height="15" fill="rgb(216,184,14)"/><text x="90.7873%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedStoreIC_Megamorphic (12 samples, 0.04%)</title><rect x="90.5545%" y="357" width="0.0414%" height="15" fill="rgb(237,187,27)"/><text x="90.8045%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (19 samples, 0.07%)</title><rect x="90.5959%" y="357" width="0.0655%" height="15" fill="rgb(219,65,3)"/><text x="90.8459%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadICTrampoline (15 samples, 0.05%)</title><rect x="90.6614%" y="357" width="0.0517%" height="15" fill="rgb(245,83,25)"/><text x="90.9114%" y="367.50"></text></g><g><title>dyper_ops`Builtins_ObjectEntries (3 samples, 0.01%)</title><rect x="90.7166%" y="357" width="0.0103%" height="15" fill="rgb(214,205,45)"/><text x="90.9666%" y="367.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitResolveClosure (10,282 samples, 35.46%)</title><rect x="55.2762%" y="373" width="35.4576%" height="15" fill="rgb(241,20,18)"/><text x="55.5262%" y="383.50">dyper_ops`Builtins_AsyncFunctionAwaitResolveClosure</text></g><g><title>dyper_ops`Builtins_ResumeGeneratorTrampoline (63 samples, 0.22%)</title><rect x="90.7338%" y="373" width="0.2173%" height="15" fill="rgb(232,163,23)"/><text x="90.9838%" y="383.50"></text></g><g><title>dyper_ops`v8_Default_embedded_blob_code_data_ (14 samples, 0.05%)</title><rect x="90.9028%" y="357" width="0.0483%" height="15" fill="rgb(214,5,46)"/><text x="91.1528%" y="367.50"></text></g><g><title>dyper_ops`Builtins_JSRunMicrotasksEntry (10,465 samples, 36.09%)</title><rect x="54.8762%" y="421" width="36.0887%" height="15" fill="rgb(229,78,17)"/><text x="55.1262%" y="431.50">dyper_ops`Builtins_JSRunMicrotasksEntry</text></g><g><title>dyper_ops`Builtins_RunMicrotasks (10,455 samples, 36.05%)</title><rect x="54.9107%" y="405" width="36.0542%" height="15" fill="rgb(248,89,10)"/><text x="55.1607%" y="415.50">dyper_ops`Builtins_RunMicrotasks</text></g><g><title>dyper_ops`Builtins_PromiseFulfillReactionJob (10,370 samples, 35.76%)</title><rect x="55.2038%" y="389" width="35.7611%" height="15" fill="rgb(248,54,15)"/><text x="55.4538%" y="399.50">dyper_ops`Builtins_PromiseFulfillReactionJob</text></g><g><title>dyper_ops`v8_Default_embedded_blob_code_data_ (4 samples, 0.01%)</title><rect x="90.9511%" y="373" width="0.0138%" height="15" fill="rgb(223,116,6)"/><text x="91.2011%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Code::OffHeapInstructionStart (4 samples, 0.01%)</title><rect x="90.9683%" y="421" width="0.0138%" height="15" fill="rgb(205,125,38)"/><text x="91.2183%" y="431.50"></text></g><g><title>dyper_ops`v8::internal::EmbeddedData::InstructionStartOfBuiltin (4 samples, 0.01%)</title><rect x="90.9683%" y="405" width="0.0138%" height="15" fill="rgb(251,78,38)"/><text x="91.2183%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (10,487 samples, 36.16%)</title><rect x="54.8279%" y="437" width="36.1646%" height="15" fill="rgb(253,78,28)"/><text x="55.0779%" y="447.50">dyper_ops`v8::internal::(anonymous namespace)::Invoke(v8::i..</text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (10,495 samples, 36.19%)</title><rect x="54.8072%" y="453" width="36.1922%" height="15" fill="rgb(209,120,3)"/><text x="55.0572%" y="463.50">dyper_ops`v8::internal::(anonymous namespace)::InvokeWithTr..</text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::PerformCheckpoint (10,544 samples, 36.36%)</title><rect x="54.6451%" y="501" width="36.3611%" height="15" fill="rgb(238,229,9)"/><text x="54.8951%" y="511.50">dyper_ops`v8::internal::MicrotaskQueue::PerformCheckpoint</text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::RunMicrotasks (10,531 samples, 36.32%)</title><rect x="54.6900%" y="485" width="36.3163%" height="15" fill="rgb(253,159,18)"/><text x="54.9400%" y="495.50">dyper_ops`v8::internal::MicrotaskQueue::RunMicrotasks</text></g><g><title>dyper_ops`v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*, v8::internal::MaybeHandle (10,505 samples, 36.23%)</title><rect x="54.7796%" y="469" width="36.2266%" height="15" fill="rgb(244,42,34)"/><text x="55.0296%" y="479.50">dyper_ops`v8::internal::Execution::TryRunMicrotasks(v8::int..</text></g><g><title>dyper_ops`v8::internal::Isolate::FireCallCompletedCallback (10,551 samples, 36.39%)</title><rect x="54.6245%" y="517" width="36.3853%" height="15" fill="rgb(224,8,7)"/><text x="54.8745%" y="527.50">dyper_ops`v8::internal::Isolate::FireCallCompletedCallback</text></g><g><title>dyper_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (12,716 samples, 43.85%)</title><rect x="47.1722%" y="533" width="43.8513%" height="15" fill="rgb(210,201,45)"/><text x="47.4222%" y="543.50">dyper_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value..</text></g><g><title>dyper_ops`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (3 samples, 0.01%)</title><rect x="91.0132%" y="517" width="0.0103%" height="15" fill="rgb(252,185,21)"/><text x="91.2632%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (3 samples, 0.01%)</title><rect x="91.0235%" y="533" width="0.0103%" height="15" fill="rgb(223,131,1)"/><text x="91.2735%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::Isolate::FireCallCompletedCallback (6 samples, 0.02%)</title><rect x="91.0339%" y="533" width="0.0207%" height="15" fill="rgb(245,141,16)"/><text x="91.2839%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::function::_&lt;impl rusty_v8::data::Function&gt;::call (12,732 samples, 43.91%)</title><rect x="47.1515%" y="549" width="43.9065%" height="15" fill="rgb(229,55,45)"/><text x="47.4015%" y="559.50">dyper_ops`rusty_v8::function::_&lt;impl rusty_v8::data::Function&gt;::call</text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_annex (16 samples, 0.06%)</title><rect x="91.0580%" y="549" width="0.0552%" height="15" fill="rgb(208,92,15)"/><text x="91.3080%" y="559.50"></text></g><g><title>dyper_ops`v8__Isolate__GetData (11 samples, 0.04%)</title><rect x="91.0752%" y="533" width="0.0379%" height="15" fill="rgb(234,185,47)"/><text x="91.3252%" y="543.50"></text></g><g><title>dyper_ops`v8::Context::Exit (14 samples, 0.05%)</title><rect x="91.1856%" y="485" width="0.0483%" height="15" fill="rgb(253,104,50)"/><text x="91.4356%" y="495.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (21 samples, 0.07%)</title><rect x="91.1822%" y="501" width="0.0724%" height="15" fill="rgb(205,70,7)"/><text x="91.4322%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::HandleScope::DeleteExtensions (6 samples, 0.02%)</title><rect x="91.2339%" y="485" width="0.0207%" height="15" fill="rgb(240,178,43)"/><text x="91.4839%" y="495.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::isolate::OwnedIsolate as rusty_v8::scope::getter::GetScopeData&gt;::get_scope_data_mut (36 samples, 0.12%)</title><rect x="91.1511%" y="533" width="0.1241%" height="15" fill="rgb(214,112,2)"/><text x="91.4011%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::try_exit_scope (29 samples, 0.10%)</title><rect x="91.1753%" y="517" width="0.1000%" height="15" fill="rgb(206,46,17)"/><text x="91.4253%" y="527.50"></text></g><g><title>dyper_ops`v8::Context::Enter (3 samples, 0.01%)</title><rect x="91.2856%" y="517" width="0.0103%" height="15" fill="rgb(225,220,16)"/><text x="91.5356%" y="527.50"></text></g><g><title>dyper_ops`v8::HandleScope::CreateHandle (9 samples, 0.03%)</title><rect x="91.2960%" y="517" width="0.0310%" height="15" fill="rgb(238,65,40)"/><text x="91.5460%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::HandleScope::Extend (7 samples, 0.02%)</title><rect x="91.3028%" y="501" width="0.0241%" height="15" fill="rgb(230,151,21)"/><text x="91.5528%" y="511.50"></text></g><g><title>dyper_ops`v8::HandleScope::HandleScope (5 samples, 0.02%)</title><rect x="91.3270%" y="517" width="0.0172%" height="15" fill="rgb(218,58,49)"/><text x="91.5770%" y="527.50"></text></g><g><title>dyper_ops`v8::Locker::IsActive (4 samples, 0.01%)</title><rect x="91.3442%" y="517" width="0.0138%" height="15" fill="rgb(219,179,14)"/><text x="91.5942%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::HandleScope::Extend (3 samples, 0.01%)</title><rect x="91.3580%" y="517" width="0.0103%" height="15" fill="rgb(223,72,1)"/><text x="91.6080%" y="527.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_handle_scope_data_with_context (29 samples, 0.10%)</title><rect x="91.2787%" y="533" width="0.1000%" height="15" fill="rgb(238,126,10)"/><text x="91.5287%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::HandleScopeImplementer::EnterContext (3 samples, 0.01%)</title><rect x="91.3684%" y="517" width="0.0103%" height="15" fill="rgb(224,206,38)"/><text x="91.6184%" y="527.50"></text></g><g><title>dyper_ops`v8::Context::Enter (4 samples, 0.01%)</title><rect x="91.3822%" y="533" width="0.0138%" height="15" fill="rgb(212,201,54)"/><text x="91.6322%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (4 samples, 0.01%)</title><rect x="91.3994%" y="533" width="0.0138%" height="15" fill="rgb(218,154,48)"/><text x="91.6494%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::scope::HandleScope::with_context (84 samples, 0.29%)</title><rect x="91.1270%" y="549" width="0.2897%" height="15" fill="rgb(232,93,24)"/><text x="91.3770%" y="559.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_try_catch_data (5 samples, 0.02%)</title><rect x="91.4270%" y="549" width="0.0172%" height="15" fill="rgb(245,30,21)"/><text x="91.6770%" y="559.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.01%)</title><rect x="91.4442%" y="549" width="0.0103%" height="15" fill="rgb(242,148,29)"/><text x="91.6942%" y="559.50"></text></g><g><title>dyper_ops`tokio::util::wake::clone_arc_raw (3 samples, 0.01%)</title><rect x="91.4615%" y="549" width="0.0103%" height="15" fill="rgb(244,153,54)"/><text x="91.7115%" y="559.50"></text></g><g><title>dyper_ops`mio::waker::Waker::wake (4 samples, 0.01%)</title><rect x="91.4856%" y="517" width="0.0138%" height="15" fill="rgb(252,87,22)"/><text x="91.7356%" y="527.50"></text></g><g><title>dyper_ops`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (210 samples, 0.72%)</title><rect x="91.4822%" y="533" width="0.7242%" height="15" fill="rgb(210,51,29)"/><text x="91.7322%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`kevent (205 samples, 0.71%)</title><rect x="91.4994%" y="517" width="0.7069%" height="15" fill="rgb(242,136,47)"/><text x="91.7494%" y="527.50"></text></g><g><title>dyper_ops`tokio::util::wake::wake_arc_raw (214 samples, 0.74%)</title><rect x="91.4718%" y="549" width="0.7380%" height="15" fill="rgb(238,68,4)"/><text x="91.7218%" y="559.50"></text></g><g><title>dyper_ops`v8::Context::Global (6 samples, 0.02%)</title><rect x="92.2133%" y="549" width="0.0207%" height="15" fill="rgb(242,161,30)"/><text x="92.4633%" y="559.50"></text></g><g><title>dyper_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (4 samples, 0.01%)</title><rect x="92.2339%" y="549" width="0.0138%" height="15" fill="rgb(218,58,44)"/><text x="92.4839%" y="559.50"></text></g><g><title>dyper_ops`v8::V8::GlobalizeReference (3 samples, 0.01%)</title><rect x="92.2581%" y="549" width="0.0103%" height="15" fill="rgb(252,125,32)"/><text x="92.5081%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (8 samples, 0.03%)</title><rect x="92.2719%" y="549" width="0.0276%" height="15" fill="rgb(219,178,0)"/><text x="92.5219%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::Isolate::RegisterTryCatchHandler (3 samples, 0.01%)</title><rect x="92.2995%" y="549" width="0.0103%" height="15" fill="rgb(213,152,7)"/><text x="92.5495%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::GlobalHandles::Create (15 samples, 0.05%)</title><rect x="92.3477%" y="517" width="0.0517%" height="15" fill="rgb(249,109,34)"/><text x="92.5977%" y="527.50"></text></g><g><title>dyper_ops`v8::V8::GlobalizeReference (32 samples, 0.11%)</title><rect x="92.3202%" y="533" width="0.1104%" height="15" fill="rgb(232,96,21)"/><text x="92.5702%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::Logger::is_logging (9 samples, 0.03%)</title><rect x="92.3995%" y="517" width="0.0310%" height="15" fill="rgb(228,27,39)"/><text x="92.6495%" y="527.50"></text></g><g><title>dyper_ops`v8__Global__New (34 samples, 0.12%)</title><rect x="92.3167%" y="549" width="0.1172%" height="15" fill="rgb(211,182,52)"/><text x="92.5667%" y="559.50"></text></g><g><title>dyper_ops`v8__Isolate__GetData (6 samples, 0.02%)</title><rect x="92.4374%" y="549" width="0.0207%" height="15" fill="rgb(234,178,38)"/><text x="92.6874%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.04%)</title><rect x="92.4684%" y="549" width="0.0414%" height="15" fill="rgb(221,111,3)"/><text x="92.7184%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.03%)</title><rect x="92.4822%" y="533" width="0.0276%" height="15" fill="rgb(228,175,21)"/><text x="92.7322%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="92.4857%" y="517" width="0.0241%" height="15" fill="rgb(228,174,43)"/><text x="92.7357%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.07%)</title><rect x="92.5098%" y="549" width="0.0724%" height="15" fill="rgb(211,191,0)"/><text x="92.7598%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.06%)</title><rect x="92.5236%" y="533" width="0.0586%" height="15" fill="rgb(253,117,3)"/><text x="92.7736%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.04%)</title><rect x="92.5409%" y="517" width="0.0414%" height="15" fill="rgb(241,127,19)"/><text x="92.7909%" y="527.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::poll_event_loop (26,027 samples, 89.75%)</title><rect x="2.8416%" y="565" width="89.7545%" height="15" fill="rgb(218,103,12)"/><text x="3.0916%" y="575.50">dyper_ops`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::push (5 samples, 0.02%)</title><rect x="92.5960%" y="565" width="0.0172%" height="15" fill="rgb(236,214,43)"/><text x="92.8460%" y="575.50"></text></g><g><title>dyper_ops`dyper_ops::create_js_runtime (5 samples, 0.02%)</title><rect x="92.6133%" y="565" width="0.0172%" height="15" fill="rgb(244,144,19)"/><text x="92.8633%" y="575.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::new (5 samples, 0.02%)</title><rect x="92.6133%" y="549" width="0.0172%" height="15" fill="rgb(246,188,10)"/><text x="92.8633%" y="559.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::new (3 samples, 0.01%)</title><rect x="92.6202%" y="533" width="0.0103%" height="15" fill="rgb(212,193,33)"/><text x="92.8702%" y="543.50"></text></g><g><title>dyper_ops`v8::Isolate::New (3 samples, 0.01%)</title><rect x="92.6202%" y="517" width="0.0103%" height="15" fill="rgb(241,51,29)"/><text x="92.8702%" y="527.50"></text></g><g><title>dyper_ops`futures_util::stream::stream::StreamExt::poll_next_unpin (3 samples, 0.01%)</title><rect x="92.6374%" y="565" width="0.0103%" height="15" fill="rgb(211,58,19)"/><text x="92.8874%" y="575.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_annex (12 samples, 0.04%)</title><rect x="92.6581%" y="565" width="0.0414%" height="15" fill="rgb(229,111,26)"/><text x="92.9081%" y="575.50"></text></g><g><title>dyper_ops`rusty_v8::scope::HandleScope::with_context (5 samples, 0.02%)</title><rect x="92.6995%" y="565" width="0.0172%" height="15" fill="rgb(213,115,40)"/><text x="92.9495%" y="575.50"></text></g><g><title>dyper_ops`tokio::util::wake::wake_arc_raw (5 samples, 0.02%)</title><rect x="92.7305%" y="565" width="0.0172%" height="15" fill="rgb(209,56,44)"/><text x="92.9805%" y="575.50"></text></g><g><title>dyper_ops`v8::V8::DisposeGlobal (3 samples, 0.01%)</title><rect x="92.7512%" y="565" width="0.0103%" height="15" fill="rgb(230,108,32)"/><text x="93.0012%" y="575.50"></text></g><g><title>dyper_ops`v8__Global__New (5 samples, 0.02%)</title><rect x="92.7650%" y="565" width="0.0172%" height="15" fill="rgb(216,165,31)"/><text x="93.0150%" y="575.50"></text></g><g><title>dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26,138 samples, 90.14%)</title><rect x="2.6519%" y="581" width="90.1373%" height="15" fill="rgb(218,122,21)"/><text x="2.9019%" y="591.50">dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>dyper_ops`std::thread::local::LocalKey&lt;T&gt;::with (26,143 samples, 90.15%)</title><rect x="2.6381%" y="597" width="90.1545%" height="15" fill="rgb(223,224,47)"/><text x="2.8881%" y="607.50">dyper_ops`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>dyper_ops`tokio::runtime::basic_scheduler::Spawner::pop (5 samples, 0.02%)</title><rect x="92.7961%" y="597" width="0.0172%" height="15" fill="rgb(238,102,44)"/><text x="93.0461%" y="607.50"></text></g><g><title>dyper_ops`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (26,914 samples, 92.81%)</title><rect x="0.0138%" y="613" width="92.8133%" height="15" fill="rgb(236,46,40)"/><text x="0.2638%" y="623.50">dyper_ops`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>dyper_ops`tokio::time::driver::Driver&lt;P&gt;::park_internal (4 samples, 0.01%)</title><rect x="92.8133%" y="597" width="0.0138%" height="15" fill="rgb(247,202,50)"/><text x="93.0633%" y="607.50"></text></g><g><title>dyper_ops`tokio::runtime::Runtime::block_on (26,919 samples, 92.83%)</title><rect x="0.0000%" y="645" width="92.8305%" height="15" fill="rgb(209,99,20)"/><text x="0.2500%" y="655.50">dyper_ops`tokio::runtime::Runtime::block_on</text></g><g><title>dyper_ops`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (26,919 samples, 92.83%)</title><rect x="0.0000%" y="629" width="92.8305%" height="15" fill="rgb(252,27,34)"/><text x="0.2500%" y="639.50">dyper_ops`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on</text></g><g><title>dyper_ops`0x1 (26,920 samples, 92.83%)</title><rect x="0.0000%" y="757" width="92.8340%" height="15" fill="rgb(215,206,23)"/><text x="0.2500%" y="767.50">dyper_ops`0x1</text></g><g><title>libdyld.dylib`start (26,920 samples, 92.83%)</title><rect x="0.0000%" y="741" width="92.8340%" height="15" fill="rgb(212,135,36)"/><text x="0.2500%" y="751.50">libdyld.dylib`start</text></g><g><title>dyper_ops`main (26,920 samples, 92.83%)</title><rect x="0.0000%" y="725" width="92.8340%" height="15" fill="rgb(240,189,1)"/><text x="0.2500%" y="735.50">dyper_ops`main</text></g><g><title>dyper_ops`std::rt::lang_start_internal (26,920 samples, 92.83%)</title><rect x="0.0000%" y="709" width="92.8340%" height="15" fill="rgb(242,56,20)"/><text x="0.2500%" y="719.50">dyper_ops`std::rt::lang_start_internal</text></g><g><title>dyper_ops`std::rt::lang_start::_{{closure}} (26,920 samples, 92.83%)</title><rect x="0.0000%" y="693" width="92.8340%" height="15" fill="rgb(247,132,33)"/><text x="0.2500%" y="703.50">dyper_ops`std::rt::lang_start::_{{closure}}</text></g><g><title>dyper_ops`std::sys_common::backtrace::__rust_begin_short_backtrace (26,920 samples, 92.83%)</title><rect x="0.0000%" y="677" width="92.8340%" height="15" fill="rgb(208,149,11)"/><text x="0.2500%" y="687.50">dyper_ops`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dyper_ops`dyper_ops::main (26,920 samples, 92.83%)</title><rect x="0.0000%" y="661" width="92.8340%" height="15" fill="rgb(211,33,11)"/><text x="0.2500%" y="671.50">dyper_ops`dyper_ops::main</text></g><g><title>dyper_ops`non-virtual thunk to v8::internal::(anonymous namespace)::CancelableFuncTask::~CancelableFuncTask (4 samples, 0.01%)</title><rect x="92.8374%" y="693" width="0.0138%" height="15" fill="rgb(221,29,38)"/><text x="93.0874%" y="703.50"></text></g><g><title>dyper_ops`v8::internal::CancelableTaskManager::RemoveFinishedTask (3 samples, 0.01%)</title><rect x="92.8409%" y="677" width="0.0103%" height="15" fill="rgb(206,182,49)"/><text x="93.0909%" y="687.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::AssembleCode(v8::internal::compiler::Linkage*, std::__1::unique_ptr&lt;v8::internal::AssemblerBuffer, std::__1::default_delete (4 samples, 0.01%)</title><rect x="92.8512%" y="629" width="0.0138%" height="15" fill="rgb(216,140,1)"/><text x="93.1012%" y="639.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AssembleCodePhase&gt; (4 samples, 0.01%)</title><rect x="92.8512%" y="613" width="0.0138%" height="15" fill="rgb(232,57,40)"/><text x="93.1012%" y="623.50"></text></g><g><title>dyper_ops`v8::internal::compiler::CodeGenerator::AssembleCode (4 samples, 0.01%)</title><rect x="92.8512%" y="597" width="0.0138%" height="15" fill="rgb(224,186,18)"/><text x="93.1012%" y="607.50"></text></g><g><title>dyper_ops`v8::internal::compiler::CodeGenerator::AssembleInstruction (3 samples, 0.01%)</title><rect x="92.8547%" y="581" width="0.0103%" height="15" fill="rgb(215,121,11)"/><text x="93.1047%" y="591.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (7 samples, 0.02%)</title><rect x="92.8650%" y="597" width="0.0241%" height="15" fill="rgb(245,147,10)"/><text x="93.1150%" y="607.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::SelectInstructions (10 samples, 0.03%)</title><rect x="92.8650%" y="613" width="0.0345%" height="15" fill="rgb(238,153,13)"/><text x="93.1150%" y="623.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InstructionSelectionPhase, v8::internal::compiler::Linkage*&amp;&gt; (3 samples, 0.01%)</title><rect x="92.8892%" y="597" width="0.0103%" height="15" fill="rgb(233,108,0)"/><text x="93.1392%" y="607.50"></text></g><g><title>dyper_ops`v8::internal::compiler::InstructionSelectionPhase::Run (3 samples, 0.01%)</title><rect x="92.8892%" y="581" width="0.0103%" height="15" fill="rgb(212,157,17)"/><text x="93.1392%" y="591.50"></text></g><g><title>dyper_ops`v8::internal::compiler::InstructionSelector::SelectInstructions (3 samples, 0.01%)</title><rect x="92.8892%" y="565" width="0.0103%" height="15" fill="rgb(225,213,38)"/><text x="93.1392%" y="575.50"></text></g><g><title>dyper_ops`v8::internal::compiler::InstructionSelector::VisitBlock (3 samples, 0.01%)</title><rect x="92.8892%" y="549" width="0.0103%" height="15" fill="rgb(248,16,11)"/><text x="93.1392%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::compiler::InstructionSelector::VisitControl (3 samples, 0.01%)</title><rect x="92.8892%" y="533" width="0.0103%" height="15" fill="rgb(241,33,4)"/><text x="93.1392%" y="543.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ComputeSchedulePhase&gt; (5 samples, 0.02%)</title><rect x="92.8995%" y="613" width="0.0172%" height="15" fill="rgb(222,26,43)"/><text x="93.1495%" y="623.50"></text></g><g><title>dyper_ops`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (5 samples, 0.02%)</title><rect x="92.8995%" y="597" width="0.0172%" height="15" fill="rgb(243,29,36)"/><text x="93.1495%" y="607.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EffectControlLinearizationPhase&gt; (4 samples, 0.01%)</title><rect x="92.9236%" y="613" width="0.0138%" height="15" fill="rgb(241,9,27)"/><text x="93.1736%" y="623.50"></text></g><g><title>dyper_ops`v8::internal::compiler::EffectControlLinearizationPhase::Run (4 samples, 0.01%)</title><rect x="92.9236%" y="597" width="0.0138%" height="15" fill="rgb(205,117,26)"/><text x="93.1736%" y="607.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (6 samples, 0.02%)</title><rect x="92.9374%" y="613" width="0.0207%" height="15" fill="rgb(209,80,39)"/><text x="93.1874%" y="623.50"></text></g><g><title>dyper_ops`v8::internal::compiler::EscapeAnalysisPhase::Run (6 samples, 0.02%)</title><rect x="92.9374%" y="597" width="0.0207%" height="15" fill="rgb(239,155,6)"/><text x="93.1874%" y="607.50"></text></g><g><title>dyper_ops`v8::internal::compiler::GraphReducer::ReduceNode (4 samples, 0.01%)</title><rect x="92.9443%" y="581" width="0.0138%" height="15" fill="rgb(212,104,12)"/><text x="93.1943%" y="591.50"></text></g><g><title>dyper_ops`v8::internal::compiler::GraphReducer::ReduceTop (4 samples, 0.01%)</title><rect x="92.9443%" y="565" width="0.0138%" height="15" fill="rgb(234,204,3)"/><text x="93.1943%" y="575.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoadEliminationPhase&gt; (4 samples, 0.01%)</title><rect x="92.9685%" y="613" width="0.0138%" height="15" fill="rgb(251,218,7)"/><text x="93.2185%" y="623.50"></text></g><g><title>dyper_ops`v8::internal::compiler::LoadEliminationPhase::Run (4 samples, 0.01%)</title><rect x="92.9685%" y="597" width="0.0138%" height="15" fill="rgb(221,81,32)"/><text x="93.2185%" y="607.50"></text></g><g><title>dyper_ops`v8::internal::compiler::GraphReducer::ReduceNode (4 samples, 0.01%)</title><rect x="92.9685%" y="581" width="0.0138%" height="15" fill="rgb(214,152,26)"/><text x="93.2185%" y="591.50"></text></g><g><title>dyper_ops`v8::internal::compiler::GraphReducer::ReduceTop (4 samples, 0.01%)</title><rect x="92.9685%" y="565" width="0.0138%" height="15" fill="rgb(223,22,3)"/><text x="93.2185%" y="575.50"></text></g><g><title>dyper_ops`v8::internal::compiler::GraphReducer::Reduce (4 samples, 0.01%)</title><rect x="92.9685%" y="549" width="0.0138%" height="15" fill="rgb(207,174,7)"/><text x="93.2185%" y="559.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::SimplifiedLoweringPhase, v8::internal::compiler::Linkage*&amp;&gt; (3 samples, 0.01%)</title><rect x="92.9926%" y="613" width="0.0103%" height="15" fill="rgb(224,19,52)"/><text x="93.2426%" y="623.50"></text></g><g><title>dyper_ops`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (49 samples, 0.17%)</title><rect x="92.8512%" y="693" width="0.1690%" height="15" fill="rgb(228,24,14)"/><text x="93.1012%" y="703.50"></text></g><g><title>dyper_ops`v8::internal::OptimizingCompileDispatcher::CompileNext (49 samples, 0.17%)</title><rect x="92.8512%" y="677" width="0.1690%" height="15" fill="rgb(230,153,43)"/><text x="93.1012%" y="687.50"></text></g><g><title>dyper_ops`v8::internal::OptimizedCompilationJob::ExecuteJob (49 samples, 0.17%)</title><rect x="92.8512%" y="661" width="0.1690%" height="15" fill="rgb(231,106,12)"/><text x="93.1012%" y="671.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (49 samples, 0.17%)</title><rect x="92.8512%" y="645" width="0.1690%" height="15" fill="rgb(215,92,2)"/><text x="93.1012%" y="655.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::OptimizeGraph (45 samples, 0.16%)</title><rect x="92.8650%" y="629" width="0.1552%" height="15" fill="rgb(249,143,25)"/><text x="93.1150%" y="639.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobWorker::Run (4 samples, 0.01%)</title><rect x="93.0202%" y="693" width="0.0138%" height="15" fill="rgb(252,7,35)"/><text x="93.2702%" y="703.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::JobTask::Run (4 samples, 0.01%)</title><rect x="93.0202%" y="677" width="0.0138%" height="15" fill="rgb(216,69,40)"/><text x="93.2702%" y="687.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::JobTask::ProcessItems (4 samples, 0.01%)</title><rect x="93.0202%" y="661" width="0.0138%" height="15" fill="rgb(240,36,33)"/><text x="93.2702%" y="671.50"></text></g><g><title>dyper_ops`v8::internal::Scavenger::Process (4 samples, 0.01%)</title><rect x="93.0202%" y="645" width="0.0138%" height="15" fill="rgb(231,128,14)"/><text x="93.2702%" y="655.50"></text></g><g><title>dyper_ops`v8::platform::DelayedTaskQueue::GetNext (15 samples, 0.05%)</title><rect x="93.0340%" y="693" width="0.0517%" height="15" fill="rgb(245,143,14)"/><text x="93.2840%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (14 samples, 0.05%)</title><rect x="93.0375%" y="677" width="0.0483%" height="15" fill="rgb(222,130,28)"/><text x="93.2875%" y="687.50"></text></g><g><title>dyper_ops`__rdl_dealloc (4 samples, 0.01%)</title><rect x="93.4996%" y="645" width="0.0138%" height="15" fill="rgb(212,10,48)"/><text x="93.7496%" y="655.50"></text></g><g><title>dyper_ops`std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::__unordered_map_hasher&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::hash&lt;void const*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::equal_to&lt;void const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt; &gt;::find&lt;void const*&gt; (187 samples, 0.64%)</title><rect x="93.8203%" y="613" width="0.6449%" height="15" fill="rgb(254,118,45)"/><text x="94.0703%" y="623.50"></text></g><g><title>dyper_ops`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::__unordered_map_hasher&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::hash&lt;void const*&gt;, true&gt;, std::__1::__unordered_map_equal&lt;void const*, std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt;, std::__1::equal_to&lt;void const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr&lt;v8::internal::BackingStore&gt; &gt; &gt; &gt;::remove(std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;void const*, std::__1::weak_ptr (78 samples, 0.27%)</title><rect x="94.4651%" y="613" width="0.2690%" height="15" fill="rgb(228,6,45)"/><text x="94.7151%" y="623.50"></text></g><g><title>dyper_ops`std::__1::__shared_weak_count::__release_weak (25 samples, 0.09%)</title><rect x="94.7341%" y="613" width="0.0862%" height="15" fill="rgb(241,18,35)"/><text x="94.9841%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (9 samples, 0.03%)</title><rect x="94.8307%" y="613" width="0.0310%" height="15" fill="rgb(227,214,53)"/><text x="95.0807%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.02%)</title><rect x="94.8617%" y="613" width="0.0207%" height="15" fill="rgb(224,107,51)"/><text x="95.1117%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.09%)</title><rect x="94.9169%" y="597" width="0.0897%" height="15" fill="rgb(248,60,28)"/><text x="95.1669%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.08%)</title><rect x="94.9272%" y="581" width="0.0793%" height="15" fill="rgb(249,101,23)"/><text x="95.1772%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (38 samples, 0.13%)</title><rect x="94.8824%" y="613" width="0.1310%" height="15" fill="rgb(228,51,19)"/><text x="95.1324%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (39 samples, 0.13%)</title><rect x="95.1824%" y="597" width="0.1345%" height="15" fill="rgb(213,20,6)"/><text x="95.4324%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (36 samples, 0.12%)</title><rect x="95.5273%" y="581" width="0.1241%" height="15" fill="rgb(212,124,10)"/><text x="95.7773%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (136 samples, 0.47%)</title><rect x="95.3238%" y="597" width="0.4690%" height="15" fill="rgb(248,3,40)"/><text x="95.5738%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (41 samples, 0.14%)</title><rect x="95.6514%" y="581" width="0.1414%" height="15" fill="rgb(223,178,23)"/><text x="95.9014%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (230 samples, 0.79%)</title><rect x="95.0134%" y="613" width="0.7932%" height="15" fill="rgb(240,132,45)"/><text x="95.2634%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (4 samples, 0.01%)</title><rect x="95.7928%" y="597" width="0.0138%" height="15" fill="rgb(245,164,36)"/><text x="96.0428%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (64 samples, 0.22%)</title><rect x="95.8204%" y="597" width="0.2207%" height="15" fill="rgb(231,188,53)"/><text x="96.0704%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (72 samples, 0.25%)</title><rect x="95.8135%" y="613" width="0.2483%" height="15" fill="rgb(237,198,39)"/><text x="96.0635%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (6 samples, 0.02%)</title><rect x="96.0411%" y="597" width="0.0207%" height="15" fill="rgb(223,120,35)"/><text x="96.2911%" y="607.50"></text></g><g><title>dyper_ops`v8::internal::GlobalBackingStoreRegistry::Unregister (786 samples, 2.71%)</title><rect x="93.6306%" y="629" width="2.7105%" height="15" fill="rgb(253,107,49)"/><text x="93.8806%" y="639.50">dy..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (81 samples, 0.28%)</title><rect x="96.0618%" y="613" width="0.2793%" height="15" fill="rgb(216,44,31)"/><text x="96.3118%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (81 samples, 0.28%)</title><rect x="96.0618%" y="597" width="0.2793%" height="15" fill="rgb(253,87,21)"/><text x="96.3118%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (14 samples, 0.05%)</title><rect x="96.3411%" y="629" width="0.0483%" height="15" fill="rgb(226,18,2)"/><text x="96.5911%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="96.3894%" y="629" width="0.0138%" height="15" fill="rgb(216,8,46)"/><text x="96.6394%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.07%)</title><rect x="96.4515%" y="613" width="0.0724%" height="15" fill="rgb(226,140,39)"/><text x="96.7015%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.07%)</title><rect x="96.4584%" y="597" width="0.0655%" height="15" fill="rgb(221,194,54)"/><text x="96.7084%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.13%)</title><rect x="96.4032%" y="629" width="0.1276%" height="15" fill="rgb(213,92,11)"/><text x="96.6532%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.04%)</title><rect x="96.6411%" y="613" width="0.0379%" height="15" fill="rgb(229,162,46)"/><text x="96.8911%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (35 samples, 0.12%)</title><rect x="96.8308%" y="597" width="0.1207%" height="15" fill="rgb(214,111,36)"/><text x="97.0808%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (132 samples, 0.46%)</title><rect x="96.5308%" y="629" width="0.4552%" height="15" fill="rgb(207,6,21)"/><text x="96.7808%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (88 samples, 0.30%)</title><rect x="96.6825%" y="613" width="0.3035%" height="15" fill="rgb(213,127,38)"/><text x="96.9325%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.03%)</title><rect x="96.9515%" y="597" width="0.0345%" height="15" fill="rgb(238,118,32)"/><text x="97.2015%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (19 samples, 0.07%)</title><rect x="96.9998%" y="629" width="0.0655%" height="15" fill="rgb(240,139,39)"/><text x="97.2498%" y="639.50"></text></g><g><title>dyper_ops`v8::internal::BackingStore::~BackingStore (1,040 samples, 3.59%)</title><rect x="93.5168%" y="645" width="3.5865%" height="15" fill="rgb(235,10,37)"/><text x="93.7668%" y="655.50">dype..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (11 samples, 0.04%)</title><rect x="97.0653%" y="629" width="0.0379%" height="15" fill="rgb(249,171,38)"/><text x="97.3153%" y="639.50"></text></g><g><title>dyper_ops`std::__1::__shared_ptr_pointer&lt;v8::BackingStore*, std::__1::default_delete&lt;v8::BackingStore&gt;, std::__1::allocator&lt;v8::BackingStore&gt; &gt;::__on_zero_shared (1,051 samples, 3.62%)</title><rect x="93.4927%" y="661" width="3.6244%" height="15" fill="rgb(242,144,32)"/><text x="93.7427%" y="671.50">dype..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.01%)</title><rect x="97.1067%" y="645" width="0.0103%" height="15" fill="rgb(217,117,21)"/><text x="97.3567%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (38 samples, 0.13%)</title><rect x="97.1274%" y="661" width="0.1310%" height="15" fill="rgb(249,87,1)"/><text x="97.3774%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.03%)</title><rect x="97.2584%" y="661" width="0.0345%" height="15" fill="rgb(248,196,48)"/><text x="97.5084%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (72 samples, 0.25%)</title><rect x="97.4067%" y="645" width="0.2483%" height="15" fill="rgb(251,206,33)"/><text x="97.6567%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (68 samples, 0.23%)</title><rect x="97.4205%" y="629" width="0.2345%" height="15" fill="rgb(232,141,28)"/><text x="97.6705%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (107 samples, 0.37%)</title><rect x="97.2929%" y="661" width="0.3690%" height="15" fill="rgb(209,167,14)"/><text x="97.5429%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (24 samples, 0.08%)</title><rect x="98.1757%" y="645" width="0.0828%" height="15" fill="rgb(225,11,50)"/><text x="98.4257%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="98.2585%" y="645" width="0.0138%" height="15" fill="rgb(209,50,20)"/><text x="98.5085%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (111 samples, 0.38%)</title><rect x="98.9758%" y="629" width="0.3828%" height="15" fill="rgb(212,17,46)"/><text x="99.2258%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (458 samples, 1.58%)</title><rect x="98.2757%" y="645" width="1.5794%" height="15" fill="rgb(216,101,39)"/><text x="98.5257%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (144 samples, 0.50%)</title><rect x="99.3586%" y="629" width="0.4966%" height="15" fill="rgb(212,228,48)"/><text x="99.6086%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (641 samples, 2.21%)</title><rect x="97.6619%" y="661" width="2.2105%" height="15" fill="rgb(250,6,50)"/><text x="97.9119%" y="671.50">l..</text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (5 samples, 0.02%)</title><rect x="99.8552%" y="645" width="0.0172%" height="15" fill="rgb(250,160,48)"/><text x="100.1052%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.04%)</title><rect x="99.8724%" y="661" width="0.0379%" height="15" fill="rgb(244,216,33)"/><text x="100.1224%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.01%)</title><rect x="99.9103%" y="661" width="0.0138%" height="15" fill="rgb(207,157,5)"/><text x="100.1603%" y="671.50"></text></g><g><title>dyper_ops`v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (1,983 samples, 6.84%)</title><rect x="93.0961%" y="677" width="6.8384%" height="15" fill="rgb(228,199,8)"/><text x="93.3461%" y="687.50">dyper_ops..</text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.01%)</title><rect x="99.9517%" y="677" width="0.0103%" height="15" fill="rgb(227,80,20)"/><text x="100.2017%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.03%)</title><rect x="99.9621%" y="677" width="0.0310%" height="15" fill="rgb(222,9,33)"/><text x="100.2121%" y="687.50"></text></g><g><title>dyper_ops`void std::__1::__function::__policy_invoker&lt;void ()&gt;::__call_impl&lt;std::__1::__function::__default_alloc_func&lt;v8::internal::ArrayBufferSweeper::RequestSweep(v8::internal::ArrayBufferSweeper::SweepingScope)::$_0, void ()&gt; &gt; (2,004 samples, 6.91%)</title><rect x="93.0857%" y="693" width="6.9108%" height="15" fill="rgb(239,44,28)"/><text x="93.3357%" y="703.50">dyper_ops..</text></g><g><title>all (28,998 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(249,187,43)"/><text x="0.2500%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,078 samples, 7.17%)</title><rect x="92.8340%" y="757" width="7.1660%" height="15" fill="rgb(216,141,28)"/><text x="93.0840%" y="767.50">libsystem_..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,078 samples, 7.17%)</title><rect x="92.8340%" y="741" width="7.1660%" height="15" fill="rgb(230,154,53)"/><text x="93.0840%" y="751.50">libsystem_..</text></g><g><title>dyper_ops`v8::base::ThreadEntry (2,078 samples, 7.17%)</title><rect x="92.8340%" y="725" width="7.1660%" height="15" fill="rgb(227,82,4)"/><text x="93.0840%" y="735.50">dyper_ops`..</text></g><g><title>dyper_ops`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (2,077 samples, 7.16%)</title><rect x="92.8374%" y="709" width="7.1626%" height="15" fill="rgb(220,107,16)"/><text x="93.0874%" y="719.50">dyper_ops`..</text></g></svg></svg>