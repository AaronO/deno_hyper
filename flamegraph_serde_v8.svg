<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="789.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="789.00"> </text><svg id="frames" x="10" width="1180"><g><title>dyper_ops`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="0.0000%" y="613" width="0.0198%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="623.50"></text></g><g><title>dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="0.0695%" y="597" width="0.0198%" height="15" fill="rgb(217,0,24)"/><text x="0.3195%" y="607.50"></text></g><g><title>dyper_ops`&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="0.0893%" y="597" width="0.0298%" height="15" fill="rgb(221,193,54)"/><text x="0.3393%" y="607.50"></text></g><g><title>dyper_ops`std::time::Instant::now (2 samples, 0.02%)</title><rect x="0.1389%" y="581" width="0.0198%" height="15" fill="rgb(248,212,6)"/><text x="0.3889%" y="591.50"></text></g><g><title>dyper_ops`mio::event::event::Event::is_write_closed (2 samples, 0.02%)</title><rect x="0.2283%" y="549" width="0.0198%" height="15" fill="rgb(208,68,35)"/><text x="0.4783%" y="559.50"></text></g><g><title>dyper_ops`mio::event::event::Event::token (3 samples, 0.03%)</title><rect x="0.2481%" y="549" width="0.0298%" height="15" fill="rgb(232,128,0)"/><text x="0.4981%" y="559.50"></text></g><g><title>dyper_ops`core::array::_&lt;impl core::default::Default for [T (3 samples, 0.03%)</title><rect x="0.7344%" y="517" width="0.0298%" height="15" fill="rgb(207,160,47)"/><text x="0.9844%" y="527.50"></text></g><g><title> 32]&gt;::default (3 samples, 0.03%)</title><rect x="0.7344%" y="501" width="0.0298%" height="15" fill="rgb(228,23,34)"/><text x="0.9844%" y="511.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (13 samples, 0.13%)</title><rect x="0.7642%" y="517" width="0.1290%" height="15" fill="rgb(218,30,26)"/><text x="1.0142%" y="527.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (6 samples, 0.06%)</title><rect x="1.0818%" y="501" width="0.0595%" height="15" fill="rgb(220,122,19)"/><text x="1.3318%" y="511.50"></text></g><g><title>dyper_ops`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (50 samples, 0.50%)</title><rect x="1.1413%" y="485" width="0.4962%" height="15" fill="rgb(250,228,42)"/><text x="1.3913%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`kevent (50 samples, 0.50%)</title><rect x="1.1413%" y="469" width="0.4962%" height="15" fill="rgb(240,193,28)"/><text x="1.3913%" y="479.50"></text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (112 samples, 1.11%)</title><rect x="0.5359%" y="533" width="1.1116%" height="15" fill="rgb(216,20,37)"/><text x="0.7859%" y="543.50"></text></g><g><title>dyper_ops`futures_task::arc_wake::ArcWake::wake (76 samples, 0.75%)</title><rect x="0.8932%" y="517" width="0.7543%" height="15" fill="rgb(206,188,39)"/><text x="1.1432%" y="527.50"></text></g><g><title>dyper_ops`tokio::util::wake::wake_arc_raw (51 samples, 0.51%)</title><rect x="1.1413%" y="501" width="0.5062%" height="15" fill="rgb(217,207,13)"/><text x="1.3913%" y="511.50"></text></g><g><title>dyper_ops`tokio::io::driver::Driver::turn (366 samples, 3.63%)</title><rect x="0.2878%" y="549" width="3.6324%" height="15" fill="rgb(231,73,38)"/><text x="0.5378%" y="559.50">dype..</text></g><g><title>libsystem_kernel.dylib`kevent (229 samples, 2.27%)</title><rect x="1.6475%" y="533" width="2.2727%" height="15" fill="rgb(225,20,46)"/><text x="1.8975%" y="543.50">l..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (4 samples, 0.04%)</title><rect x="3.9202%" y="549" width="0.0397%" height="15" fill="rgb(210,31,41)"/><text x="4.1702%" y="559.50"></text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (2 samples, 0.02%)</title><rect x="3.9599%" y="549" width="0.0198%" height="15" fill="rgb(221,200,47)"/><text x="4.2099%" y="559.50"></text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.02%)</title><rect x="3.9996%" y="517" width="0.0198%" height="15" fill="rgb(226,26,5)"/><text x="4.2496%" y="527.50"></text></g><g><title>dyper_ops`tokio::signal::unix::driver::Driver::process (7 samples, 0.07%)</title><rect x="3.9798%" y="549" width="0.0695%" height="15" fill="rgb(249,33,26)"/><text x="4.2298%" y="559.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (6 samples, 0.06%)</title><rect x="3.9897%" y="533" width="0.0595%" height="15" fill="rgb(235,183,28)"/><text x="4.2397%" y="543.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="4.0195%" y="517" width="0.0298%" height="15" fill="rgb(221,5,38)"/><text x="4.2695%" y="527.50"></text></g><g><title>dyper_ops`&lt;tokio::process::imp::driver::Driver as tokio::park::Park&gt;::park (394 samples, 3.91%)</title><rect x="0.1886%" y="565" width="3.9103%" height="15" fill="rgb(247,18,42)"/><text x="0.4386%" y="575.50">dype..</text></g><g><title>dyper_ops`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (5 samples, 0.05%)</title><rect x="4.0492%" y="549" width="0.0496%" height="15" fill="rgb(241,131,45)"/><text x="4.2992%" y="559.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (9 samples, 0.09%)</title><rect x="4.1485%" y="549" width="0.0893%" height="15" fill="rgb(249,31,29)"/><text x="4.3985%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::Wheel::next_expiration_time (4 samples, 0.04%)</title><rect x="4.2378%" y="549" width="0.0397%" height="15" fill="rgb(225,111,53)"/><text x="4.4878%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::level::Level::next_expiration (2 samples, 0.02%)</title><rect x="4.2576%" y="533" width="0.0198%" height="15" fill="rgb(238,160,17)"/><text x="4.5076%" y="543.50"></text></g><g><title>dyper_ops`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (20 samples, 0.20%)</title><rect x="4.1187%" y="565" width="0.1985%" height="15" fill="rgb(214,148,48)"/><text x="4.3687%" y="575.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::Wheel::poll (4 samples, 0.04%)</title><rect x="4.2775%" y="549" width="0.0397%" height="15" fill="rgb(232,36,49)"/><text x="4.5275%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::Wheel::next_expiration_time (4 samples, 0.04%)</title><rect x="4.3172%" y="565" width="0.0397%" height="15" fill="rgb(209,103,24)"/><text x="4.5672%" y="575.50"></text></g><g><title>dyper_ops`tokio::time::driver::wheel::level::Level::next_expiration (2 samples, 0.02%)</title><rect x="4.3370%" y="549" width="0.0198%" height="15" fill="rgb(229,88,8)"/><text x="4.5870%" y="559.50"></text></g><g><title>dyper_ops`tokio::time::driver::Driver&lt;P&gt;::park_internal (427 samples, 4.24%)</title><rect x="0.1588%" y="581" width="4.2378%" height="15" fill="rgb(213,181,19)"/><text x="0.4088%" y="591.50">dyper..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (4 samples, 0.04%)</title><rect x="4.3569%" y="565" width="0.0397%" height="15" fill="rgb(254,191,54)"/><text x="4.6069%" y="575.50"></text></g><g><title>dyper_ops`&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (432 samples, 4.29%)</title><rect x="0.1191%" y="597" width="4.2874%" height="15" fill="rgb(241,83,37)"/><text x="0.3691%" y="607.50">dyper..</text></g><g><title>dyper_ops`&lt;T as core::any::Any&gt;::type_id (4 samples, 0.04%)</title><rect x="4.4760%" y="565" width="0.0397%" height="15" fill="rgb(233,36,39)"/><text x="4.7260%" y="575.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::TryCatch&lt;rusty_v8::scope::HandleScope&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="4.5355%" y="565" width="0.0198%" height="15" fill="rgb(226,3,54)"/><text x="4.7855%" y="575.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::BuildTypeIdHasher as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.04%)</title><rect x="4.5554%" y="565" width="0.0397%" height="15" fill="rgb(245,192,40)"/><text x="4.8054%" y="575.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="4.5951%" y="565" width="0.0198%" height="15" fill="rgb(238,167,29)"/><text x="4.8451%" y="575.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="4.6249%" y="565" width="0.0298%" height="15" fill="rgb(232,182,51)"/><text x="4.8749%" y="575.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::check_promise_exceptions (2 samples, 0.02%)</title><rect x="4.6546%" y="565" width="0.0198%" height="15" fill="rgb(231,60,39)"/><text x="4.9046%" y="575.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::global_context (2 samples, 0.02%)</title><rect x="4.6745%" y="565" width="0.0198%" height="15" fill="rgb(208,69,12)"/><text x="4.9245%" y="575.50"></text></g><g><title>dyper_ops`&lt;alloc::vec::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="4.9921%" y="549" width="0.0496%" height="15" fill="rgb(235,93,37)"/><text x="5.2421%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.05%)</title><rect x="4.9921%" y="533" width="0.0496%" height="15" fill="rgb(213,116,39)"/><text x="5.2421%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.03%)</title><rect x="5.0119%" y="517" width="0.0298%" height="15" fill="rgb(222,207,29)"/><text x="5.2619%" y="527.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="5.0516%" y="549" width="0.0198%" height="15" fill="rgb(206,96,30)"/><text x="5.3016%" y="559.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (5 samples, 0.05%)</title><rect x="5.1112%" y="549" width="0.0496%" height="15" fill="rgb(218,138,4)"/><text x="5.3612%" y="559.50"></text></g><g><title>dyper_ops`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (3 samples, 0.03%)</title><rect x="5.1707%" y="549" width="0.0298%" height="15" fill="rgb(250,191,14)"/><text x="5.4207%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.09%)</title><rect x="5.2402%" y="517" width="0.0893%" height="15" fill="rgb(239,60,40)"/><text x="5.4902%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.09%)</title><rect x="5.2402%" y="501" width="0.0893%" height="15" fill="rgb(206,27,48)"/><text x="5.4902%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.08%)</title><rect x="5.2501%" y="485" width="0.0794%" height="15" fill="rgb(225,35,8)"/><text x="5.5001%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.07%)</title><rect x="5.2600%" y="469" width="0.0695%" height="15" fill="rgb(250,213,24)"/><text x="5.5100%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="5.2898%" y="453" width="0.0397%" height="15" fill="rgb(247,123,22)"/><text x="5.5398%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="5.3990%" y="437" width="0.0198%" height="15" fill="rgb(231,138,38)"/><text x="5.6490%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.06%)</title><rect x="5.3692%" y="469" width="0.0595%" height="15" fill="rgb(231,145,46)"/><text x="5.6192%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.03%)</title><rect x="5.3990%" y="453" width="0.0298%" height="15" fill="rgb(251,118,11)"/><text x="5.6490%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="5.4287%" y="469" width="0.0198%" height="15" fill="rgb(217,147,25)"/><text x="5.6787%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="5.4287%" y="453" width="0.0198%" height="15" fill="rgb(247,81,37)"/><text x="5.6787%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (11 samples, 0.11%)</title><rect x="5.3692%" y="485" width="0.1092%" height="15" fill="rgb(209,12,38)"/><text x="5.6192%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.03%)</title><rect x="5.4486%" y="469" width="0.0298%" height="15" fill="rgb(227,1,9)"/><text x="5.6986%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.16%)</title><rect x="5.3394%" y="501" width="0.1588%" height="15" fill="rgb(248,47,43)"/><text x="5.5894%" y="511.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.32%)</title><rect x="5.2104%" y="549" width="0.3176%" height="15" fill="rgb(221,10,30)"/><text x="5.4604%" y="559.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (30 samples, 0.30%)</title><rect x="5.2303%" y="533" width="0.2977%" height="15" fill="rgb(210,229,1)"/><text x="5.4803%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.20%)</title><rect x="5.3295%" y="517" width="0.1985%" height="15" fill="rgb(222,148,37)"/><text x="5.5795%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="5.4982%" y="501" width="0.0298%" height="15" fill="rgb(234,67,33)"/><text x="5.7482%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.03%)</title><rect x="5.4982%" y="485" width="0.0298%" height="15" fill="rgb(247,98,35)"/><text x="5.7482%" y="495.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (6 samples, 0.06%)</title><rect x="5.5379%" y="549" width="0.0595%" height="15" fill="rgb(247,138,52)"/><text x="5.7879%" y="559.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::check_promise_exceptions (2 samples, 0.02%)</title><rect x="5.5975%" y="549" width="0.0198%" height="15" fill="rgb(213,79,30)"/><text x="5.8475%" y="559.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::thread_safe_handle (3 samples, 0.03%)</title><rect x="5.6669%" y="533" width="0.0298%" height="15" fill="rgb(246,177,23)"/><text x="5.9169%" y="543.50"></text></g><g><title>dyper_ops`v8::V8::GlobalizeReference (5 samples, 0.05%)</title><rect x="5.6967%" y="517" width="0.0496%" height="15" fill="rgb(230,62,27)"/><text x="5.9467%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::GlobalHandles::Create (4 samples, 0.04%)</title><rect x="5.7066%" y="501" width="0.0397%" height="15" fill="rgb(216,154,8)"/><text x="5.9566%" y="511.50"></text></g><g><title>dyper_ops`v8__Global__New (6 samples, 0.06%)</title><rect x="5.6967%" y="533" width="0.0595%" height="15" fill="rgb(244,35,45)"/><text x="5.9467%" y="543.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::global_context (15 samples, 0.15%)</title><rect x="5.6173%" y="549" width="0.1489%" height="15" fill="rgb(251,115,12)"/><text x="5.8673%" y="559.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (5 samples, 0.05%)</title><rect x="5.7662%" y="549" width="0.0496%" height="15" fill="rgb(240,54,50)"/><text x="6.0162%" y="559.50"></text></g><g><title>dyper_ops`v8::BackingStore::ByteLength (2 samples, 0.02%)</title><rect x="5.7960%" y="533" width="0.0198%" height="15" fill="rgb(233,84,52)"/><text x="6.0460%" y="543.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::register (6 samples, 0.06%)</title><rect x="5.8158%" y="549" width="0.0595%" height="15" fill="rgb(207,117,47)"/><text x="6.0658%" y="559.50"></text></g><g><title>dyper_ops`futures_task::waker_ref::WakerRef::new_unowned (2 samples, 0.02%)</title><rect x="5.8753%" y="549" width="0.0198%" height="15" fill="rgb(249,43,39)"/><text x="6.1253%" y="559.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="6.3319%" y="517" width="0.0397%" height="15" fill="rgb(209,38,44)"/><text x="6.5819%" y="527.50"></text></g><g><title>dyper_ops`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (3 samples, 0.03%)</title><rect x="6.6098%" y="485" width="0.0298%" height="15" fill="rgb(236,212,23)"/><text x="6.8598%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="6.9174%" y="421" width="0.0198%" height="15" fill="rgb(242,79,21)"/><text x="7.1674%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="7.0365%" y="389" width="0.0198%" height="15" fill="rgb(211,96,35)"/><text x="7.2865%" y="399.50"></text></g><g><title>dyper_ops`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (35 samples, 0.35%)</title><rect x="6.8579%" y="469" width="0.3474%" height="15" fill="rgb(253,215,40)"/><text x="7.1079%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (32 samples, 0.32%)</title><rect x="6.8877%" y="453" width="0.3176%" height="15" fill="rgb(211,81,21)"/><text x="7.1377%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (31 samples, 0.31%)</title><rect x="6.8976%" y="437" width="0.3077%" height="15" fill="rgb(208,190,38)"/><text x="7.1476%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.27%)</title><rect x="6.9373%" y="421" width="0.2680%" height="15" fill="rgb(235,213,38)"/><text x="7.1873%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.27%)</title><rect x="6.9373%" y="405" width="0.2680%" height="15" fill="rgb(237,122,38)"/><text x="7.1873%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.14%)</title><rect x="7.0663%" y="389" width="0.1389%" height="15" fill="rgb(244,218,35)"/><text x="7.3163%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.09%)</title><rect x="7.1159%" y="373" width="0.0893%" height="15" fill="rgb(240,68,47)"/><text x="7.3659%" y="383.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="7.2052%" y="469" width="0.0298%" height="15" fill="rgb(210,16,53)"/><text x="7.4552%" y="479.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="7.5427%" y="453" width="0.0595%" height="15" fill="rgb(235,124,12)"/><text x="7.7927%" y="463.50"></text></g><g><title>dyper_ops`&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.04%)</title><rect x="8.2672%" y="437" width="0.0397%" height="15" fill="rgb(224,169,11)"/><text x="8.5172%" y="447.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="8.3069%" y="437" width="0.0298%" height="15" fill="rgb(250,166,2)"/><text x="8.5569%" y="447.50"></text></g><g><title>dyper_ops`&lt;http::method::Method as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="8.3366%" y="437" width="0.0298%" height="15" fill="rgb(242,216,29)"/><text x="8.5866%" y="447.50"></text></g><g><title>dyper_ops`&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="8.3664%" y="437" width="0.0198%" height="15" fill="rgb(230,116,27)"/><text x="8.6164%" y="447.50"></text></g><g><title>dyper_ops`__rust_probestack (5 samples, 0.05%)</title><rect x="8.3962%" y="437" width="0.0496%" height="15" fill="rgb(228,99,48)"/><text x="8.6462%" y="447.50"></text></g><g><title>dyper_ops`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="8.4657%" y="421" width="0.0298%" height="15" fill="rgb(253,11,6)"/><text x="8.7157%" y="431.50"></text></g><g><title>dyper_ops`__rdl_realloc (4 samples, 0.04%)</title><rect x="8.5649%" y="373" width="0.0397%" height="15" fill="rgb(247,143,39)"/><text x="8.8149%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (4 samples, 0.04%)</title><rect x="8.6939%" y="341" width="0.0397%" height="15" fill="rgb(236,97,10)"/><text x="8.9439%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (4 samples, 0.04%)</title><rect x="8.7435%" y="341" width="0.0397%" height="15" fill="rgb(233,208,19)"/><text x="8.9935%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.06%)</title><rect x="8.8626%" y="325" width="0.0595%" height="15" fill="rgb(216,164,2)"/><text x="9.1126%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="8.9222%" y="325" width="0.0198%" height="15" fill="rgb(220,129,5)"/><text x="9.1722%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.12%)</title><rect x="8.9420%" y="325" width="0.1191%" height="15" fill="rgb(242,17,10)"/><text x="9.1920%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.11%)</title><rect x="8.9520%" y="309" width="0.1092%" height="15" fill="rgb(242,107,0)"/><text x="9.2020%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="9.0314%" y="293" width="0.0298%" height="15" fill="rgb(251,28,31)"/><text x="9.2814%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.11%)</title><rect x="9.0611%" y="325" width="0.1092%" height="15" fill="rgb(233,223,10)"/><text x="9.3111%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.10%)</title><rect x="9.0711%" y="309" width="0.0992%" height="15" fill="rgb(215,21,27)"/><text x="9.3211%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (28 samples, 0.28%)</title><rect x="9.1802%" y="325" width="0.2779%" height="15" fill="rgb(232,23,21)"/><text x="9.4302%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="9.4383%" y="309" width="0.0198%" height="15" fill="rgb(244,5,23)"/><text x="9.6883%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (68 samples, 0.67%)</title><rect x="8.7932%" y="341" width="0.6749%" height="15" fill="rgb(226,81,46)"/><text x="9.0432%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.03%)</title><rect x="9.4680%" y="341" width="0.0298%" height="15" fill="rgb(247,70,30)"/><text x="9.7180%" y="351.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (3 samples, 0.03%)</title><rect x="9.4978%" y="341" width="0.0298%" height="15" fill="rgb(212,68,19)"/><text x="9.7478%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (92 samples, 0.91%)</title><rect x="8.6741%" y="357" width="0.9131%" height="15" fill="rgb(240,187,13)"/><text x="8.9241%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.06%)</title><rect x="9.5276%" y="341" width="0.0595%" height="15" fill="rgb(223,113,26)"/><text x="9.7776%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="9.5871%" y="357" width="0.0198%" height="15" fill="rgb(206,192,2)"/><text x="9.8371%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (112 samples, 1.11%)</title><rect x="8.6046%" y="373" width="1.1116%" height="15" fill="rgb(241,108,4)"/><text x="8.8546%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.11%)</title><rect x="9.6070%" y="357" width="0.1092%" height="15" fill="rgb(247,173,49)"/><text x="9.8570%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.10%)</title><rect x="9.6169%" y="341" width="0.0992%" height="15" fill="rgb(224,114,35)"/><text x="9.8669%" y="351.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (124 samples, 1.23%)</title><rect x="8.5153%" y="389" width="1.2306%" height="15" fill="rgb(245,159,27)"/><text x="8.7653%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="9.7162%" y="373" width="0.0298%" height="15" fill="rgb(245,172,44)"/><text x="9.9662%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="9.7459%" y="389" width="0.0198%" height="15" fill="rgb(236,23,11)"/><text x="9.9959%" y="399.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (131 samples, 1.30%)</title><rect x="8.5054%" y="405" width="1.3001%" height="15" fill="rgb(205,117,38)"/><text x="8.7554%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="9.7658%" y="389" width="0.0397%" height="15" fill="rgb(237,72,25)"/><text x="10.0158%" y="399.50"></text></g><g><title>dyper_ops`&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="9.8650%" y="373" width="0.0198%" height="15" fill="rgb(244,70,9)"/><text x="10.1150%" y="383.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="9.8948%" y="357" width="0.0198%" height="15" fill="rgb(217,125,39)"/><text x="10.1448%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="9.8948%" y="341" width="0.0198%" height="15" fill="rgb(235,36,10)"/><text x="10.1448%" y="351.50"></text></g><g><title>dyper_ops`&lt;http::uri::path::PathAndQuery as core::fmt::Display&gt;::fmt (12 samples, 0.12%)</title><rect x="9.8055%" y="405" width="0.1191%" height="15" fill="rgb(251,123,47)"/><text x="10.0555%" y="415.50"></text></g><g><title>dyper_ops`core::fmt::Formatter::write_fmt (8 samples, 0.08%)</title><rect x="9.8452%" y="389" width="0.0794%" height="15" fill="rgb(221,13,13)"/><text x="10.0952%" y="399.50"></text></g><g><title>dyper_ops`core::fmt::write (4 samples, 0.04%)</title><rect x="9.8849%" y="373" width="0.0397%" height="15" fill="rgb(238,131,9)"/><text x="10.1349%" y="383.50"></text></g><g><title>dyper_ops`core::fmt::write (146 samples, 1.45%)</title><rect x="8.5054%" y="421" width="1.4490%" height="15" fill="rgb(211,50,8)"/><text x="8.7554%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.22%)</title><rect x="9.9543%" y="421" width="0.2183%" height="15" fill="rgb(245,182,24)"/><text x="10.2043%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.20%)</title><rect x="9.9742%" y="405" width="0.1985%" height="15" fill="rgb(242,14,37)"/><text x="10.2242%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.18%)</title><rect x="9.9940%" y="389" width="0.1786%" height="15" fill="rgb(246,228,12)"/><text x="10.2440%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.17%)</title><rect x="10.0040%" y="373" width="0.1687%" height="15" fill="rgb(213,55,15)"/><text x="10.2540%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.09%)</title><rect x="10.0834%" y="357" width="0.0893%" height="15" fill="rgb(209,9,3)"/><text x="10.3334%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="10.1528%" y="341" width="0.0198%" height="15" fill="rgb(230,59,30)"/><text x="10.4028%" y="351.50"></text></g><g><title>dyper_ops`alloc::fmt::format (175 samples, 1.74%)</title><rect x="8.4458%" y="437" width="1.7368%" height="15" fill="rgb(209,121,21)"/><text x="8.6958%" y="447.50"></text></g><g><title>dyper_ops`bytes::bytes::static_drop (2 samples, 0.02%)</title><rect x="10.1826%" y="437" width="0.0198%" height="15" fill="rgb(220,109,13)"/><text x="10.4326%" y="447.50"></text></g><g><title>dyper_ops`core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="10.2124%" y="437" width="0.0198%" height="15" fill="rgb(232,18,1)"/><text x="10.4624%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.05%)</title><rect x="10.5697%" y="341" width="0.0496%" height="15" fill="rgb(215,41,42)"/><text x="10.8197%" y="351.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (49 samples, 0.49%)</title><rect x="10.4109%" y="405" width="0.4863%" height="15" fill="rgb(224,123,36)"/><text x="10.6609%" y="415.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (44 samples, 0.44%)</title><rect x="10.4605%" y="389" width="0.4367%" height="15" fill="rgb(240,125,3)"/><text x="10.7105%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc (40 samples, 0.40%)</title><rect x="10.5002%" y="373" width="0.3970%" height="15" fill="rgb(205,98,50)"/><text x="10.7502%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (35 samples, 0.35%)</title><rect x="10.5498%" y="357" width="0.3474%" height="15" fill="rgb(205,185,37)"/><text x="10.7998%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.28%)</title><rect x="10.6193%" y="341" width="0.2779%" height="15" fill="rgb(238,207,15)"/><text x="10.8693%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.26%)</title><rect x="10.6391%" y="325" width="0.2580%" height="15" fill="rgb(213,199,42)"/><text x="10.8891%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.11%)</title><rect x="10.7880%" y="309" width="0.1092%" height="15" fill="rgb(235,201,11)"/><text x="11.0380%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="10.8773%" y="293" width="0.0198%" height="15" fill="rgb(207,46,11)"/><text x="11.1273%" y="303.50"></text></g><g><title>dyper_ops`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 samples, 0.66%)</title><rect x="10.2819%" y="421" width="0.6550%" height="15" fill="rgb(241,35,35)"/><text x="10.5319%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="10.9071%" y="405" width="0.0298%" height="15" fill="rgb(243,32,47)"/><text x="11.1571%" y="415.50"></text></g><g><title>dyper_ops`&lt;http::method::Method as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="10.9369%" y="421" width="0.0298%" height="15" fill="rgb(247,202,23)"/><text x="11.1869%" y="431.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="10.9766%" y="421" width="0.0298%" height="15" fill="rgb(219,102,11)"/><text x="11.2266%" y="431.50"></text></g><g><title>dyper_ops`core::fmt::Formatter::pad (3 samples, 0.03%)</title><rect x="11.0064%" y="421" width="0.0298%" height="15" fill="rgb(243,110,44)"/><text x="11.2564%" y="431.50"></text></g><g><title>dyper_ops`core::fmt::write (86 samples, 0.85%)</title><rect x="10.2322%" y="437" width="0.8535%" height="15" fill="rgb(222,74,54)"/><text x="10.4822%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="11.0461%" y="421" width="0.0397%" height="15" fill="rgb(216,99,12)"/><text x="11.2961%" y="431.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::shared_v_drop (2 samples, 0.02%)</title><rect x="11.1354%" y="421" width="0.0198%" height="15" fill="rgb(226,22,26)"/><text x="11.3854%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_size (12 samples, 0.12%)</title><rect x="11.2445%" y="373" width="0.1191%" height="15" fill="rgb(217,163,10)"/><text x="11.4945%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.05%)</title><rect x="11.3636%" y="373" width="0.0496%" height="15" fill="rgb(213,25,53)"/><text x="11.6136%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="11.3934%" y="357" width="0.0198%" height="15" fill="rgb(252,105,26)"/><text x="11.6434%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.18%)</title><rect x="11.2445%" y="389" width="0.1786%" height="15" fill="rgb(220,39,43)"/><text x="11.4945%" y="399.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::shared_v_drop (35 samples, 0.35%)</title><rect x="11.2247%" y="405" width="0.3474%" height="15" fill="rgb(229,68,48)"/><text x="11.4747%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (15 samples, 0.15%)</title><rect x="11.4232%" y="389" width="0.1489%" height="15" fill="rgb(252,8,32)"/><text x="11.6732%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="11.5721%" y="405" width="0.0198%" height="15" fill="rgb(223,20,43)"/><text x="11.8221%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.18%)</title><rect x="11.6614%" y="389" width="0.1786%" height="15" fill="rgb(229,81,49)"/><text x="11.9114%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.16%)</title><rect x="11.6812%" y="373" width="0.1588%" height="15" fill="rgb(236,28,36)"/><text x="11.9312%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.27%)</title><rect x="11.5919%" y="405" width="0.2680%" height="15" fill="rgb(249,185,26)"/><text x="11.8419%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="11.8400%" y="389" width="0.0198%" height="15" fill="rgb(249,174,33)"/><text x="12.0900%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.22%)</title><rect x="12.4553%" y="373" width="0.2183%" height="15" fill="rgb(233,201,37)"/><text x="12.7053%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (89 samples, 0.88%)</title><rect x="11.8599%" y="405" width="0.8833%" height="15" fill="rgb(221,78,26)"/><text x="12.1099%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (62 samples, 0.62%)</title><rect x="12.1278%" y="389" width="0.6153%" height="15" fill="rgb(250,127,30)"/><text x="12.3778%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.07%)</title><rect x="12.6737%" y="373" width="0.0695%" height="15" fill="rgb(230,49,44)"/><text x="12.9237%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.02%)</title><rect x="12.7432%" y="405" width="0.0198%" height="15" fill="rgb(229,67,23)"/><text x="12.9932%" y="415.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (164 samples, 1.63%)</title><rect x="11.1552%" y="421" width="1.6276%" height="15" fill="rgb(249,83,47)"/><text x="11.4052%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="12.7630%" y="405" width="0.0198%" height="15" fill="rgb(215,43,3)"/><text x="13.0130%" y="415.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (173 samples, 1.72%)</title><rect x="11.0857%" y="437" width="1.7170%" height="15" fill="rgb(238,154,13)"/><text x="11.3357%" y="447.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::get (6 samples, 0.06%)</title><rect x="12.8622%" y="421" width="0.0595%" height="15" fill="rgb(219,56,2)"/><text x="13.1122%" y="431.50"></text></g><g><title>dyper_ops`http::header::map::hash_elem_using (2 samples, 0.02%)</title><rect x="12.9218%" y="421" width="0.0198%" height="15" fill="rgb(233,0,4)"/><text x="13.1718%" y="431.50"></text></g><g><title>dyper_ops`http::header::value::HeaderValue::to_str (3 samples, 0.03%)</title><rect x="12.9416%" y="421" width="0.0298%" height="15" fill="rgb(235,30,7)"/><text x="13.1916%" y="431.50"></text></g><g><title>dyper_ops`dyper_ops::extract_host (38 samples, 0.38%)</title><rect x="12.8027%" y="437" width="0.3771%" height="15" fill="rgb(250,79,13)"/><text x="13.0527%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (21 samples, 0.21%)</title><rect x="12.9714%" y="421" width="0.2084%" height="15" fill="rgb(211,146,34)"/><text x="13.2214%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (21 samples, 0.21%)</title><rect x="12.9714%" y="405" width="0.2084%" height="15" fill="rgb(228,22,38)"/><text x="13.2214%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.20%)</title><rect x="12.9813%" y="389" width="0.1985%" height="15" fill="rgb(235,168,5)"/><text x="13.2313%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.20%)</title><rect x="12.9813%" y="373" width="0.1985%" height="15" fill="rgb(221,155,16)"/><text x="13.2313%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="13.1401%" y="357" width="0.0397%" height="15" fill="rgb(215,215,53)"/><text x="13.3901%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="13.1600%" y="341" width="0.0198%" height="15" fill="rgb(223,4,10)"/><text x="13.4100%" y="351.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="13.2791%" y="421" width="0.0397%" height="15" fill="rgb(234,103,6)"/><text x="13.5291%" y="431.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (3 samples, 0.03%)</title><rect x="13.3287%" y="421" width="0.0298%" height="15" fill="rgb(227,97,0)"/><text x="13.5787%" y="431.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (2 samples, 0.02%)</title><rect x="13.3585%" y="421" width="0.0198%" height="15" fill="rgb(234,150,53)"/><text x="13.6085%" y="431.50"></text></g><g><title>dyper_ops`__rdl_dealloc (2 samples, 0.02%)</title><rect x="13.3783%" y="421" width="0.0198%" height="15" fill="rgb(228,201,54)"/><text x="13.6283%" y="431.50"></text></g><g><title>dyper_ops`__rust_probestack (3 samples, 0.03%)</title><rect x="13.3982%" y="421" width="0.0298%" height="15" fill="rgb(222,22,37)"/><text x="13.6482%" y="431.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (8 samples, 0.08%)</title><rect x="13.4279%" y="421" width="0.0794%" height="15" fill="rgb(237,53,32)"/><text x="13.6779%" y="431.50"></text></g><g><title>dyper_ops`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (5 samples, 0.05%)</title><rect x="13.5073%" y="421" width="0.0496%" height="15" fill="rgb(233,25,53)"/><text x="13.7573%" y="431.50"></text></g><g><title>dyper_ops`hyper::body::body::Body::take_full_data (2 samples, 0.02%)</title><rect x="13.5669%" y="421" width="0.0198%" height="15" fill="rgb(210,40,34)"/><text x="13.8169%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (2 samples, 0.02%)</title><rect x="13.5967%" y="421" width="0.0198%" height="15" fill="rgb(241,220,44)"/><text x="13.8467%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (3 samples, 0.03%)</title><rect x="13.6165%" y="421" width="0.0298%" height="15" fill="rgb(235,28,35)"/><text x="13.8665%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (3 samples, 0.03%)</title><rect x="13.6463%" y="421" width="0.0298%" height="15" fill="rgb(210,56,17)"/><text x="13.8963%" y="431.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::State::is_write_closed (3 samples, 0.03%)</title><rect x="13.6761%" y="421" width="0.0298%" height="15" fill="rgb(224,130,29)"/><text x="13.9261%" y="431.50"></text></g><g><title>dyper_ops`futures_task::waker::clone_arc_raw (7 samples, 0.07%)</title><rect x="14.7082%" y="389" width="0.0695%" height="15" fill="rgb(235,212,8)"/><text x="14.9582%" y="399.50"></text></g><g><title>dyper_ops`alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.08%)</title><rect x="14.8075%" y="373" width="0.0794%" height="15" fill="rgb(223,33,50)"/><text x="15.0575%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.09%)</title><rect x="14.8968%" y="373" width="0.0893%" height="15" fill="rgb(219,149,13)"/><text x="15.1468%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.06%)</title><rect x="14.9266%" y="357" width="0.0595%" height="15" fill="rgb(250,156,29)"/><text x="15.1766%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="14.9365%" y="341" width="0.0496%" height="15" fill="rgb(216,193,19)"/><text x="15.1865%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="15.1449%" y="341" width="0.0397%" height="15" fill="rgb(216,135,14)"/><text x="15.3949%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.25%)</title><rect x="14.9861%" y="373" width="0.2481%" height="15" fill="rgb(241,47,5)"/><text x="15.2361%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.17%)</title><rect x="15.0655%" y="357" width="0.1687%" height="15" fill="rgb(233,42,35)"/><text x="15.3155%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.05%)</title><rect x="15.1846%" y="341" width="0.0496%" height="15" fill="rgb(231,13,6)"/><text x="15.4346%" y="351.50"></text></g><g><title>dyper_ops`futures_task::waker::drop_arc_raw (47 samples, 0.47%)</title><rect x="14.7777%" y="389" width="0.4665%" height="15" fill="rgb(207,181,40)"/><text x="15.0277%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="15.2541%" y="389" width="0.0198%" height="15" fill="rgb(254,173,49)"/><text x="15.5041%" y="399.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (89 samples, 0.88%)</title><rect x="14.4800%" y="405" width="0.8833%" height="15" fill="rgb(221,1,38)"/><text x="14.7300%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.08%)</title><rect x="15.2838%" y="389" width="0.0794%" height="15" fill="rgb(206,124,46)"/><text x="15.5338%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="15.6411%" y="309" width="0.0397%" height="15" fill="rgb(249,21,11)"/><text x="15.8911%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.18%)</title><rect x="15.5617%" y="373" width="0.1786%" height="15" fill="rgb(222,201,40)"/><text x="15.8117%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.18%)</title><rect x="15.5617%" y="357" width="0.1786%" height="15" fill="rgb(235,61,29)"/><text x="15.8117%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.17%)</title><rect x="15.5717%" y="341" width="0.1687%" height="15" fill="rgb(219,207,3)"/><text x="15.8217%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.16%)</title><rect x="15.5816%" y="325" width="0.1588%" height="15" fill="rgb(222,56,46)"/><text x="15.8316%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.06%)</title><rect x="15.6808%" y="309" width="0.0595%" height="15" fill="rgb(239,76,54)"/><text x="15.9308%" y="319.50"></text></g><g><title>dyper_ops`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (35 samples, 0.35%)</title><rect x="15.4823%" y="389" width="0.3474%" height="15" fill="rgb(231,124,27)"/><text x="15.7323%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.09%)</title><rect x="15.7404%" y="373" width="0.0893%" height="15" fill="rgb(249,195,6)"/><text x="15.9904%" y="383.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (4 samples, 0.04%)</title><rect x="15.8396%" y="389" width="0.0397%" height="15" fill="rgb(237,174,47)"/><text x="16.0896%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.16%)</title><rect x="15.8892%" y="389" width="0.1588%" height="15" fill="rgb(206,201,31)"/><text x="16.1392%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (10 samples, 0.10%)</title><rect x="16.0480%" y="389" width="0.0992%" height="15" fill="rgb(231,57,52)"/><text x="16.2980%" y="399.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (92 samples, 0.91%)</title><rect x="15.3632%" y="405" width="0.9131%" height="15" fill="rgb(248,177,22)"/><text x="15.6132%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (13 samples, 0.13%)</title><rect x="16.1473%" y="389" width="0.1290%" height="15" fill="rgb(215,211,37)"/><text x="16.3973%" y="399.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (2 samples, 0.02%)</title><rect x="16.2763%" y="405" width="0.0198%" height="15" fill="rgb(241,128,51)"/><text x="16.5263%" y="415.50"></text></g><g><title>dyper_ops`hyper::common::date::CACHED::__getit (6 samples, 0.06%)</title><rect x="16.3557%" y="389" width="0.0595%" height="15" fill="rgb(227,165,31)"/><text x="16.6057%" y="399.50"></text></g><g><title>dyper_ops`&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.03%)</title><rect x="16.4252%" y="373" width="0.0298%" height="15" fill="rgb(228,167,24)"/><text x="16.6752%" y="383.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (18 samples, 0.18%)</title><rect x="16.4847%" y="357" width="0.1786%" height="15" fill="rgb(228,143,12)"/><text x="16.7347%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (18 samples, 0.18%)</title><rect x="16.4847%" y="341" width="0.1786%" height="15" fill="rgb(249,149,8)"/><text x="16.7347%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (15 samples, 0.15%)</title><rect x="16.5145%" y="325" width="0.1489%" height="15" fill="rgb(243,35,44)"/><text x="16.7645%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (4 samples, 0.04%)</title><rect x="16.6634%" y="357" width="0.0397%" height="15" fill="rgb(246,89,9)"/><text x="16.9134%" y="367.50"></text></g><g><title>dyper_ops`std::time::SystemTime::now (26 samples, 0.26%)</title><rect x="16.4549%" y="373" width="0.2580%" height="15" fill="rgb(233,213,13)"/><text x="16.7049%" y="383.50"></text></g><g><title>dyper_ops`hyper::common::date::CachedDate::check (34 samples, 0.34%)</title><rect x="16.4152%" y="389" width="0.3374%" height="15" fill="rgb(233,141,41)"/><text x="16.6652%" y="399.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (4 samples, 0.04%)</title><rect x="16.7130%" y="373" width="0.0397%" height="15" fill="rgb(239,167,4)"/><text x="16.9630%" y="383.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (48 samples, 0.48%)</title><rect x="16.2961%" y="405" width="0.4764%" height="15" fill="rgb(209,217,16)"/><text x="16.5461%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="16.7527%" y="389" width="0.0198%" height="15" fill="rgb(219,88,35)"/><text x="17.0027%" y="399.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (9 samples, 0.09%)</title><rect x="16.7725%" y="405" width="0.0893%" height="15" fill="rgb(220,193,23)"/><text x="17.0225%" y="415.50"></text></g><g><title>dyper_ops`futures_task::waker::drop_arc_raw (4 samples, 0.04%)</title><rect x="16.8222%" y="389" width="0.0397%" height="15" fill="rgb(230,90,52)"/><text x="17.0722%" y="399.50"></text></g><g><title>dyper_ops`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (2 samples, 0.02%)</title><rect x="16.8618%" y="405" width="0.0198%" height="15" fill="rgb(252,106,19)"/><text x="17.1118%" y="415.50"></text></g><g><title>dyper_ops`http::request::Parts::new (2 samples, 0.02%)</title><rect x="16.8817%" y="405" width="0.0198%" height="15" fill="rgb(206,74,20)"/><text x="17.1317%" y="415.50"></text></g><g><title>dyper_ops`hyper::body::body::Body::new (2 samples, 0.02%)</title><rect x="16.9015%" y="405" width="0.0198%" height="15" fill="rgb(230,138,44)"/><text x="17.1515%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::Wants::contains (2 samples, 0.02%)</title><rect x="16.9313%" y="405" width="0.0198%" height="15" fill="rgb(235,182,43)"/><text x="17.1813%" y="415.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (4 samples, 0.04%)</title><rect x="17.0107%" y="389" width="0.0397%" height="15" fill="rgb(242,16,51)"/><text x="17.2607%" y="399.50"></text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (2 samples, 0.02%)</title><rect x="17.0603%" y="389" width="0.0198%" height="15" fill="rgb(248,9,4)"/><text x="17.3103%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (4 samples, 0.04%)</title><rect x="17.0901%" y="389" width="0.0397%" height="15" fill="rgb(210,31,22)"/><text x="17.3401%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::State::is_idle (4 samples, 0.04%)</title><rect x="17.1397%" y="389" width="0.0397%" height="15" fill="rgb(239,54,39)"/><text x="17.3897%" y="399.50"></text></g><g><title>dyper_ops`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="17.4970%" y="373" width="0.0695%" height="15" fill="rgb(230,99,41)"/><text x="17.7470%" y="383.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (2 samples, 0.02%)</title><rect x="17.5665%" y="373" width="0.0198%" height="15" fill="rgb(253,106,12)"/><text x="17.8165%" y="383.50"></text></g><g><title>dyper_ops`&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (6 samples, 0.06%)</title><rect x="17.7154%" y="325" width="0.0595%" height="15" fill="rgb(213,46,41)"/><text x="17.9654%" y="335.50"></text></g><g><title>dyper_ops`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1,538 samples, 15.26%)</title><rect x="17.6856%" y="341" width="15.2640%" height="15" fill="rgb(215,133,35)"/><text x="17.9356%" y="351.50">dyper_ops`&lt;&amp;mio::net::t..</text></g><g><title>libsystem_kernel.dylib`writev (1,528 samples, 15.16%)</title><rect x="17.7848%" y="325" width="15.1647%" height="15" fill="rgb(213,28,5)"/><text x="18.0348%" y="335.50">libsystem_kernel.dylib`..</text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,559 samples, 15.47%)</title><rect x="17.5863%" y="373" width="15.4724%" height="15" fill="rgb(215,77,49)"/><text x="17.8363%" y="383.50">dyper_ops`&lt;tokio::net::t..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_write_io (1,555 samples, 15.43%)</title><rect x="17.6260%" y="357" width="15.4327%" height="15" fill="rgb(248,100,22)"/><text x="17.8760%" y="367.50">dyper_ops`tokio::io::dri..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (10 samples, 0.10%)</title><rect x="32.9595%" y="341" width="0.0992%" height="15" fill="rgb(208,67,9)"/><text x="33.2095%" y="351.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;::reset (2 samples, 0.02%)</title><rect x="33.0588%" y="373" width="0.0198%" height="15" fill="rgb(219,133,21)"/><text x="33.3088%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1,604 samples, 15.92%)</title><rect x="17.1794%" y="389" width="15.9190%" height="15" fill="rgb(246,46,29)"/><text x="17.4294%" y="399.50">dyper_ops`hyper::proto::..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_write_io (2 samples, 0.02%)</title><rect x="33.0786%" y="373" width="0.0198%" height="15" fill="rgb(246,185,52)"/><text x="33.3286%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1,628 samples, 16.16%)</title><rect x="16.9512%" y="405" width="16.1572%" height="15" fill="rgb(252,136,11)"/><text x="17.2012%" y="415.50">dyper_ops`hyper::proto::h..</text></g><g><title>dyper_ops`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="33.2969%" y="373" width="0.0198%" height="15" fill="rgb(219,138,53)"/><text x="33.5469%" y="383.50"></text></g><g><title>dyper_ops`bytes::buf::uninit_slice::UninitSlice::from_raw_parts_mut (4 samples, 0.04%)</title><rect x="33.3168%" y="373" width="0.0397%" height="15" fill="rgb(211,51,23)"/><text x="33.5668%" y="383.50"></text></g><g><title>dyper_ops`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.08%)</title><rect x="33.6642%" y="309" width="0.0794%" height="15" fill="rgb(247,221,28)"/><text x="33.9142%" y="319.50"></text></g><g><title>dyper_ops`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (563 samples, 5.59%)</title><rect x="33.5947%" y="325" width="5.5875%" height="15" fill="rgb(251,222,45)"/><text x="33.8447%" y="335.50">dyper_o..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (547 samples, 5.43%)</title><rect x="33.7535%" y="309" width="5.4287%" height="15" fill="rgb(217,162,53)"/><text x="34.0035%" y="319.50">libsyst..</text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (3 samples, 0.03%)</title><rect x="39.2715%" y="309" width="0.0298%" height="15" fill="rgb(229,93,14)"/><text x="39.5215%" y="319.50"></text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (589 samples, 5.85%)</title><rect x="33.4756%" y="357" width="5.8456%" height="15" fill="rgb(209,67,49)"/><text x="33.7256%" y="367.50">dyper_o..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_read_io (585 samples, 5.81%)</title><rect x="33.5153%" y="341" width="5.8059%" height="15" fill="rgb(213,87,29)"/><text x="33.7653%" y="351.50">dyper_o..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (14 samples, 0.14%)</title><rect x="39.1822%" y="325" width="0.1389%" height="15" fill="rgb(205,151,52)"/><text x="39.4322%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="39.3013%" y="309" width="0.0198%" height="15" fill="rgb(253,215,39)"/><text x="39.5513%" y="319.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (604 samples, 5.99%)</title><rect x="33.3565%" y="373" width="5.9944%" height="15" fill="rgb(221,220,41)"/><text x="33.6065%" y="383.50">dyper_op..</text></g><g><title>dyper_ops`hyper::proto::h1::io::ReadStrategy::record (3 samples, 0.03%)</title><rect x="39.3212%" y="357" width="0.0298%" height="15" fill="rgb(218,133,21)"/><text x="39.5712%" y="367.50"></text></g><g><title>dyper_ops`__rdl_alloc (4 samples, 0.04%)</title><rect x="39.8769%" y="341" width="0.0397%" height="15" fill="rgb(221,193,43)"/><text x="40.1269%" y="351.50"></text></g><g><title>dyper_ops`__rust_probestack (4 samples, 0.04%)</title><rect x="39.9365%" y="341" width="0.0397%" height="15" fill="rgb(240,128,52)"/><text x="40.1865%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.05%)</title><rect x="40.0754%" y="293" width="0.0496%" height="15" fill="rgb(253,114,12)"/><text x="40.3254%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.28%)</title><rect x="40.0357%" y="309" width="0.2779%" height="15" fill="rgb(215,223,47)"/><text x="40.2857%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.19%)</title><rect x="40.1250%" y="293" width="0.1886%" height="15" fill="rgb(248,225,23)"/><text x="40.3750%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.17%)</title><rect x="40.1449%" y="277" width="0.1687%" height="15" fill="rgb(250,108,0)"/><text x="40.3949%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="40.2640%" y="261" width="0.0496%" height="15" fill="rgb(228,208,7)"/><text x="40.5140%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (29 samples, 0.29%)</title><rect x="40.0357%" y="325" width="0.2878%" height="15" fill="rgb(244,45,10)"/><text x="40.2857%" y="335.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::copy_from_slice (37 samples, 0.37%)</title><rect x="39.9762%" y="341" width="0.3672%" height="15" fill="rgb(207,125,25)"/><text x="40.2262%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="40.3235%" y="325" width="0.0198%" height="15" fill="rgb(210,195,18)"/><text x="40.5735%" y="335.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::slice (3 samples, 0.03%)</title><rect x="40.3434%" y="341" width="0.0298%" height="15" fill="rgb(249,80,12)"/><text x="40.5934%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="40.6213%" y="261" width="0.0397%" height="15" fill="rgb(221,65,9)"/><text x="40.8713%" y="271.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::BytesMut::split_to (36 samples, 0.36%)</title><rect x="40.3732%" y="341" width="0.3573%" height="15" fill="rgb(235,49,36)"/><text x="40.6232%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (23 samples, 0.23%)</title><rect x="40.5022%" y="325" width="0.2283%" height="15" fill="rgb(225,32,20)"/><text x="40.7522%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.23%)</title><rect x="40.5022%" y="309" width="0.2283%" height="15" fill="rgb(215,141,46)"/><text x="40.7522%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.21%)</title><rect x="40.5220%" y="293" width="0.2084%" height="15" fill="rgb(250,160,47)"/><text x="40.7720%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.20%)</title><rect x="40.5320%" y="277" width="0.1985%" height="15" fill="rgb(216,222,40)"/><text x="40.7820%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="40.6610%" y="261" width="0.0695%" height="15" fill="rgb(234,217,39)"/><text x="40.9110%" y="271.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::shared_v_drop (3 samples, 0.03%)</title><rect x="40.7404%" y="341" width="0.0298%" height="15" fill="rgb(207,178,40)"/><text x="40.9904%" y="351.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve_one (3 samples, 0.03%)</title><rect x="40.8694%" y="325" width="0.0298%" height="15" fill="rgb(221,136,13)"/><text x="41.1194%" y="335.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::append (16 samples, 0.16%)</title><rect x="40.7701%" y="341" width="0.1588%" height="15" fill="rgb(249,199,10)"/><text x="41.0201%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="40.9091%" y="325" width="0.0198%" height="15" fill="rgb(249,222,13)"/><text x="41.1591%" y="335.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve_one (2 samples, 0.02%)</title><rect x="40.9389%" y="341" width="0.0198%" height="15" fill="rgb(244,185,38)"/><text x="41.1889%" y="351.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::from_bytes (18 samples, 0.18%)</title><rect x="40.9587%" y="341" width="0.1786%" height="15" fill="rgb(236,202,9)"/><text x="41.2087%" y="351.50"></text></g><g><title>dyper_ops`http::header::name::parse_hdr (9 samples, 0.09%)</title><rect x="41.0480%" y="325" width="0.0893%" height="15" fill="rgb(250,229,37)"/><text x="41.2980%" y="335.50"></text></g><g><title>dyper_ops`http::method::Method::from_bytes (7 samples, 0.07%)</title><rect x="41.1473%" y="341" width="0.0695%" height="15" fill="rgb(206,174,23)"/><text x="41.3973%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="41.2862%" y="325" width="0.0198%" height="15" fill="rgb(211,33,43)"/><text x="41.5362%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.22%)</title><rect x="41.3061%" y="325" width="0.2183%" height="15" fill="rgb(245,58,50)"/><text x="41.5561%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.14%)</title><rect x="41.3855%" y="309" width="0.1389%" height="15" fill="rgb(244,68,36)"/><text x="41.6355%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.12%)</title><rect x="41.4053%" y="293" width="0.1191%" height="15" fill="rgb(232,229,15)"/><text x="41.6553%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="41.7428%" y="293" width="0.0397%" height="15" fill="rgb(254,30,23)"/><text x="41.9928%" y="303.50"></text></g><g><title>dyper_ops`http::uri::Uri::from_shared (63 samples, 0.63%)</title><rect x="41.2168%" y="341" width="0.6252%" height="15" fill="rgb(235,160,14)"/><text x="41.4668%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.32%)</title><rect x="41.5244%" y="325" width="0.3176%" height="15" fill="rgb(212,155,44)"/><text x="41.7744%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.25%)</title><rect x="41.5939%" y="309" width="0.2481%" height="15" fill="rgb(226,2,50)"/><text x="41.8439%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.06%)</title><rect x="41.7825%" y="293" width="0.0595%" height="15" fill="rgb(234,177,6)"/><text x="42.0325%" y="303.50"></text></g><g><title>dyper_ops`httparse::simd::runtime::match_header_value_vectored (6 samples, 0.06%)</title><rect x="42.0802%" y="309" width="0.0595%" height="15" fill="rgb(217,24,9)"/><text x="42.3302%" y="319.50"></text></g><g><title>dyper_ops`httparse::parse_headers_iter (28 samples, 0.28%)</title><rect x="41.9015%" y="325" width="0.2779%" height="15" fill="rgb(220,13,46)"/><text x="42.1515%" y="335.50"></text></g><g><title>dyper_ops`httparse::simd::sse42::match_header_value_char_16_sse (4 samples, 0.04%)</title><rect x="42.1397%" y="309" width="0.0397%" height="15" fill="rgb(239,221,27)"/><text x="42.3897%" y="319.50"></text></g><g><title>dyper_ops`httparse::parse_version (2 samples, 0.02%)</title><rect x="42.1794%" y="325" width="0.0198%" height="15" fill="rgb(222,198,25)"/><text x="42.4294%" y="335.50"></text></g><g><title>dyper_ops`httparse::Request::parse (52 samples, 0.52%)</title><rect x="41.8420%" y="341" width="0.5161%" height="15" fill="rgb(211,99,13)"/><text x="42.0920%" y="351.50"></text></g><g><title>dyper_ops`httparse::simd::runtime::match_uri_vectored (14 samples, 0.14%)</title><rect x="42.2191%" y="325" width="0.1389%" height="15" fill="rgb(232,111,31)"/><text x="42.4691%" y="335.50"></text></g><g><title>dyper_ops`httparse::simd::avx2::match_url_char_32_avx (6 samples, 0.06%)</title><rect x="42.2985%" y="309" width="0.0595%" height="15" fill="rgb(245,82,37)"/><text x="42.5485%" y="319.50"></text></g><g><title>dyper_ops`httparse::simd::runtime::match_uri_vectored (6 samples, 0.06%)</title><rect x="42.3581%" y="341" width="0.0595%" height="15" fill="rgb(227,149,46)"/><text x="42.6081%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="42.4176%" y="341" width="0.0298%" height="15" fill="rgb(218,36,50)"/><text x="42.6676%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.06%)</title><rect x="42.4474%" y="341" width="0.0595%" height="15" fill="rgb(226,80,48)"/><text x="42.6974%" y="351.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (321 samples, 3.19%)</title><rect x="39.4204%" y="357" width="3.1858%" height="15" fill="rgb(238,224,15)"/><text x="39.6704%" y="367.50">dyp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.09%)</title><rect x="42.5169%" y="341" width="0.0893%" height="15" fill="rgb(241,136,10)"/><text x="42.7669%" y="351.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::BytesMut::split_to (4 samples, 0.04%)</title><rect x="42.6360%" y="357" width="0.0397%" height="15" fill="rgb(208,32,45)"/><text x="42.8860%" y="367.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::append (3 samples, 0.03%)</title><rect x="42.6757%" y="357" width="0.0298%" height="15" fill="rgb(207,135,9)"/><text x="42.9257%" y="367.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::from_bytes (4 samples, 0.04%)</title><rect x="42.7054%" y="357" width="0.0397%" height="15" fill="rgb(206,86,44)"/><text x="42.9554%" y="367.50"></text></g><g><title>dyper_ops`http::uri::Uri::from_shared (6 samples, 0.06%)</title><rect x="42.7451%" y="357" width="0.0595%" height="15" fill="rgb(245,177,15)"/><text x="42.9951%" y="367.50"></text></g><g><title>dyper_ops`tracing::span::Span::enter (2 samples, 0.02%)</title><rect x="42.8146%" y="357" width="0.0198%" height="15" fill="rgb(206,64,50)"/><text x="43.0646%" y="367.50"></text></g><g><title>dyper_ops`hyper::proto::h1::role::parse_headers (353 samples, 3.50%)</title><rect x="39.3509%" y="373" width="3.5034%" height="15" fill="rgb(234,36,40)"/><text x="39.6009%" y="383.50">dyp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="42.8345%" y="357" width="0.0198%" height="15" fill="rgb(213,64,8)"/><text x="43.0845%" y="367.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (991 samples, 9.84%)</title><rect x="33.1778%" y="389" width="9.8353%" height="15" fill="rgb(210,75,36)"/><text x="33.4278%" y="399.50">dyper_ops`hype..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.16%)</title><rect x="42.8543%" y="373" width="0.1588%" height="15" fill="rgb(229,88,21)"/><text x="43.1043%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::role::parse_headers (3 samples, 0.03%)</title><rect x="43.0131%" y="389" width="0.0298%" height="15" fill="rgb(252,204,47)"/><text x="43.2631%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1,015 samples, 10.07%)</title><rect x="33.1084%" y="405" width="10.0734%" height="15" fill="rgb(208,77,27)"/><text x="33.3584%" y="415.50">dyper_ops`hyper..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.14%)</title><rect x="43.0429%" y="389" width="0.1389%" height="15" fill="rgb(221,76,26)"/><text x="43.2929%" y="399.50"></text></g><g><title>dyper_ops`bytes::buf::uninit_slice::UninitSlice::from_raw_parts_mut (2 samples, 0.02%)</title><rect x="43.3307%" y="373" width="0.0198%" height="15" fill="rgb(225,139,18)"/><text x="43.5807%" y="383.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::BytesMut::reserve_inner (2 samples, 0.02%)</title><rect x="43.3505%" y="373" width="0.0198%" height="15" fill="rgb(230,137,11)"/><text x="43.6005%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`_pthread_exit_if_canceled (3 samples, 0.03%)</title><rect x="43.6780%" y="293" width="0.0298%" height="15" fill="rgb(212,28,1)"/><text x="43.9280%" y="303.50"></text></g><g><title>dyper_ops`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 0.10%)</title><rect x="43.6582%" y="309" width="0.0992%" height="15" fill="rgb(248,164,17)"/><text x="43.9082%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (4 samples, 0.04%)</title><rect x="43.7177%" y="293" width="0.0397%" height="15" fill="rgb(222,171,42)"/><text x="43.9677%" y="303.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (2 samples, 0.02%)</title><rect x="43.7674%" y="309" width="0.0198%" height="15" fill="rgb(243,84,45)"/><text x="44.0174%" y="319.50"></text></g><g><title>libsystem_c.dylib`recv (3 samples, 0.03%)</title><rect x="43.7872%" y="309" width="0.0298%" height="15" fill="rgb(252,49,23)"/><text x="44.0372%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__error (3 samples, 0.03%)</title><rect x="43.8170%" y="309" width="0.0298%" height="15" fill="rgb(215,19,7)"/><text x="44.0670%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (310 samples, 3.08%)</title><rect x="43.8468%" y="309" width="3.0766%" height="15" fill="rgb(238,81,41)"/><text x="44.0968%" y="319.50">lib..</text></g><g><title>dyper_ops`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (332 samples, 3.29%)</title><rect x="43.6582%" y="325" width="3.2950%" height="15" fill="rgb(210,199,37)"/><text x="43.9082%" y="335.50">dyp..</text></g><g><title>libsystem_kernel.dylib`cerror (3 samples, 0.03%)</title><rect x="46.9234%" y="309" width="0.0298%" height="15" fill="rgb(244,192,49)"/><text x="47.1734%" y="319.50"></text></g><g><title>dyper_ops`std::io::error::Error::kind (3 samples, 0.03%)</title><rect x="46.9532%" y="325" width="0.0298%" height="15" fill="rgb(226,211,11)"/><text x="47.2032%" y="335.50"></text></g><g><title>dyper_ops`std::sys::unix::decode_error_kind (3 samples, 0.03%)</title><rect x="46.9829%" y="325" width="0.0298%" height="15" fill="rgb(236,162,54)"/><text x="47.2329%" y="335.50"></text></g><g><title>dyper_ops`tokio::coop::CURRENT::__getit (4 samples, 0.04%)</title><rect x="47.0921%" y="309" width="0.0397%" height="15" fill="rgb(220,229,9)"/><text x="47.3421%" y="319.50"></text></g><g><title>dyper_ops`futures_task::waker::clone_arc_raw (3 samples, 0.03%)</title><rect x="47.3303%" y="293" width="0.0298%" height="15" fill="rgb(250,87,22)"/><text x="47.5803%" y="303.50"></text></g><g><title>dyper_ops`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (26 samples, 0.26%)</title><rect x="47.1318%" y="309" width="0.2580%" height="15" fill="rgb(239,43,17)"/><text x="47.3818%" y="319.50"></text></g><g><title>dyper_ops`futures_task::waker::drop_arc_raw (3 samples, 0.03%)</title><rect x="47.3601%" y="293" width="0.0298%" height="15" fill="rgb(231,177,25)"/><text x="47.6101%" y="303.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_ready (44 samples, 0.44%)</title><rect x="47.0127%" y="325" width="0.4367%" height="15" fill="rgb(219,179,1)"/><text x="47.2627%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="47.3898%" y="309" width="0.0595%" height="15" fill="rgb(238,219,53)"/><text x="47.6398%" y="319.50"></text></g><g><title>dyper_ops`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (397 samples, 3.94%)</title><rect x="43.5193%" y="357" width="3.9401%" height="15" fill="rgb(232,167,36)"/><text x="43.7693%" y="367.50">dype..</text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_read_io (392 samples, 3.89%)</title><rect x="43.5689%" y="341" width="3.8904%" height="15" fill="rgb(244,19,51)"/><text x="43.8189%" y="351.50">dype..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="47.5983%" y="325" width="0.0198%" height="15" fill="rgb(224,6,22)"/><text x="47.8483%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (25 samples, 0.25%)</title><rect x="47.5883%" y="341" width="0.2481%" height="15" fill="rgb(224,145,5)"/><text x="47.8383%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (22 samples, 0.22%)</title><rect x="47.6181%" y="325" width="0.2183%" height="15" fill="rgb(234,130,49)"/><text x="47.8681%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.20%)</title><rect x="47.6380%" y="309" width="0.1985%" height="15" fill="rgb(254,6,2)"/><text x="47.8880%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (19 samples, 0.19%)</title><rect x="47.6479%" y="293" width="0.1886%" height="15" fill="rgb(208,96,46)"/><text x="47.8979%" y="303.50"></text></g><g><title>dyper_ops`bytes::bytes_mut::BytesMut::reserve_inner (37 samples, 0.37%)</title><rect x="47.4792%" y="357" width="0.3672%" height="15" fill="rgb(239,3,39)"/><text x="47.7292%" y="367.50"></text></g><g><title>dyper_ops`tokio::io::driver::registration::Registration::poll_read_io (2 samples, 0.02%)</title><rect x="47.8464%" y="357" width="0.0198%" height="15" fill="rgb(233,210,1)"/><text x="48.0964%" y="367.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (454 samples, 4.51%)</title><rect x="43.3704%" y="373" width="4.5058%" height="15" fill="rgb(244,137,37)"/><text x="43.6204%" y="383.50">dyper..</text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (464 samples, 4.61%)</title><rect x="43.2811%" y="389" width="4.6050%" height="15" fill="rgb(240,136,2)"/><text x="43.5311%" y="399.50">dyper..</text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (477 samples, 4.73%)</title><rect x="43.1818%" y="405" width="4.7340%" height="15" fill="rgb(239,18,37)"/><text x="43.4318%" y="415.50">dyper_..</text></g><g><title>dyper_ops`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (3 samples, 0.03%)</title><rect x="47.8861%" y="389" width="0.0298%" height="15" fill="rgb(218,185,22)"/><text x="48.1361%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (5 samples, 0.05%)</title><rect x="47.9158%" y="405" width="0.0496%" height="15" fill="rgb(225,218,4)"/><text x="48.1658%" y="415.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.08%)</title><rect x="48.6900%" y="341" width="0.0794%" height="15" fill="rgb(230,182,32)"/><text x="48.9400%" y="351.50"></text></g><g><title>dyper_ops`hyper::common::date::extend (5 samples, 0.05%)</title><rect x="48.7694%" y="341" width="0.0496%" height="15" fill="rgb(242,56,43)"/><text x="49.0194%" y="351.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="48.7991%" y="325" width="0.0198%" height="15" fill="rgb(233,99,24)"/><text x="49.0491%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.07%)</title><rect x="48.8487%" y="325" width="0.0695%" height="15" fill="rgb(234,209,42)"/><text x="49.0987%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.07%)</title><rect x="48.8487%" y="309" width="0.0695%" height="15" fill="rgb(227,7,12)"/><text x="49.0987%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.11%)</title><rect x="48.8190%" y="341" width="0.1092%" height="15" fill="rgb(245,203,43)"/><text x="49.0690%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.08%)</title><rect x="49.2457%" y="309" width="0.0794%" height="15" fill="rgb(238,205,33)"/><text x="49.4957%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.46%)</title><rect x="48.9281%" y="341" width="0.4565%" height="15" fill="rgb(231,56,7)"/><text x="49.1781%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.37%)</title><rect x="49.0175%" y="325" width="0.3672%" height="15" fill="rgb(244,186,29)"/><text x="49.2675%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.06%)</title><rect x="49.3251%" y="309" width="0.0595%" height="15" fill="rgb(234,111,31)"/><text x="49.5751%" y="319.50"></text></g><g><title>dyper_ops`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (125 samples, 1.24%)</title><rect x="48.3029%" y="357" width="1.2406%" height="15" fill="rgb(241,149,10)"/><text x="48.5529%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.14%)</title><rect x="49.4045%" y="341" width="0.1389%" height="15" fill="rgb(249,206,44)"/><text x="49.6545%" y="351.50"></text></g><g><title>dyper_ops`__rdl_dealloc (2 samples, 0.02%)</title><rect x="49.5435%" y="357" width="0.0198%" height="15" fill="rgb(251,153,30)"/><text x="49.7935%" y="367.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="49.5633%" y="357" width="0.0397%" height="15" fill="rgb(239,152,38)"/><text x="49.8133%" y="367.50"></text></g><g><title>dyper_ops`bytes::bytes::promotable_even_drop (2 samples, 0.02%)</title><rect x="49.6030%" y="357" width="0.0198%" height="15" fill="rgb(249,139,47)"/><text x="49.8530%" y="367.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (160 samples, 1.59%)</title><rect x="48.0548%" y="389" width="1.5879%" height="15" fill="rgb(244,64,35)"/><text x="48.3048%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::role::encode_headers (145 samples, 1.44%)</title><rect x="48.2037%" y="373" width="1.4391%" height="15" fill="rgb(216,46,15)"/><text x="48.4537%" y="383.50"></text></g><g><title>dyper_ops`hyper::proto::h1::encode::Encoder::danger_full_buf (3 samples, 0.03%)</title><rect x="49.6526%" y="389" width="0.0298%" height="15" fill="rgb(250,74,19)"/><text x="49.9026%" y="399.50"></text></g><g><title>dyper_ops`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (2 samples, 0.02%)</title><rect x="49.6626%" y="373" width="0.0198%" height="15" fill="rgb(249,42,33)"/><text x="49.9126%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="49.6626%" y="357" width="0.0198%" height="15" fill="rgb(242,149,17)"/><text x="49.9126%" y="367.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (174 samples, 1.73%)</title><rect x="47.9655%" y="405" width="1.7269%" height="15" fill="rgb(244,29,21)"/><text x="48.2155%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::conn::State::is_read_closed (6 samples, 0.06%)</title><rect x="49.7023%" y="405" width="0.0595%" height="15" fill="rgb(220,130,37)"/><text x="49.9523%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::encode::Encoder::danger_full_buf (2 samples, 0.02%)</title><rect x="49.7618%" y="405" width="0.0198%" height="15" fill="rgb(211,67,2)"/><text x="50.0118%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.03%)</title><rect x="49.8015%" y="405" width="0.0298%" height="15" fill="rgb(235,68,52)"/><text x="50.0515%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="49.8313%" y="405" width="0.0298%" height="15" fill="rgb(246,142,3)"/><text x="50.0813%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="49.8412%" y="389" width="0.0198%" height="15" fill="rgb(241,25,7)"/><text x="50.0912%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="49.8412%" y="373" width="0.0198%" height="15" fill="rgb(242,119,39)"/><text x="50.0912%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.09%)</title><rect x="50.0298%" y="373" width="0.0893%" height="15" fill="rgb(241,98,45)"/><text x="50.2798%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.32%)</title><rect x="49.8611%" y="405" width="0.3176%" height="15" fill="rgb(254,28,30)"/><text x="50.1111%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.23%)</title><rect x="49.9504%" y="389" width="0.2283%" height="15" fill="rgb(241,142,54)"/><text x="50.2004%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.06%)</title><rect x="50.1191%" y="373" width="0.0595%" height="15" fill="rgb(222,85,15)"/><text x="50.3691%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.29%)</title><rect x="50.1786%" y="405" width="0.2878%" height="15" fill="rgb(210,85,47)"/><text x="50.4286%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (10 samples, 0.10%)</title><rect x="50.4665%" y="405" width="0.0992%" height="15" fill="rgb(224,206,25)"/><text x="50.7165%" y="415.50"></text></g><g><title>dyper_ops`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3,716 samples, 36.88%)</title><rect x="13.7058%" y="421" width="36.8797%" height="15" fill="rgb(243,201,19)"/><text x="13.9558%" y="431.50">dyper_ops`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="50.5657%" y="405" width="0.0198%" height="15" fill="rgb(236,59,4)"/><text x="50.8157%" y="415.50"></text></g><g><title>dyper_ops`futures_util::future::future::FutureExt::poll_unpin (3,783 samples, 37.54%)</title><rect x="13.1798%" y="437" width="37.5447%" height="15" fill="rgb(254,179,45)"/><text x="13.4298%" y="447.50">dyper_ops`futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.14%)</title><rect x="50.5855%" y="421" width="0.1389%" height="15" fill="rgb(226,14,10)"/><text x="50.8355%" y="431.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::get (4 samples, 0.04%)</title><rect x="50.7245%" y="437" width="0.0397%" height="15" fill="rgb(244,27,41)"/><text x="50.9745%" y="447.50"></text></g><g><title>dyper_ops`http::header::value::HeaderValue::to_str (2 samples, 0.02%)</title><rect x="50.7642%" y="437" width="0.0198%" height="15" fill="rgb(235,35,32)"/><text x="51.0142%" y="447.50"></text></g><g><title>dyper_ops`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (2 samples, 0.02%)</title><rect x="50.7840%" y="437" width="0.0198%" height="15" fill="rgb(218,68,31)"/><text x="51.0340%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="50.8436%" y="421" width="0.0198%" height="15" fill="rgb(207,120,37)"/><text x="51.0936%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="50.8436%" y="405" width="0.0198%" height="15" fill="rgb(227,98,0)"/><text x="51.0936%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.07%)</title><rect x="50.8039%" y="437" width="0.0695%" height="15" fill="rgb(207,7,3)"/><text x="51.0539%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.15%)</title><rect x="50.8734%" y="437" width="0.1489%" height="15" fill="rgb(206,98,19)"/><text x="51.1234%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.09%)</title><rect x="50.9329%" y="421" width="0.0893%" height="15" fill="rgb(217,5,26)"/><text x="51.1829%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.05%)</title><rect x="50.9726%" y="405" width="0.0496%" height="15" fill="rgb(235,190,38)"/><text x="51.2226%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.03%)</title><rect x="51.3200%" y="373" width="0.0298%" height="15" fill="rgb(247,86,24)"/><text x="51.5700%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.50%)</title><rect x="51.0917%" y="405" width="0.4962%" height="15" fill="rgb(205,101,16)"/><text x="51.3417%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (47 samples, 0.47%)</title><rect x="51.1215%" y="389" width="0.4665%" height="15" fill="rgb(246,168,33)"/><text x="51.3715%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (24 samples, 0.24%)</title><rect x="51.3497%" y="373" width="0.2382%" height="15" fill="rgb(231,114,1)"/><text x="51.5997%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.10%)</title><rect x="51.4887%" y="357" width="0.0992%" height="15" fill="rgb(207,184,53)"/><text x="51.7387%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (58 samples, 0.58%)</title><rect x="51.0222%" y="437" width="0.5756%" height="15" fill="rgb(224,95,51)"/><text x="51.2722%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (54 samples, 0.54%)</title><rect x="51.0619%" y="421" width="0.5359%" height="15" fill="rgb(212,188,45)"/><text x="51.3119%" y="431.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,434 samples, 44.01%)</title><rect x="7.6022%" y="453" width="44.0056%" height="15" fill="rgb(223,154,38)"/><text x="7.8522%" y="463.50">dyper_ops`&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::fut..</text></g><g><title>dyper_ops`core::fmt::write (2 samples, 0.02%)</title><rect x="51.6276%" y="453" width="0.0198%" height="15" fill="rgb(251,22,52)"/><text x="51.8776%" y="463.50"></text></g><g><title>dyper_ops`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.13%)</title><rect x="51.6673%" y="453" width="0.1290%" height="15" fill="rgb(229,209,22)"/><text x="51.9173%" y="463.50"></text></g><g><title>dyper_ops`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="51.7765%" y="437" width="0.0198%" height="15" fill="rgb(234,138,34)"/><text x="52.0265%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="51.7963%" y="453" width="0.0298%" height="15" fill="rgb(212,95,11)"/><text x="52.0463%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="51.8261%" y="453" width="0.0198%" height="15" fill="rgb(240,179,47)"/><text x="52.0761%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.04%)</title><rect x="51.8460%" y="453" width="0.0397%" height="15" fill="rgb(240,163,11)"/><text x="52.0960%" y="463.50"></text></g><g><title>dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,508 samples, 44.74%)</title><rect x="7.2350%" y="469" width="44.7400%" height="15" fill="rgb(236,37,12)"/><text x="7.4850%" y="479.50">dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (9 samples, 0.09%)</title><rect x="51.8857%" y="453" width="0.0893%" height="15" fill="rgb(232,164,16)"/><text x="52.1357%" y="463.50"></text></g><g><title>dyper_ops`__rdl_alloc (2 samples, 0.02%)</title><rect x="51.9750%" y="469" width="0.0198%" height="15" fill="rgb(244,205,15)"/><text x="52.2250%" y="479.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,573 samples, 45.39%)</title><rect x="6.6395%" y="485" width="45.3851%" height="15" fill="rgb(223,117,47)"/><text x="6.8895%" y="495.50">dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="52.0048%" y="469" width="0.0198%" height="15" fill="rgb(244,107,35)"/><text x="52.2548%" y="479.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,585 samples, 45.50%)</title><rect x="6.5304%" y="501" width="45.5042%" height="15" fill="rgb(205,140,8)"/><text x="6.7804%" y="511.50">dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future..</text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.07%)</title><rect x="52.0345%" y="501" width="0.0695%" height="15" fill="rgb(228,84,46)"/><text x="52.2845%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.04%)</title><rect x="52.0643%" y="485" width="0.0397%" height="15" fill="rgb(254,188,9)"/><text x="52.3143%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.04%)</title><rect x="52.0643%" y="469" width="0.0397%" height="15" fill="rgb(206,112,54)"/><text x="52.3143%" y="479.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,627 samples, 45.92%)</title><rect x="6.3716%" y="517" width="45.9210%" height="15" fill="rgb(216,84,49)"/><text x="6.6216%" y="527.50">dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::f..</text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.19%)</title><rect x="52.1040%" y="501" width="0.1886%" height="15" fill="rgb(214,194,35)"/><text x="52.3540%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.16%)</title><rect x="52.1338%" y="485" width="0.1588%" height="15" fill="rgb(249,28,3)"/><text x="52.3838%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.10%)</title><rect x="52.1933%" y="469" width="0.0992%" height="15" fill="rgb(222,56,52)"/><text x="52.4433%" y="479.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="52.2926%" y="517" width="0.0198%" height="15" fill="rgb(245,217,50)"/><text x="52.5426%" y="527.50"></text></g><g><title>dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,642 samples, 46.07%)</title><rect x="6.2624%" y="533" width="46.0699%" height="15" fill="rgb(213,201,24)"/><text x="6.5124%" y="543.50">dyper_ops`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future:..</text></g><g><title>dyper_ops`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="52.3323%" y="533" width="0.0298%" height="15" fill="rgb(248,116,28)"/><text x="52.5823%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="52.4613%" y="517" width="0.0298%" height="15" fill="rgb(219,72,43)"/><text x="52.7113%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.10%)</title><rect x="52.5605%" y="485" width="0.0992%" height="15" fill="rgb(209,138,14)"/><text x="52.8105%" y="495.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (33 samples, 0.33%)</title><rect x="52.3620%" y="533" width="0.3275%" height="15" fill="rgb(222,18,33)"/><text x="52.6120%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.20%)</title><rect x="52.4911%" y="517" width="0.1985%" height="15" fill="rgb(213,199,7)"/><text x="52.7411%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.19%)</title><rect x="52.5010%" y="501" width="0.1886%" height="15" fill="rgb(250,110,10)"/><text x="52.7510%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.03%)</title><rect x="52.6598%" y="485" width="0.0298%" height="15" fill="rgb(248,123,6)"/><text x="52.9098%" y="495.50"></text></g><g><title>dyper_ops`tokio::util::wake::clone_arc_raw (2 samples, 0.02%)</title><rect x="52.8682%" y="517" width="0.0198%" height="15" fill="rgb(206,91,31)"/><text x="53.1182%" y="527.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::register (23 samples, 0.23%)</title><rect x="52.6896%" y="533" width="0.2283%" height="15" fill="rgb(211,154,13)"/><text x="52.9396%" y="543.50"></text></g><g><title>dyper_ops`tokio::util::wake::drop_arc_raw (3 samples, 0.03%)</title><rect x="52.8881%" y="517" width="0.0298%" height="15" fill="rgb(225,148,7)"/><text x="53.1381%" y="527.50"></text></g><g><title>dyper_ops`futures_util::stream::stream::StreamExt::poll_next_unpin (4,739 samples, 47.03%)</title><rect x="5.8952%" y="549" width="47.0326%" height="15" fill="rgb(220,160,43)"/><text x="6.1452%" y="559.50">dyper_ops`futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>dyper_ops`v8::internal::Context::global_proxy (2 samples, 0.02%)</title><rect x="52.9277%" y="517" width="0.0198%" height="15" fill="rgb(213,52,39)"/><text x="53.1777%" y="527.50"></text></g><g><title>dyper_ops`v8::Context::Global (4 samples, 0.04%)</title><rect x="52.9277%" y="533" width="0.0397%" height="15" fill="rgb(243,137,7)"/><text x="53.1777%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::PrototypeIterator::Advance (2 samples, 0.02%)</title><rect x="52.9476%" y="517" width="0.0198%" height="15" fill="rgb(230,79,13)"/><text x="53.1976%" y="527.50"></text></g><g><title>dyper_ops`rusty_v8::context::_&lt;impl rusty_v8::data::Context&gt;::global (7 samples, 0.07%)</title><rect x="52.9277%" y="549" width="0.0695%" height="15" fill="rgb(247,105,23)"/><text x="53.1777%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::Context::global_proxy (3 samples, 0.03%)</title><rect x="52.9674%" y="533" width="0.0298%" height="15" fill="rgb(223,179,41)"/><text x="53.2174%" y="543.50"></text></g><g><title>0x41e00087100 (2 samples, 0.02%)</title><rect x="53.3148%" y="469" width="0.0198%" height="15" fill="rgb(218,9,34)"/><text x="53.5648%" y="479.50"></text></g><g><title>dyper_ops`Builtins_CallFunction_ReceiverIsAny (6 samples, 0.06%)</title><rect x="53.3446%" y="469" width="0.0595%" height="15" fill="rgb(222,106,8)"/><text x="53.5946%" y="479.50"></text></g><g><title>dyper_ops`Builtins_Call_ReceiverIsAny (5 samples, 0.05%)</title><rect x="53.4041%" y="469" width="0.0496%" height="15" fill="rgb(211,220,0)"/><text x="53.6541%" y="479.50"></text></g><g><title>0x41e0008735b (4 samples, 0.04%)</title><rect x="53.4934%" y="453" width="0.0397%" height="15" fill="rgb(229,52,16)"/><text x="53.7434%" y="463.50"></text></g><g><title>dyper_ops`Builtins_FindOrderedHashMapEntry (4 samples, 0.04%)</title><rect x="53.4934%" y="437" width="0.0397%" height="15" fill="rgb(212,155,18)"/><text x="53.7434%" y="447.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::OrderedHashMap&gt; v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Rehash&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="53.6026%" y="389" width="0.0298%" height="15" fill="rgb(242,21,14)"/><text x="53.8526%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (5 samples, 0.05%)</title><rect x="53.7019%" y="357" width="0.0496%" height="15" fill="rgb(222,19,48)"/><text x="53.9519%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::OrderedHashMap&gt; v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Rehash&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (12 samples, 0.12%)</title><rect x="53.6423%" y="373" width="0.1191%" height="15" fill="rgb(232,45,27)"/><text x="53.8923%" y="383.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (20 samples, 0.20%)</title><rect x="53.5828%" y="421" width="0.1985%" height="15" fill="rgb(249,103,42)"/><text x="53.8328%" y="431.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_MapShrink (19 samples, 0.19%)</title><rect x="53.5927%" y="405" width="0.1886%" height="15" fill="rgb(246,81,33)"/><text x="53.8427%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Shrink(v8::internal::Isolate*, v8::internal::Handle (15 samples, 0.15%)</title><rect x="53.6324%" y="389" width="0.1489%" height="15" fill="rgb(252,33,42)"/><text x="53.8824%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Object::GetSimpleHash (2 samples, 0.02%)</title><rect x="53.7614%" y="373" width="0.0198%" height="15" fill="rgb(209,212,41)"/><text x="54.0114%" y="383.50"></text></g><g><title>0x41e000873c6 (26 samples, 0.26%)</title><rect x="53.5431%" y="453" width="0.2580%" height="15" fill="rgb(207,154,6)"/><text x="53.7931%" y="463.50"></text></g><g><title>dyper_ops`Builtins_MapPrototypeDelete (26 samples, 0.26%)</title><rect x="53.5431%" y="437" width="0.2580%" height="15" fill="rgb(223,64,47)"/><text x="53.7931%" y="447.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_MapShrink (2 samples, 0.02%)</title><rect x="53.7813%" y="421" width="0.0198%" height="15" fill="rgb(211,161,38)"/><text x="54.0313%" y="431.50"></text></g><g><title>0x41e00087422 (4 samples, 0.04%)</title><rect x="53.8110%" y="453" width="0.0397%" height="15" fill="rgb(219,138,40)"/><text x="54.0610%" y="463.50"></text></g><g><title>dyper_ops`Builtins_GetProperty (2 samples, 0.02%)</title><rect x="53.8706%" y="421" width="0.0198%" height="15" fill="rgb(241,228,46)"/><text x="54.1206%" y="431.50"></text></g><g><title>dyper_ops`Builtins_EnqueueMicrotask (4 samples, 0.04%)</title><rect x="53.9004%" y="405" width="0.0397%" height="15" fill="rgb(223,209,38)"/><text x="54.1504%" y="415.50"></text></g><g><title>dyper_ops`Builtins_FulfillPromise (6 samples, 0.06%)</title><rect x="53.9401%" y="405" width="0.0595%" height="15" fill="rgb(236,164,45)"/><text x="54.1901%" y="415.50"></text></g><g><title>dyper_ops`Builtins_PromiseCapabilityDefaultResolve (25 samples, 0.25%)</title><rect x="53.8706%" y="437" width="0.2481%" height="15" fill="rgb(231,15,5)"/><text x="54.1206%" y="447.50"></text></g><g><title>dyper_ops`Builtins_ResolvePromise (23 samples, 0.23%)</title><rect x="53.8904%" y="421" width="0.2283%" height="15" fill="rgb(252,35,15)"/><text x="54.1404%" y="431.50"></text></g><g><title>dyper_ops`Builtins_GetProperty (12 samples, 0.12%)</title><rect x="53.9996%" y="405" width="0.1191%" height="15" fill="rgb(248,181,18)"/><text x="54.2496%" y="415.50"></text></g><g><title>0x41e000874b1 (28 samples, 0.28%)</title><rect x="53.8706%" y="453" width="0.2779%" height="15" fill="rgb(233,39,42)"/><text x="54.1206%" y="463.50"></text></g><g><title>dyper_ops`Builtins_ResolvePromise (3 samples, 0.03%)</title><rect x="54.1187%" y="437" width="0.0298%" height="15" fill="rgb(238,110,33)"/><text x="54.3687%" y="447.50"></text></g><g><title>dyper_ops`Builtins_Call_ReceiverIsNotNullOrUndefined (6 samples, 0.06%)</title><rect x="54.1584%" y="453" width="0.0595%" height="15" fill="rgb(233,195,10)"/><text x="54.4084%" y="463.50"></text></g><g><title>dyper_ops`Builtins_PromiseCapabilityDefaultResolve (2 samples, 0.02%)</title><rect x="54.2576%" y="421" width="0.0198%" height="15" fill="rgb(254,105,3)"/><text x="54.5076%" y="431.50"></text></g><g><title>dyper_ops`Builtins_ResolvePromise (2 samples, 0.02%)</title><rect x="54.2576%" y="405" width="0.0198%" height="15" fill="rgb(221,225,9)"/><text x="54.5076%" y="415.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (7 samples, 0.07%)</title><rect x="54.2179%" y="453" width="0.0695%" height="15" fill="rgb(224,227,45)"/><text x="54.4679%" y="463.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (5 samples, 0.05%)</title><rect x="54.2378%" y="437" width="0.0496%" height="15" fill="rgb(229,198,43)"/><text x="54.4878%" y="447.50"></text></g><g><title>dyper_ops`Builtins_JSEntry (99 samples, 0.98%)</title><rect x="53.3148%" y="485" width="0.9825%" height="15" fill="rgb(206,209,35)"/><text x="53.5648%" y="495.50"></text></g><g><title>dyper_ops`Builtins_JSEntryTrampoline (85 samples, 0.84%)</title><rect x="53.4538%" y="469" width="0.8436%" height="15" fill="rgb(245,195,53)"/><text x="53.7038%" y="479.50"></text></g><g><title>dyper_ops`Builtins_JSEntryTrampoline (2 samples, 0.02%)</title><rect x="54.2973%" y="485" width="0.0198%" height="15" fill="rgb(240,92,26)"/><text x="54.5473%" y="495.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (125 samples, 1.24%)</title><rect x="53.1362%" y="501" width="1.2406%" height="15" fill="rgb(207,40,23)"/><text x="53.3862%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::Builtins::builtin_handle (2 samples, 0.02%)</title><rect x="54.3767%" y="501" width="0.0198%" height="15" fill="rgb(223,111,35)"/><text x="54.6267%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::Heap::builtin_address (3 samples, 0.03%)</title><rect x="54.3966%" y="501" width="0.0298%" height="15" fill="rgb(229,147,28)"/><text x="54.6466%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (137 samples, 1.36%)</title><rect x="53.0965%" y="517" width="1.3597%" height="15" fill="rgb(211,29,28)"/><text x="53.3465%" y="527.50"></text></g><g><title>dyper_ops`v8::Isolate::SuppressMicrotaskExecutionScope::~SuppressMicrotaskExecutionScope (3 samples, 0.03%)</title><rect x="54.4760%" y="485" width="0.0298%" height="15" fill="rgb(228,72,33)"/><text x="54.7260%" y="495.50"></text></g><g><title>dyper_ops`v8::TryCatch::SetCaptureMessage (3 samples, 0.03%)</title><rect x="54.5653%" y="453" width="0.0298%" height="15" fill="rgb(205,214,31)"/><text x="54.8153%" y="463.50"></text></g><g><title>dyper_ops`Builtins_PromiseFulfillReactionJob (3 samples, 0.03%)</title><rect x="54.6844%" y="405" width="0.0298%" height="15" fill="rgb(224,111,15)"/><text x="54.9344%" y="415.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitResolveClosure (2 samples, 0.02%)</title><rect x="54.9722%" y="389" width="0.0198%" height="15" fill="rgb(253,21,26)"/><text x="55.2222%" y="399.50"></text></g><g><title>dyper_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (6 samples, 0.06%)</title><rect x="54.9921%" y="389" width="0.0595%" height="15" fill="rgb(245,139,43)"/><text x="55.2421%" y="399.50"></text></g><g><title>dyper_ops`Builtins_Call_ReceiverIsNullOrUndefined (2 samples, 0.02%)</title><rect x="55.0516%" y="389" width="0.0198%" height="15" fill="rgb(252,170,7)"/><text x="55.3016%" y="399.50"></text></g><g><title>dyper_ops`Builtins_EnqueueMicrotask (2 samples, 0.02%)</title><rect x="55.1608%" y="325" width="0.0198%" height="15" fill="rgb(231,118,14)"/><text x="55.4108%" y="335.50"></text></g><g><title>dyper_ops`Builtins_FulfillPromise (5 samples, 0.05%)</title><rect x="55.1806%" y="325" width="0.0496%" height="15" fill="rgb(238,83,0)"/><text x="55.4306%" y="335.50"></text></g><g><title>0x41e00084153 (14 samples, 0.14%)</title><rect x="55.1608%" y="357" width="0.1389%" height="15" fill="rgb(221,39,39)"/><text x="55.4108%" y="367.50"></text></g><g><title>dyper_ops`Builtins_ResolvePromise (14 samples, 0.14%)</title><rect x="55.1608%" y="341" width="0.1389%" height="15" fill="rgb(222,119,46)"/><text x="55.4108%" y="351.50"></text></g><g><title>dyper_ops`Builtins_GetProperty (7 samples, 0.07%)</title><rect x="55.2303%" y="325" width="0.0695%" height="15" fill="rgb(222,165,49)"/><text x="55.4803%" y="335.50"></text></g><g><title>0x41e0008579f (3 samples, 0.03%)</title><rect x="55.3295%" y="357" width="0.0298%" height="15" fill="rgb(219,113,52)"/><text x="55.5795%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (3 samples, 0.03%)</title><rect x="55.3295%" y="341" width="0.0298%" height="15" fill="rgb(214,7,15)"/><text x="55.5795%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (2 samples, 0.02%)</title><rect x="55.5081%" y="309" width="0.0198%" height="15" fill="rgb(235,32,4)"/><text x="55.7581%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (7 samples, 0.07%)</title><rect x="55.5578%" y="261" width="0.0695%" height="15" fill="rgb(238,90,54)"/><text x="55.8078%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="55.5875%" y="245" width="0.0397%" height="15" fill="rgb(213,208,19)"/><text x="55.8375%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (2 samples, 0.02%)</title><rect x="55.6074%" y="229" width="0.0198%" height="15" fill="rgb(233,156,4)"/><text x="55.8574%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (2 samples, 0.02%)</title><rect x="55.6074%" y="213" width="0.0198%" height="15" fill="rgb(207,194,5)"/><text x="55.8574%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (10 samples, 0.10%)</title><rect x="55.5578%" y="293" width="0.0992%" height="15" fill="rgb(206,111,30)"/><text x="55.8078%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (10 samples, 0.10%)</title><rect x="55.5578%" y="277" width="0.0992%" height="15" fill="rgb(243,70,54)"/><text x="55.8078%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="55.6372%" y="261" width="0.0198%" height="15" fill="rgb(242,28,8)"/><text x="55.8872%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::GetCapacity (3 samples, 0.03%)</title><rect x="55.6868%" y="277" width="0.0298%" height="15" fill="rgb(219,106,18)"/><text x="55.9368%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (2 samples, 0.02%)</title><rect x="55.7265%" y="277" width="0.0198%" height="15" fill="rgb(244,222,10)"/><text x="55.9765%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="56.2723%" y="133" width="0.0298%" height="15" fill="rgb(236,179,52)"/><text x="56.5223%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (12 samples, 0.12%)</title><rect x="56.1929%" y="229" width="0.1191%" height="15" fill="rgb(213,23,39)"/><text x="56.4429%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (6 samples, 0.06%)</title><rect x="56.2525%" y="213" width="0.0595%" height="15" fill="rgb(238,48,10)"/><text x="56.5025%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (6 samples, 0.06%)</title><rect x="56.2525%" y="197" width="0.0595%" height="15" fill="rgb(251,196,23)"/><text x="56.5025%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (4 samples, 0.04%)</title><rect x="56.2723%" y="181" width="0.0397%" height="15" fill="rgb(250,152,24)"/><text x="56.5223%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.04%)</title><rect x="56.2723%" y="165" width="0.0397%" height="15" fill="rgb(209,150,17)"/><text x="56.5223%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (4 samples, 0.04%)</title><rect x="56.2723%" y="149" width="0.0397%" height="15" fill="rgb(234,202,34)"/><text x="56.5223%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="56.3120%" y="229" width="0.0198%" height="15" fill="rgb(253,148,53)"/><text x="56.5620%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (23 samples, 0.23%)</title><rect x="56.1532%" y="261" width="0.2283%" height="15" fill="rgb(218,129,16)"/><text x="56.4032%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (23 samples, 0.23%)</title><rect x="56.1532%" y="245" width="0.2283%" height="15" fill="rgb(216,85,19)"/><text x="56.4032%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (5 samples, 0.05%)</title><rect x="56.3319%" y="229" width="0.0496%" height="15" fill="rgb(235,228,7)"/><text x="56.5819%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (5 samples, 0.05%)</title><rect x="56.4410%" y="245" width="0.0496%" height="15" fill="rgb(245,175,0)"/><text x="56.6910%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (21 samples, 0.21%)</title><rect x="56.3914%" y="261" width="0.2084%" height="15" fill="rgb(208,168,36)"/><text x="56.6414%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (11 samples, 0.11%)</title><rect x="56.4907%" y="245" width="0.1092%" height="15" fill="rgb(246,171,24)"/><text x="56.7407%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (8 samples, 0.08%)</title><rect x="56.5204%" y="229" width="0.0794%" height="15" fill="rgb(215,142,24)"/><text x="56.7704%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (6 samples, 0.06%)</title><rect x="56.5403%" y="213" width="0.0595%" height="15" fill="rgb(250,187,7)"/><text x="56.7903%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::FixedArray::ShrinkOrEmpty(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="56.5998%" y="261" width="0.0198%" height="15" fill="rgb(228,66,33)"/><text x="56.8498%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FastGetOwnValuesOrEntries(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, bool, v8::internal::Handle (90 samples, 0.89%)</title><rect x="55.7463%" y="277" width="0.8932%" height="15" fill="rgb(234,215,21)"/><text x="55.9963%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FixedArray::ShrinkOrEmpty(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="56.6395%" y="277" width="0.0198%" height="15" fill="rgb(222,191,20)"/><text x="56.8895%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Map::OnlyHasSimpleProperties (5 samples, 0.05%)</title><rect x="56.6594%" y="277" width="0.0496%" height="15" fill="rgb(245,79,54)"/><text x="56.9094%" y="287.50"></text></g><g><title>0x41e00085888 (134 samples, 1.33%)</title><rect x="55.3890%" y="357" width="1.3299%" height="15" fill="rgb(240,10,37)"/><text x="55.6390%" y="367.50"></text></g><g><title>dyper_ops`Builtins_ObjectEntries (134 samples, 1.33%)</title><rect x="55.3890%" y="341" width="1.3299%" height="15" fill="rgb(214,192,32)"/><text x="55.6390%" y="351.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (124 samples, 1.23%)</title><rect x="55.4883%" y="325" width="1.2306%" height="15" fill="rgb(209,36,54)"/><text x="55.7383%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_ObjectEntries (118 samples, 1.17%)</title><rect x="55.5478%" y="309" width="1.1711%" height="15" fill="rgb(220,10,11)"/><text x="55.7978%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::GetOwnValuesOrEntries(v8::internal::Isolate*, v8::internal::Handle (107 samples, 1.06%)</title><rect x="55.6570%" y="293" width="1.0619%" height="15" fill="rgb(221,106,17)"/><text x="55.9070%" y="303.50"></text></g><g><title>0x41e0008589c (2 samples, 0.02%)</title><rect x="56.7189%" y="357" width="0.0198%" height="15" fill="rgb(251,142,44)"/><text x="56.9689%" y="367.50"></text></g><g><title>0x41e00085913 (8 samples, 0.08%)</title><rect x="56.7388%" y="357" width="0.0794%" height="15" fill="rgb(238,13,15)"/><text x="56.9888%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC_Megamorphic (7 samples, 0.07%)</title><rect x="56.7487%" y="341" width="0.0695%" height="15" fill="rgb(208,107,27)"/><text x="56.9987%" y="351.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::array_buffer::BackingStore as rusty_v8::support::Shared&gt;::get (7 samples, 0.07%)</title><rect x="57.2052%" y="293" width="0.0695%" height="15" fill="rgb(205,136,37)"/><text x="57.4552%" y="303.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (4 samples, 0.04%)</title><rect x="57.2946%" y="293" width="0.0397%" height="15" fill="rgb(250,205,27)"/><text x="57.5446%" y="303.50"></text></g><g><title>dyper_ops`__rdl_alloc (2 samples, 0.02%)</title><rect x="57.7610%" y="197" width="0.0198%" height="15" fill="rgb(210,80,43)"/><text x="58.0110%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="57.9000%" y="165" width="0.0298%" height="15" fill="rgb(247,160,36)"/><text x="58.1500%" y="175.50"></text></g><g><title>dyper_ops`v8::String::Utf8Length (11 samples, 0.11%)</title><rect x="57.8603%" y="181" width="0.1092%" height="15" fill="rgb(234,13,49)"/><text x="58.1103%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (4 samples, 0.04%)</title><rect x="57.9297%" y="165" width="0.0397%" height="15" fill="rgb(234,122,0)"/><text x="58.1797%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="58.1481%" y="165" width="0.0198%" height="15" fill="rgb(207,146,38)"/><text x="58.3981%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::String::GetFlatContent(v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt; (6 samples, 0.06%)</title><rect x="58.1679%" y="165" width="0.0595%" height="15" fill="rgb(207,177,25)"/><text x="58.4179%" y="175.50"></text></g><g><title>dyper_ops`v8::String::WriteUtf8 (27 samples, 0.27%)</title><rect x="57.9694%" y="181" width="0.2680%" height="15" fill="rgb(211,178,42)"/><text x="58.2194%" y="191.50"></text></g><g><title>dyper_ops`v8::Value::ToString(v8::Local (3 samples, 0.03%)</title><rect x="58.2374%" y="181" width="0.0298%" height="15" fill="rgb(230,69,54)"/><text x="58.4874%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="58.2672%" y="181" width="0.0298%" height="15" fill="rgb(214,135,41)"/><text x="58.5172%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.04%)</title><rect x="58.3565%" y="149" width="0.0397%" height="15" fill="rgb(237,67,25)"/><text x="58.6065%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (47 samples, 0.47%)</title><rect x="58.3069%" y="181" width="0.4665%" height="15" fill="rgb(222,189,50)"/><text x="58.5569%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (44 samples, 0.44%)</title><rect x="58.3366%" y="165" width="0.4367%" height="15" fill="rgb(245,148,34)"/><text x="58.5866%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.38%)</title><rect x="58.3962%" y="149" width="0.3771%" height="15" fill="rgb(222,29,6)"/><text x="58.6462%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.38%)</title><rect x="58.3962%" y="133" width="0.3771%" height="15" fill="rgb(221,189,43)"/><text x="58.6462%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.10%)</title><rect x="58.6741%" y="117" width="0.0992%" height="15" fill="rgb(207,36,27)"/><text x="58.9241%" y="127.50"></text></g><g><title>dyper_ops`rusty_v8::value::_&lt;impl rusty_v8::data::Value&gt;::to_rust_string_lossy (100 samples, 0.99%)</title><rect x="57.8007%" y="197" width="0.9925%" height="15" fill="rgb(217,90,24)"/><text x="58.0507%" y="207.50"></text></g><g><title>dyper_ops`v8::CallDepthScope&lt;false&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (7 samples, 0.07%)</title><rect x="58.9123%" y="181" width="0.0695%" height="15" fill="rgb(224,66,35)"/><text x="59.1623%" y="191.50"></text></g><g><title>dyper_ops`v8::EscapableHandleScope::EscapableHandleScope (4 samples, 0.04%)</title><rect x="58.9817%" y="181" width="0.0397%" height="15" fill="rgb(221,13,50)"/><text x="59.2317%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::InterruptsScope::InterruptsScope (2 samples, 0.02%)</title><rect x="59.0314%" y="181" width="0.0198%" height="15" fill="rgb(236,68,49)"/><text x="59.2814%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (4 samples, 0.04%)</title><rect x="59.0611%" y="181" width="0.0397%" height="15" fill="rgb(229,146,28)"/><text x="59.3111%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (2 samples, 0.02%)</title><rect x="59.1008%" y="181" width="0.0198%" height="15" fill="rgb(225,31,38)"/><text x="59.3508%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::Get(v8::internal::Handle (2 samples, 0.02%)</title><rect x="59.1604%" y="165" width="0.0198%" height="15" fill="rgb(250,208,3)"/><text x="59.4104%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::FetchValue (13 samples, 0.13%)</title><rect x="59.1802%" y="165" width="0.1290%" height="15" fill="rgb(246,54,23)"/><text x="59.4302%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Object::GetProperty (20 samples, 0.20%)</title><rect x="59.1207%" y="181" width="0.1985%" height="15" fill="rgb(243,76,11)"/><text x="59.3707%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastHoleyObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)3&gt; &gt;::GetEntryForIndex (3 samples, 0.03%)</title><rect x="59.3886%" y="165" width="0.0298%" height="15" fill="rgb(245,21,50)"/><text x="59.6386%" y="175.50"></text></g><g><title>dyper_ops`v8::Object::Get(v8::Local (77 samples, 0.76%)</title><rect x="58.8130%" y="197" width="0.7642%" height="15" fill="rgb(228,9,43)"/><text x="59.0630%" y="207.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;true&gt; (26 samples, 0.26%)</title><rect x="59.3192%" y="181" width="0.2580%" height="15" fill="rgb(208,100,47)"/><text x="59.5692%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;true&gt; (15 samples, 0.15%)</title><rect x="59.4283%" y="165" width="0.1489%" height="15" fill="rgb(232,26,8)"/><text x="59.6783%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::ElementsAccessorBase&lt;v8::internal::(anonymous namespace)::FastPackedObjectElementsAccessor, v8::internal::(anonymous namespace)::ElementsKindTraits&lt;(v8::internal::ElementsKind)2&gt; &gt;::GetEntryForIndex (3 samples, 0.03%)</title><rect x="59.5474%" y="149" width="0.0298%" height="15" fill="rgb(216,166,38)"/><text x="59.7974%" y="159.50"></text></g><g><title>dyper_ops`v8__Value__IsString (2 samples, 0.02%)</title><rect x="59.5871%" y="197" width="0.0198%" height="15" fill="rgb(251,202,51)"/><text x="59.8371%" y="207.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;true&gt; (2 samples, 0.02%)</title><rect x="59.6169%" y="197" width="0.0198%" height="15" fill="rgb(254,216,34)"/><text x="59.8669%" y="207.50"></text></g><g><title>dyper_ops`&lt;serde_v8::de::SeqAccess as serde::de::SeqAccess&gt;::next_element_seed (195 samples, 1.94%)</title><rect x="57.7114%" y="213" width="1.9353%" height="15" fill="rgb(251,32,27)"/><text x="57.9614%" y="223.50">d..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="59.8353%" y="117" width="0.0397%" height="15" fill="rgb(208,127,28)"/><text x="60.0853%" y="127.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.33%)</title><rect x="59.6467%" y="213" width="0.3275%" height="15" fill="rgb(224,137,22)"/><text x="59.8967%" y="223.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (28 samples, 0.28%)</title><rect x="59.6963%" y="197" width="0.2779%" height="15" fill="rgb(254,70,32)"/><text x="59.9463%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.26%)</title><rect x="59.7162%" y="181" width="0.2580%" height="15" fill="rgb(229,75,37)"/><text x="59.9662%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (25 samples, 0.25%)</title><rect x="59.7261%" y="165" width="0.2481%" height="15" fill="rgb(252,64,23)"/><text x="59.9761%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.23%)</title><rect x="59.7459%" y="149" width="0.2283%" height="15" fill="rgb(232,162,48)"/><text x="59.9959%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.22%)</title><rect x="59.7559%" y="133" width="0.2183%" height="15" fill="rgb(246,160,12)"/><text x="60.0059%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.10%)</title><rect x="59.8750%" y="117" width="0.0992%" height="15" fill="rgb(247,166,0)"/><text x="60.1250%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="59.9444%" y="101" width="0.0298%" height="15" fill="rgb(249,219,21)"/><text x="60.1944%" y="111.50"></text></g><g><title>dyper_ops`rusty_v8::value::_&lt;impl rusty_v8::data::Value&gt;::is_string (2 samples, 0.02%)</title><rect x="59.9742%" y="213" width="0.0198%" height="15" fill="rgb(205,209,3)"/><text x="60.2242%" y="223.50"></text></g><g><title>dyper_ops`v8::Object::Get(v8::Local (2 samples, 0.02%)</title><rect x="59.9940%" y="213" width="0.0198%" height="15" fill="rgb(243,44,1)"/><text x="60.2440%" y="223.50"></text></g><g><title>dyper_ops`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (239 samples, 2.37%)</title><rect x="57.6518%" y="229" width="2.3720%" height="15" fill="rgb(206,159,16)"/><text x="57.9018%" y="239.50">dy..</text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="60.0337%" y="229" width="0.0198%" height="15" fill="rgb(244,77,30)"/><text x="60.2837%" y="239.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Array&gt;&gt;::try_from (2 samples, 0.02%)</title><rect x="60.0536%" y="229" width="0.0198%" height="15" fill="rgb(218,69,12)"/><text x="60.3036%" y="239.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Object&gt;::get (5 samples, 0.05%)</title><rect x="60.0834%" y="229" width="0.0496%" height="15" fill="rgb(212,87,7)"/><text x="60.3334%" y="239.50"></text></g><g><title>dyper_ops`v8::Value::IntegerValue(v8::Local (2 samples, 0.02%)</title><rect x="60.1528%" y="213" width="0.0198%" height="15" fill="rgb(245,114,25)"/><text x="60.4028%" y="223.50"></text></g><g><title>dyper_ops`rusty_v8::value::_&lt;impl rusty_v8::data::Value&gt;::integer_value (12 samples, 0.12%)</title><rect x="60.1429%" y="229" width="0.1191%" height="15" fill="rgb(210,61,42)"/><text x="60.3929%" y="239.50"></text></g><g><title>dyper_ops`v8__Value__IntegerValue (9 samples, 0.09%)</title><rect x="60.1727%" y="213" width="0.0893%" height="15" fill="rgb(211,52,33)"/><text x="60.4227%" y="223.50"></text></g><g><title>dyper_ops`v8::Value::IntegerValue(v8::Local (5 samples, 0.05%)</title><rect x="60.2124%" y="197" width="0.0496%" height="15" fill="rgb(234,58,33)"/><text x="60.4624%" y="207.50"></text></g><g><title>dyper_ops`unsigned int v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (7 samples, 0.07%)</title><rect x="60.5399%" y="149" width="0.0695%" height="15" fill="rgb(220,115,36)"/><text x="60.7899%" y="159.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector (4 samples, 0.04%)</title><rect x="60.8376%" y="117" width="0.0397%" height="15" fill="rgb(243,153,54)"/><text x="61.0876%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString(v8::internal::Vector (38 samples, 0.38%)</title><rect x="60.5101%" y="165" width="0.3771%" height="15" fill="rgb(251,47,18)"/><text x="60.7601%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (28 samples, 0.28%)</title><rect x="60.6094%" y="149" width="0.2779%" height="15" fill="rgb(242,102,42)"/><text x="60.8594%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (27 samples, 0.27%)</title><rect x="60.6193%" y="133" width="0.2680%" height="15" fill="rgb(234,31,38)"/><text x="60.8693%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InternalizeUtf8String(v8::internal::Vector (55 samples, 0.55%)</title><rect x="60.4010%" y="181" width="0.5459%" height="15" fill="rgb(221,117,51)"/><text x="60.6510%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (6 samples, 0.06%)</title><rect x="60.8873%" y="165" width="0.0595%" height="15" fill="rgb(212,20,18)"/><text x="61.1373%" y="175.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new_from_utf8 (69 samples, 0.68%)</title><rect x="60.2918%" y="213" width="0.6848%" height="15" fill="rgb(245,133,36)"/><text x="60.5418%" y="223.50"></text></g><g><title>dyper_ops`v8::String::NewFromUtf8 (63 samples, 0.63%)</title><rect x="60.3513%" y="197" width="0.6252%" height="15" fill="rgb(212,6,19)"/><text x="60.6013%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (2 samples, 0.02%)</title><rect x="60.9567%" y="181" width="0.0198%" height="15" fill="rgb(218,1,36)"/><text x="61.2067%" y="191.50"></text></g><g><title>dyper_ops`serde_v8::de::v8_struct_key (73 samples, 0.72%)</title><rect x="60.2719%" y="229" width="0.7245%" height="15" fill="rgb(246,84,54)"/><text x="60.5219%" y="239.50"></text></g><g><title>dyper_ops`v8::String::NewFromUtf8 (2 samples, 0.02%)</title><rect x="60.9766%" y="213" width="0.0198%" height="15" fill="rgb(242,110,6)"/><text x="61.2266%" y="223.50"></text></g><g><title>dyper_ops`v8::CallDepthScope&lt;false&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (8 samples, 0.08%)</title><rect x="61.0659%" y="213" width="0.0794%" height="15" fill="rgb(214,47,5)"/><text x="61.3159%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::InterruptsScope::InterruptsScope (2 samples, 0.02%)</title><rect x="61.1254%" y="197" width="0.0198%" height="15" fill="rgb(218,159,25)"/><text x="61.3754%" y="207.50"></text></g><g><title>dyper_ops`v8::EscapableHandleScope::EscapableHandleScope (8 samples, 0.08%)</title><rect x="61.1453%" y="213" width="0.0794%" height="15" fill="rgb(215,211,28)"/><text x="61.3953%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (4 samples, 0.04%)</title><rect x="61.2247%" y="213" width="0.0397%" height="15" fill="rgb(238,59,32)"/><text x="61.4747%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (6 samples, 0.06%)</title><rect x="61.2644%" y="213" width="0.0595%" height="15" fill="rgb(226,82,3)"/><text x="61.5144%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Object::GetProperty (2 samples, 0.02%)</title><rect x="61.3239%" y="213" width="0.0198%" height="15" fill="rgb(240,164,32)"/><text x="61.5739%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (11 samples, 0.11%)</title><rect x="61.4629%" y="197" width="0.1092%" height="15" fill="rgb(232,46,7)"/><text x="61.7129%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (8 samples, 0.08%)</title><rect x="61.5721%" y="197" width="0.0794%" height="15" fill="rgb(229,129,53)"/><text x="61.8221%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (3 samples, 0.03%)</title><rect x="61.6514%" y="197" width="0.0298%" height="15" fill="rgb(234,188,29)"/><text x="61.9014%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::FastPropertyAt(v8::internal::Handle (5 samples, 0.05%)</title><rect x="61.7507%" y="181" width="0.0496%" height="15" fill="rgb(246,141,4)"/><text x="62.0007%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Object::GetProperty (21 samples, 0.21%)</title><rect x="61.6812%" y="197" width="0.2084%" height="15" fill="rgb(229,23,39)"/><text x="61.9312%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::FetchValue (9 samples, 0.09%)</title><rect x="61.8003%" y="181" width="0.0893%" height="15" fill="rgb(206,12,3)"/><text x="62.0503%" y="191.50"></text></g><g><title>dyper_ops`v8::Object::Get(v8::Local&lt;v8::Context&gt;, v8::Local (112 samples, 1.11%)</title><rect x="61.0064%" y="229" width="1.1116%" height="15" fill="rgb(252,226,20)"/><text x="61.2564%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Runtime::GetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (78 samples, 0.77%)</title><rect x="61.3438%" y="213" width="0.7741%" height="15" fill="rgb(216,123,35)"/><text x="61.5938%" y="223.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;false&gt; (22 samples, 0.22%)</title><rect x="61.8996%" y="197" width="0.2183%" height="15" fill="rgb(212,68,40)"/><text x="62.1496%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (13 samples, 0.13%)</title><rect x="61.9889%" y="181" width="0.1290%" height="15" fill="rgb(254,125,32)"/><text x="62.2389%" y="191.50"></text></g><g><title>dyper_ops`v8::Value::IsArray (3 samples, 0.03%)</title><rect x="62.1179%" y="229" width="0.0298%" height="15" fill="rgb(253,97,22)"/><text x="62.3679%" y="239.50"></text></g><g><title>dyper_ops`v8::Value::IsObject (3 samples, 0.03%)</title><rect x="62.1477%" y="229" width="0.0298%" height="15" fill="rgb(241,101,14)"/><text x="62.3977%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Runtime::GetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (3 samples, 0.03%)</title><rect x="62.1775%" y="229" width="0.0298%" height="15" fill="rgb(238,103,29)"/><text x="62.4275%" y="239.50"></text></g><g><title>dyper_ops`&lt;&amp;mut serde_v8::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (478 samples, 4.74%)</title><rect x="57.4931%" y="245" width="4.7439%" height="15" fill="rgb(233,195,47)"/><text x="57.7431%" y="255.50">dyper_..</text></g><g><title>dyper_ops`v8__Object__Get (3 samples, 0.03%)</title><rect x="62.2072%" y="229" width="0.0298%" height="15" fill="rgb(246,218,30)"/><text x="62.4572%" y="239.50"></text></g><g><title>dyper_ops`&lt;bytes::bytes::Bytes as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.02%)</title><rect x="62.2469%" y="245" width="0.0198%" height="15" fill="rgb(219,145,47)"/><text x="62.4969%" y="255.50"></text></g><g><title>dyper_ops`deno_core::ops::json_serialize_op_result (18 samples, 0.18%)</title><rect x="62.2767%" y="245" width="0.1786%" height="15" fill="rgb(243,12,26)"/><text x="62.5267%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (17 samples, 0.17%)</title><rect x="62.2866%" y="229" width="0.1687%" height="15" fill="rgb(214,87,16)"/><text x="62.5366%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (17 samples, 0.17%)</title><rect x="62.2866%" y="213" width="0.1687%" height="15" fill="rgb(208,99,42)"/><text x="62.5366%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.17%)</title><rect x="62.2866%" y="197" width="0.1687%" height="15" fill="rgb(253,99,2)"/><text x="62.5366%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.17%)</title><rect x="62.2866%" y="181" width="0.1687%" height="15" fill="rgb(220,168,23)"/><text x="62.5366%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="62.3859%" y="165" width="0.0695%" height="15" fill="rgb(242,38,24)"/><text x="62.6359%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (21 samples, 0.21%)</title><rect x="63.0012%" y="197" width="0.2084%" height="15" fill="rgb(225,182,9)"/><text x="63.2512%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.20%)</title><rect x="63.0111%" y="181" width="0.1985%" height="15" fill="rgb(243,178,37)"/><text x="63.2611%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.19%)</title><rect x="63.0210%" y="165" width="0.1886%" height="15" fill="rgb(232,139,19)"/><text x="63.2710%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.19%)</title><rect x="63.0210%" y="149" width="0.1886%" height="15" fill="rgb(225,201,24)"/><text x="63.2710%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.06%)</title><rect x="63.1501%" y="133" width="0.0595%" height="15" fill="rgb(221,47,46)"/><text x="63.4001%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="63.1798%" y="117" width="0.0298%" height="15" fill="rgb(249,23,13)"/><text x="63.4298%" y="127.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::copy_from_slice (28 samples, 0.28%)</title><rect x="62.9516%" y="213" width="0.2779%" height="15" fill="rgb(219,9,5)"/><text x="63.2016%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="63.2096%" y="197" width="0.0198%" height="15" fill="rgb(254,171,16)"/><text x="63.4596%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.09%)</title><rect x="63.8249%" y="117" width="0.0893%" height="15" fill="rgb(230,171,20)"/><text x="64.0749%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (60 samples, 0.60%)</title><rect x="63.4875%" y="181" width="0.5955%" height="15" fill="rgb(210,71,41)"/><text x="63.7375%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (58 samples, 0.58%)</title><rect x="63.5073%" y="165" width="0.5756%" height="15" fill="rgb(206,173,20)"/><text x="63.7573%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (54 samples, 0.54%)</title><rect x="63.5470%" y="149" width="0.5359%" height="15" fill="rgb(233,88,34)"/><text x="63.7970%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (51 samples, 0.51%)</title><rect x="63.5768%" y="133" width="0.5062%" height="15" fill="rgb(223,209,46)"/><text x="63.8268%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.17%)</title><rect x="63.9143%" y="117" width="0.1687%" height="15" fill="rgb(250,43,18)"/><text x="64.1643%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="64.0234%" y="101" width="0.0595%" height="15" fill="rgb(208,13,10)"/><text x="64.2734%" y="111.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::reserve_one (75 samples, 0.74%)</title><rect x="63.3486%" y="197" width="0.7443%" height="15" fill="rgb(212,200,36)"/><text x="63.5986%" y="207.50"></text></g><g><title>dyper_ops`http::header::map::hash_elem_using (4 samples, 0.04%)</title><rect x="64.0929%" y="197" width="0.0397%" height="15" fill="rgb(225,90,30)"/><text x="64.3429%" y="207.50"></text></g><g><title>dyper_ops`http::header::map::HeaderMap&lt;T&gt;::append (93 samples, 0.92%)</title><rect x="63.2295%" y="213" width="0.9230%" height="15" fill="rgb(236,182,39)"/><text x="63.4795%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="64.1326%" y="197" width="0.0198%" height="15" fill="rgb(212,144,35)"/><text x="64.3826%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="64.2219%" y="149" width="0.0198%" height="15" fill="rgb(228,63,44)"/><text x="64.4719%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (29 samples, 0.29%)</title><rect x="64.2021%" y="181" width="0.2878%" height="15" fill="rgb(228,109,6)"/><text x="64.4521%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.28%)</title><rect x="64.2120%" y="165" width="0.2779%" height="15" fill="rgb(238,117,24)"/><text x="64.4620%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.25%)</title><rect x="64.2418%" y="149" width="0.2481%" height="15" fill="rgb(242,26,26)"/><text x="64.4918%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.21%)</title><rect x="64.2815%" y="133" width="0.2084%" height="15" fill="rgb(221,92,48)"/><text x="64.5315%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="64.4403%" y="117" width="0.0496%" height="15" fill="rgb(209,209,32)"/><text x="64.6903%" y="127.50"></text></g><g><title>dyper_ops`bytes::bytes::Bytes::copy_from_slice (33 samples, 0.33%)</title><rect x="64.1921%" y="197" width="0.3275%" height="15" fill="rgb(221,70,22)"/><text x="64.4421%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.03%)</title><rect x="64.4899%" y="181" width="0.0298%" height="15" fill="rgb(248,145,5)"/><text x="64.7399%" y="191.50"></text></g><g><title>dyper_ops`http::header::name::HeaderName::from_bytes (42 samples, 0.42%)</title><rect x="64.1524%" y="213" width="0.4168%" height="15" fill="rgb(226,116,26)"/><text x="64.4024%" y="223.50"></text></g><g><title>dyper_ops`http::header::name::parse_hdr (5 samples, 0.05%)</title><rect x="64.5197%" y="197" width="0.0496%" height="15" fill="rgb(244,5,17)"/><text x="64.7697%" y="207.50"></text></g><g><title>dyper_ops`http::header::name::parse_hdr (4 samples, 0.04%)</title><rect x="64.5693%" y="213" width="0.0397%" height="15" fill="rgb(252,159,33)"/><text x="64.8193%" y="223.50"></text></g><g><title>dyper_ops`http::response::Builder::header (197 samples, 1.96%)</title><rect x="62.7630%" y="229" width="1.9551%" height="15" fill="rgb(206,71,0)"/><text x="63.0130%" y="239.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.11%)</title><rect x="64.6090%" y="213" width="0.1092%" height="15" fill="rgb(233,118,54)"/><text x="64.8590%" y="223.50"></text></g><g><title>dyper_ops`http::response::Builder::status (14 samples, 0.14%)</title><rect x="64.7181%" y="229" width="0.1389%" height="15" fill="rgb(234,83,48)"/><text x="64.9681%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.14%)</title><rect x="64.7181%" y="213" width="0.1389%" height="15" fill="rgb(228,3,54)"/><text x="64.9681%" y="223.50"></text></g><g><title>dyper_ops`http::response::Parts::new (2 samples, 0.02%)</title><rect x="64.8571%" y="229" width="0.0198%" height="15" fill="rgb(226,155,13)"/><text x="65.1071%" y="239.50"></text></g><g><title>dyper_ops`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.13%)</title><rect x="64.8769%" y="229" width="0.1290%" height="15" fill="rgb(241,28,37)"/><text x="65.1269%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="65.0060%" y="229" width="0.0198%" height="15" fill="rgb(233,93,10)"/><text x="65.2560%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (15 samples, 0.15%)</title><rect x="65.1052%" y="213" width="0.1489%" height="15" fill="rgb(225,113,19)"/><text x="65.3552%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.14%)</title><rect x="65.1151%" y="197" width="0.1389%" height="15" fill="rgb(241,2,18)"/><text x="65.3651%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.25%)</title><rect x="65.0258%" y="229" width="0.2481%" height="15" fill="rgb(228,207,21)"/><text x="65.2758%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="65.2541%" y="213" width="0.0198%" height="15" fill="rgb(213,211,35)"/><text x="65.5041%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.16%)</title><rect x="65.7007%" y="197" width="0.1588%" height="15" fill="rgb(209,83,10)"/><text x="65.9507%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (62 samples, 0.62%)</title><rect x="65.2739%" y="229" width="0.6153%" height="15" fill="rgb(209,164,1)"/><text x="65.5239%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (38 samples, 0.38%)</title><rect x="65.5121%" y="213" width="0.3771%" height="15" fill="rgb(213,184,43)"/><text x="65.7621%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.03%)</title><rect x="65.8595%" y="197" width="0.0298%" height="15" fill="rgb(231,61,34)"/><text x="66.1095%" y="207.50"></text></g><g><title>dyper_ops`dyper_ops::op_respond (371 samples, 3.68%)</title><rect x="62.4553%" y="245" width="3.6820%" height="15" fill="rgb(235,75,3)"/><text x="62.7053%" y="255.50">dype..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.24%)</title><rect x="65.8992%" y="229" width="0.2382%" height="15" fill="rgb(220,106,47)"/><text x="66.1492%" y="239.50"></text></g><g><title>dyper_ops`http::response::Builder::status (3 samples, 0.03%)</title><rect x="66.1374%" y="245" width="0.0298%" height="15" fill="rgb(210,196,33)"/><text x="66.3874%" y="255.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Array&gt;::length (2 samples, 0.02%)</title><rect x="66.2068%" y="245" width="0.0198%" height="15" fill="rgb(229,154,42)"/><text x="66.4568%" y="255.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Object&gt;::get (2 samples, 0.02%)</title><rect x="66.2267%" y="245" width="0.0198%" height="15" fill="rgb(228,114,26)"/><text x="66.4767%" y="255.50"></text></g><g><title>dyper_ops`serde_v8::de::Deserializer::new (2 samples, 0.02%)</title><rect x="66.2565%" y="245" width="0.0198%" height="15" fill="rgb(208,144,1)"/><text x="66.5065%" y="255.50"></text></g><g><title>dyper_ops`serde_v8::de::v8_struct_key (3 samples, 0.03%)</title><rect x="66.2763%" y="245" width="0.0298%" height="15" fill="rgb(239,112,37)"/><text x="66.5263%" y="255.50"></text></g><g><title>dyper_ops`v8::Object::Get(v8::Local&lt;v8::Context&gt;, v8::Local (2 samples, 0.02%)</title><rect x="66.3160%" y="245" width="0.0198%" height="15" fill="rgb(210,96,50)"/><text x="66.5660%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="66.3458%" y="245" width="0.0298%" height="15" fill="rgb(222,178,2)"/><text x="66.5958%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.02%)</title><rect x="66.3755%" y="245" width="0.0198%" height="15" fill="rgb(226,74,18)"/><text x="66.6255%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.08%)</title><rect x="66.3954%" y="245" width="0.0794%" height="15" fill="rgb(225,67,54)"/><text x="66.6454%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.06%)</title><rect x="66.4748%" y="245" width="0.0595%" height="15" fill="rgb(251,92,32)"/><text x="66.7248%" y="255.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (924 samples, 9.17%)</title><rect x="57.4236%" y="261" width="9.1703%" height="15" fill="rgb(228,149,22)"/><text x="57.6736%" y="271.50">dyper_ops`den..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (6 samples, 0.06%)</title><rect x="66.5343%" y="245" width="0.0595%" height="15" fill="rgb(243,54,13)"/><text x="66.7843%" y="255.50"></text></g><g><title>dyper_ops`deno_core::ops::json_serialize_op_result (3 samples, 0.03%)</title><rect x="66.5939%" y="261" width="0.0298%" height="15" fill="rgb(243,180,28)"/><text x="66.8439%" y="271.50"></text></g><g><title>dyper_ops`dyper_ops::op_respond (2 samples, 0.02%)</title><rect x="66.6237%" y="261" width="0.0198%" height="15" fill="rgb(208,167,24)"/><text x="66.8737%" y="271.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (932 samples, 9.25%)</title><rect x="57.4037%" y="277" width="9.2497%" height="15" fill="rgb(245,73,45)"/><text x="57.6537%" y="287.50">dyper_ops`&lt;al..</text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (943 samples, 9.36%)</title><rect x="57.3343%" y="293" width="9.3589%" height="15" fill="rgb(237,203,48)"/><text x="57.5843%" y="303.50">dyper_ops`den..</text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (4 samples, 0.04%)</title><rect x="66.6534%" y="277" width="0.0397%" height="15" fill="rgb(211,197,16)"/><text x="66.9034%" y="287.50"></text></g><g><title>dyper_ops`v8::BackingStore::ByteLength (3 samples, 0.03%)</title><rect x="66.6931%" y="277" width="0.0298%" height="15" fill="rgb(243,99,51)"/><text x="66.9431%" y="287.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (4 samples, 0.04%)</title><rect x="66.6931%" y="293" width="0.0397%" height="15" fill="rgb(215,123,29)"/><text x="66.9431%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Integer&gt;&gt;::try_from (4 samples, 0.04%)</title><rect x="66.7328%" y="293" width="0.0397%" height="15" fill="rgb(239,186,37)"/><text x="66.9828%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_annex (2 samples, 0.02%)</title><rect x="66.7825%" y="293" width="0.0198%" height="15" fill="rgb(252,136,39)"/><text x="67.0325%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_slot (8 samples, 0.08%)</title><rect x="66.8023%" y="293" width="0.0794%" height="15" fill="rgb(223,213,32)"/><text x="67.0523%" y="303.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::support::TypeIdHasher as core::hash::Hasher&gt;::write_u64 (5 samples, 0.05%)</title><rect x="66.8321%" y="277" width="0.0496%" height="15" fill="rgb(233,115,5)"/><text x="67.0821%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::scope::EscapableHandleScope&lt;C&gt;::escape (2 samples, 0.02%)</title><rect x="66.8817%" y="293" width="0.0198%" height="15" fill="rgb(207,226,44)"/><text x="67.1317%" y="303.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (2 samples, 0.02%)</title><rect x="66.9710%" y="277" width="0.0198%" height="15" fill="rgb(208,126,0)"/><text x="67.2210%" y="287.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="66.9909%" y="277" width="0.0695%" height="15" fill="rgb(244,66,21)"/><text x="67.2409%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="67.3184%" y="149" width="0.0397%" height="15" fill="rgb(222,97,12)"/><text x="67.5684%" y="159.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_tuple_struct (29 samples, 0.29%)</title><rect x="67.1397%" y="229" width="0.2878%" height="15" fill="rgb(219,213,19)"/><text x="67.3897%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.26%)</title><rect x="67.1695%" y="213" width="0.2580%" height="15" fill="rgb(252,169,30)"/><text x="67.4195%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (25 samples, 0.25%)</title><rect x="67.1794%" y="197" width="0.2481%" height="15" fill="rgb(206,32,51)"/><text x="67.4294%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.23%)</title><rect x="67.1993%" y="181" width="0.2283%" height="15" fill="rgb(250,172,42)"/><text x="67.4493%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.21%)</title><rect x="67.2191%" y="165" width="0.2084%" height="15" fill="rgb(209,34,43)"/><text x="67.4691%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="67.3581%" y="149" width="0.0695%" height="15" fill="rgb(223,11,35)"/><text x="67.6081%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="67.3879%" y="133" width="0.0397%" height="15" fill="rgb(251,219,26)"/><text x="67.6379%" y="143.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_tuple_struct (30 samples, 0.30%)</title><rect x="67.1397%" y="245" width="0.2977%" height="15" fill="rgb(231,119,3)"/><text x="67.3897%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (2 samples, 0.02%)</title><rect x="67.6856%" y="69" width="0.0198%" height="15" fill="rgb(216,97,11)"/><text x="67.9356%" y="79.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (3 samples, 0.03%)</title><rect x="67.6856%" y="101" width="0.0298%" height="15" fill="rgb(223,59,9)"/><text x="67.9356%" y="111.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="67.6856%" y="85" width="0.0298%" height="15" fill="rgb(233,93,31)"/><text x="67.9356%" y="95.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (8 samples, 0.08%)</title><rect x="67.6558%" y="117" width="0.0794%" height="15" fill="rgb(239,81,33)"/><text x="67.9058%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::Heap::MaxRegularHeapObjectSize (2 samples, 0.02%)</title><rect x="67.7154%" y="101" width="0.0198%" height="15" fill="rgb(213,120,34)"/><text x="67.9654%" y="111.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="67.7352%" y="117" width="0.0198%" height="15" fill="rgb(243,49,53)"/><text x="67.9852%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="67.7551%" y="117" width="0.0397%" height="15" fill="rgb(247,216,33)"/><text x="68.0051%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (21 samples, 0.21%)</title><rect x="67.5963%" y="149" width="0.2084%" height="15" fill="rgb(226,26,14)"/><text x="67.8463%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (19 samples, 0.19%)</title><rect x="67.6161%" y="133" width="0.1886%" height="15" fill="rgb(215,49,53)"/><text x="67.8661%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (5 samples, 0.05%)</title><rect x="67.8345%" y="133" width="0.0496%" height="15" fill="rgb(245,162,40)"/><text x="68.0845%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (7 samples, 0.07%)</title><rect x="67.8841%" y="133" width="0.0695%" height="15" fill="rgb(229,68,17)"/><text x="68.1341%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.05%)</title><rect x="67.9039%" y="117" width="0.0496%" height="15" fill="rgb(213,182,10)"/><text x="68.1539%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (5 samples, 0.05%)</title><rect x="67.9039%" y="101" width="0.0496%" height="15" fill="rgb(245,125,30)"/><text x="68.1539%" y="111.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (16 samples, 0.16%)</title><rect x="67.8047%" y="149" width="0.1588%" height="15" fill="rgb(232,202,2)"/><text x="68.0547%" y="159.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Array&gt;::new_with_elements (51 samples, 0.51%)</title><rect x="67.5069%" y="181" width="0.5062%" height="15" fill="rgb(237,140,51)"/><text x="67.7569%" y="191.50"></text></g><g><title>dyper_ops`v8::Array::New(v8::Isolate*, v8::Local (51 samples, 0.51%)</title><rect x="67.5069%" y="165" width="0.5062%" height="15" fill="rgb(236,157,25)"/><text x="67.7569%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::ValidateElements (5 samples, 0.05%)</title><rect x="67.9635%" y="149" width="0.0496%" height="15" fill="rgb(219,209,0)"/><text x="68.2135%" y="159.50"></text></g><g><title>dyper_ops`v8::Array::New(v8::Isolate*, v8::Local (2 samples, 0.02%)</title><rect x="68.0131%" y="181" width="0.0198%" height="15" fill="rgb(240,116,54)"/><text x="68.2631%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.13%)</title><rect x="68.0429%" y="181" width="0.1290%" height="15" fill="rgb(216,10,36)"/><text x="68.2929%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.10%)</title><rect x="68.0726%" y="165" width="0.0992%" height="15" fill="rgb(222,72,44)"/><text x="68.3226%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.09%)</title><rect x="68.0826%" y="149" width="0.0893%" height="15" fill="rgb(232,159,9)"/><text x="68.3326%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="68.2513%" y="149" width="0.0595%" height="15" fill="rgb(210,39,32)"/><text x="68.5013%" y="159.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::ArraySerializer as serde::ser::SerializeSeq&gt;::end (89 samples, 0.88%)</title><rect x="67.4672%" y="197" width="0.8833%" height="15" fill="rgb(216,194,45)"/><text x="67.7172%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.18%)</title><rect x="68.1719%" y="181" width="0.1786%" height="15" fill="rgb(218,18,35)"/><text x="68.4219%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.15%)</title><rect x="68.2017%" y="165" width="0.1489%" height="15" fill="rgb(207,83,51)"/><text x="68.4517%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.04%)</title><rect x="68.3108%" y="149" width="0.0397%" height="15" fill="rgb(225,63,43)"/><text x="68.5608%" y="159.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::ArraySerializer as serde::ser::SerializeTupleStruct&gt;::end (90 samples, 0.89%)</title><rect x="67.4672%" y="213" width="0.8932%" height="15" fill="rgb(207,57,36)"/><text x="67.7172%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="68.3704%" y="213" width="0.0298%" height="15" fill="rgb(216,99,33)"/><text x="68.6204%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="68.3803%" y="197" width="0.0198%" height="15" fill="rgb(225,42,16)"/><text x="68.6303%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="68.3803%" y="181" width="0.0198%" height="15" fill="rgb(220,201,45)"/><text x="68.6303%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.15%)</title><rect x="68.4002%" y="213" width="0.1489%" height="15" fill="rgb(225,33,4)"/><text x="68.6502%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.10%)</title><rect x="68.4498%" y="197" width="0.0992%" height="15" fill="rgb(224,33,50)"/><text x="68.6998%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.08%)</title><rect x="68.4696%" y="181" width="0.0794%" height="15" fill="rgb(246,198,51)"/><text x="68.7196%" y="191.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::Seq as serde::ser::SerializeSeq&gt;::end (134 samples, 1.33%)</title><rect x="67.4474%" y="245" width="1.3299%" height="15" fill="rgb(205,22,4)"/><text x="67.6974%" y="255.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (133 samples, 1.32%)</title><rect x="67.4573%" y="229" width="1.3200%" height="15" fill="rgb(206,3,8)"/><text x="67.7073%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (23 samples, 0.23%)</title><rect x="68.5490%" y="213" width="0.2283%" height="15" fill="rgb(251,23,15)"/><text x="68.7990%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.23%)</title><rect x="68.5490%" y="197" width="0.2283%" height="15" fill="rgb(252,88,28)"/><text x="68.7990%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.22%)</title><rect x="68.5590%" y="181" width="0.2183%" height="15" fill="rgb(212,127,14)"/><text x="68.8090%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.21%)</title><rect x="68.5689%" y="165" width="0.2084%" height="15" fill="rgb(247,145,37)"/><text x="68.8189%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="68.7277%" y="149" width="0.0496%" height="15" fill="rgb(209,117,53)"/><text x="68.9777%" y="159.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_tuple_struct (2 samples, 0.02%)</title><rect x="68.7773%" y="245" width="0.0198%" height="15" fill="rgb(212,90,42)"/><text x="69.0273%" y="255.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::TryCatch&lt;rusty_v8::scope::HandleScope&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="69.0453%" y="165" width="0.0198%" height="15" fill="rgb(218,164,37)"/><text x="69.2953%" y="175.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="69.0651%" y="149" width="0.0298%" height="15" fill="rgb(246,65,34)"/><text x="69.3151%" y="159.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_none (4 samples, 0.04%)</title><rect x="69.0651%" y="165" width="0.0397%" height="15" fill="rgb(231,100,33)"/><text x="69.3151%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.26%)</title><rect x="69.1247%" y="165" width="0.2580%" height="15" fill="rgb(228,126,14)"/><text x="69.3747%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.24%)</title><rect x="69.1445%" y="149" width="0.2382%" height="15" fill="rgb(215,173,21)"/><text x="69.3945%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.21%)</title><rect x="69.1743%" y="133" width="0.2084%" height="15" fill="rgb(210,6,40)"/><text x="69.4243%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.20%)</title><rect x="69.1842%" y="117" width="0.1985%" height="15" fill="rgb(212,48,18)"/><text x="69.4342%" y="127.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_none (43 samples, 0.43%)</title><rect x="68.9659%" y="197" width="0.4268%" height="15" fill="rgb(230,214,11)"/><text x="69.2159%" y="207.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_none (42 samples, 0.42%)</title><rect x="68.9758%" y="181" width="0.4168%" height="15" fill="rgb(254,105,39)"/><text x="69.2258%" y="191.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_none (3 samples, 0.03%)</title><rect x="69.3926%" y="197" width="0.0298%" height="15" fill="rgb(245,158,5)"/><text x="69.6426%" y="207.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (2 samples, 0.02%)</title><rect x="69.4224%" y="181" width="0.0198%" height="15" fill="rgb(249,208,11)"/><text x="69.6724%" y="191.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="69.4621%" y="117" width="0.0198%" height="15" fill="rgb(210,39,28)"/><text x="69.7121%" y="127.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_unit (6 samples, 0.06%)</title><rect x="69.4819%" y="117" width="0.0595%" height="15" fill="rgb(211,56,53)"/><text x="69.7319%" y="127.50"></text></g><g><title>dyper_ops`rusty_v8::primitives::null (2 samples, 0.02%)</title><rect x="69.5514%" y="117" width="0.0198%" height="15" fill="rgb(226,201,30)"/><text x="69.8014%" y="127.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (26 samples, 0.26%)</title><rect x="69.4422%" y="165" width="0.2580%" height="15" fill="rgb(239,101,34)"/><text x="69.6922%" y="175.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_unit (26 samples, 0.26%)</title><rect x="69.4422%" y="149" width="0.2580%" height="15" fill="rgb(226,209,5)"/><text x="69.6922%" y="159.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_unit (26 samples, 0.26%)</title><rect x="69.4422%" y="133" width="0.2580%" height="15" fill="rgb(250,105,47)"/><text x="69.6922%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (13 samples, 0.13%)</title><rect x="69.5713%" y="117" width="0.1290%" height="15" fill="rgb(230,72,3)"/><text x="69.8213%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (13 samples, 0.13%)</title><rect x="69.5713%" y="101" width="0.1290%" height="15" fill="rgb(232,218,39)"/><text x="69.8213%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.13%)</title><rect x="69.5713%" y="85" width="0.1290%" height="15" fill="rgb(248,166,6)"/><text x="69.8213%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.13%)</title><rect x="69.5713%" y="69" width="0.1290%" height="15" fill="rgb(247,89,20)"/><text x="69.8213%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="69.6606%" y="53" width="0.0397%" height="15" fill="rgb(248,130,54)"/><text x="69.9106%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.06%)</title><rect x="69.7003%" y="165" width="0.0595%" height="15" fill="rgb(234,196,4)"/><text x="69.9503%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="69.7400%" y="149" width="0.0198%" height="15" fill="rgb(250,143,31)"/><text x="69.9900%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="69.7400%" y="133" width="0.0198%" height="15" fill="rgb(211,110,34)"/><text x="69.9900%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.07%)</title><rect x="69.8888%" y="133" width="0.0695%" height="15" fill="rgb(215,124,48)"/><text x="70.1388%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.22%)</title><rect x="69.7598%" y="165" width="0.2183%" height="15" fill="rgb(216,46,13)"/><text x="70.0098%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.17%)</title><rect x="69.8094%" y="149" width="0.1687%" height="15" fill="rgb(205,184,25)"/><text x="70.0594%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="69.9583%" y="133" width="0.0198%" height="15" fill="rgb(228,1,10)"/><text x="70.2083%" y="143.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (56 samples, 0.56%)</title><rect x="69.4422%" y="181" width="0.5558%" height="15" fill="rgb(213,116,27)"/><text x="69.6922%" y="191.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (120 samples, 1.19%)</title><rect x="68.9460%" y="213" width="1.1909%" height="15" fill="rgb(241,95,50)"/><text x="69.1960%" y="223.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_some (72 samples, 0.71%)</title><rect x="69.4224%" y="197" width="0.7146%" height="15" fill="rgb(238,48,32)"/><text x="69.6724%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.14%)</title><rect x="69.9980%" y="181" width="0.1389%" height="15" fill="rgb(235,113,49)"/><text x="70.2480%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (14 samples, 0.14%)</title><rect x="69.9980%" y="165" width="0.1389%" height="15" fill="rgb(205,127,43)"/><text x="70.2480%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.13%)</title><rect x="70.0079%" y="149" width="0.1290%" height="15" fill="rgb(250,162,2)"/><text x="70.2579%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.12%)</title><rect x="70.0179%" y="133" width="0.1191%" height="15" fill="rgb(220,13,41)"/><text x="70.2679%" y="143.50"></text></g><g><title>dyper_ops`core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.02%)</title><rect x="70.1370%" y="213" width="0.0198%" height="15" fill="rgb(249,221,25)"/><text x="70.3870%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.05%)</title><rect x="70.1568%" y="213" width="0.0496%" height="15" fill="rgb(215,208,19)"/><text x="70.4068%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.13%)</title><rect x="70.2064%" y="213" width="0.1290%" height="15" fill="rgb(236,175,2)"/><text x="70.4564%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.07%)</title><rect x="70.2660%" y="197" width="0.0695%" height="15" fill="rgb(241,52,2)"/><text x="70.5160%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="70.2858%" y="181" width="0.0496%" height="15" fill="rgb(248,140,14)"/><text x="70.5358%" y="191.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (161 samples, 1.60%)</title><rect x="68.8964%" y="229" width="1.5979%" height="15" fill="rgb(253,22,42)"/><text x="69.1464%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.16%)</title><rect x="70.3355%" y="213" width="0.1588%" height="15" fill="rgb(234,61,47)"/><text x="70.5855%" y="223.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.29%)</title><rect x="70.4942%" y="229" width="0.2878%" height="15" fill="rgb(208,226,15)"/><text x="70.7442%" y="239.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (28 samples, 0.28%)</title><rect x="70.5042%" y="213" width="0.2779%" height="15" fill="rgb(217,221,4)"/><text x="70.7542%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (27 samples, 0.27%)</title><rect x="70.5141%" y="197" width="0.2680%" height="15" fill="rgb(212,174,34)"/><text x="70.7641%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (26 samples, 0.26%)</title><rect x="70.5240%" y="181" width="0.2580%" height="15" fill="rgb(253,83,4)"/><text x="70.7740%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.24%)</title><rect x="70.5439%" y="165" width="0.2382%" height="15" fill="rgb(250,195,49)"/><text x="70.7939%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.23%)</title><rect x="70.5538%" y="149" width="0.2283%" height="15" fill="rgb(241,192,25)"/><text x="70.8038%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.11%)</title><rect x="70.6729%" y="133" width="0.1092%" height="15" fill="rgb(208,124,10)"/><text x="70.9229%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="70.7523%" y="117" width="0.0298%" height="15" fill="rgb(222,33,0)"/><text x="71.0023%" y="127.50"></text></g><g><title>dyper_ops`serde_v8::ser::Serializer::new (2 samples, 0.02%)</title><rect x="70.7821%" y="229" width="0.0198%" height="15" fill="rgb(234,209,28)"/><text x="71.0321%" y="239.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (205 samples, 2.03%)</title><rect x="68.7971%" y="245" width="2.0345%" height="15" fill="rgb(224,11,23)"/><text x="69.0471%" y="255.50">d..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.02%)</title><rect x="70.8118%" y="229" width="0.0198%" height="15" fill="rgb(232,99,1)"/><text x="71.0618%" y="239.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (379 samples, 3.76%)</title><rect x="67.0802%" y="261" width="3.7614%" height="15" fill="rgb(237,95,45)"/><text x="67.3302%" y="271.50">dype..</text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.06%)</title><rect x="70.8416%" y="261" width="0.0595%" height="15" fill="rgb(208,109,11)"/><text x="71.0916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.05%)</title><rect x="70.8515%" y="245" width="0.0496%" height="15" fill="rgb(216,190,48)"/><text x="71.1015%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="70.8515%" y="229" width="0.0496%" height="15" fill="rgb(251,171,36)"/><text x="71.1015%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.08%)</title><rect x="71.0202%" y="229" width="0.0794%" height="15" fill="rgb(230,62,22)"/><text x="71.2702%" y="239.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (413 samples, 4.10%)</title><rect x="67.0603%" y="277" width="4.0988%" height="15" fill="rgb(225,114,35)"/><text x="67.3103%" y="287.50">dype..</text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.26%)</title><rect x="70.9012%" y="261" width="0.2580%" height="15" fill="rgb(215,118,42)"/><text x="71.1512%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.22%)</title><rect x="70.9408%" y="245" width="0.2183%" height="15" fill="rgb(243,119,21)"/><text x="71.1908%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.06%)</title><rect x="71.0996%" y="229" width="0.0595%" height="15" fill="rgb(252,177,53)"/><text x="71.3496%" y="239.50"></text></g><g><title>dyper_ops`rusty_v8::scope::EscapableHandleScope&lt;C&gt;::escape (2 samples, 0.02%)</title><rect x="71.1691%" y="277" width="0.0198%" height="15" fill="rgb(237,209,29)"/><text x="71.4191%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_escapable_handle_scope_data (6 samples, 0.06%)</title><rect x="71.1989%" y="277" width="0.0595%" height="15" fill="rgb(212,65,23)"/><text x="71.4489%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.04%)</title><rect x="71.2684%" y="277" width="0.0397%" height="15" fill="rgb(230,222,46)"/><text x="71.5184%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.12%)</title><rect x="71.3081%" y="277" width="0.1191%" height="15" fill="rgb(215,135,32)"/><text x="71.5581%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.08%)</title><rect x="71.3478%" y="261" width="0.0794%" height="15" fill="rgb(246,101,22)"/><text x="71.5978%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.07%)</title><rect x="71.3577%" y="245" width="0.0695%" height="15" fill="rgb(206,107,13)"/><text x="71.6077%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="71.6455%" y="245" width="0.0595%" height="15" fill="rgb(250,100,44)"/><text x="71.8955%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.31%)</title><rect x="71.4272%" y="277" width="0.3077%" height="15" fill="rgb(231,147,38)"/><text x="71.6772%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.25%)</title><rect x="71.4867%" y="261" width="0.2481%" height="15" fill="rgb(229,8,40)"/><text x="71.7367%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.03%)</title><rect x="71.7050%" y="245" width="0.0298%" height="15" fill="rgb(221,135,30)"/><text x="71.9550%" y="255.50"></text></g><g><title>dyper_ops`serde_v8::ser::to_v8 (505 samples, 5.01%)</title><rect x="66.9015%" y="293" width="5.0119%" height="15" fill="rgb(249,193,18)"/><text x="67.1515%" y="303.50">dyper_..</text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.18%)</title><rect x="71.7348%" y="277" width="0.1786%" height="15" fill="rgb(209,133,39)"/><text x="71.9848%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.18%)</title><rect x="71.7348%" y="261" width="0.1786%" height="15" fill="rgb(232,100,14)"/><text x="71.9848%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.17%)</title><rect x="71.7447%" y="245" width="0.1687%" height="15" fill="rgb(224,185,1)"/><text x="71.9947%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.15%)</title><rect x="71.7646%" y="229" width="0.1489%" height="15" fill="rgb(223,139,8)"/><text x="72.0146%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.09%)</title><rect x="71.8241%" y="213" width="0.0893%" height="15" fill="rgb(232,213,38)"/><text x="72.0741%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="71.8738%" y="197" width="0.0397%" height="15" fill="rgb(207,94,22)"/><text x="72.1238%" y="207.50"></text></g><g><title>dyper_ops`v8::BackingStore::ByteLength (3 samples, 0.03%)</title><rect x="71.9135%" y="293" width="0.0298%" height="15" fill="rgb(219,183,54)"/><text x="72.1635%" y="303.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (1,507 samples, 14.96%)</title><rect x="57.0266%" y="309" width="14.9563%" height="15" fill="rgb(216,185,54)"/><text x="57.2766%" y="319.50">dyper_ops`deno_core::bi..</text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (3 samples, 0.03%)</title><rect x="71.9929%" y="309" width="0.0298%" height="15" fill="rgb(254,217,39)"/><text x="72.2429%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::get_current_mut (2 samples, 0.02%)</title><rect x="72.0623%" y="309" width="0.0198%" height="15" fill="rgb(240,178,23)"/><text x="72.3123%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::try_exit_scope (4 samples, 0.04%)</title><rect x="72.1020%" y="309" width="0.0397%" height="15" fill="rgb(218,11,47)"/><text x="72.3520%" y="319.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (3 samples, 0.03%)</title><rect x="72.1119%" y="293" width="0.0298%" height="15" fill="rgb(218,51,51)"/><text x="72.3619%" y="303.50"></text></g><g><title>dyper_ops`serde_v8::ser::to_v8 (2 samples, 0.02%)</title><rect x="72.1516%" y="309" width="0.0198%" height="15" fill="rgb(238,126,27)"/><text x="72.4016%" y="319.50"></text></g><g><title>dyper_ops`v8__Integer__Value (2 samples, 0.02%)</title><rect x="72.2013%" y="309" width="0.0198%" height="15" fill="rgb(249,202,22)"/><text x="72.4513%" y="319.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1,539 samples, 15.27%)</title><rect x="56.9671%" y="325" width="15.2739%" height="15" fill="rgb(254,195,49)"/><text x="57.2171%" y="335.50">dyper_ops`&lt;extern &quot;C&quot; f..</text></g><g><title>dyper_ops`rusty_v8::function::ReturnValue::from_function_callback_info (2 samples, 0.02%)</title><rect x="72.2608%" y="325" width="0.0198%" height="15" fill="rgb(208,123,14)"/><text x="72.5108%" y="335.50"></text></g><g><title>0x41e00085958 (1,557 samples, 15.45%)</title><rect x="56.8380%" y="357" width="15.4526%" height="15" fill="rgb(224,200,8)"/><text x="57.0880%" y="367.50">0x41e00085958</text></g><g><title>dyper_ops`Builtins_CallApiCallback (1,556 samples, 15.44%)</title><rect x="56.8480%" y="341" width="15.4426%" height="15" fill="rgb(217,61,36)"/><text x="57.0980%" y="351.50">dyper_ops`Builtins_CallA..</text></g><g><title>0x41e00085a1f (6 samples, 0.06%)</title><rect x="72.3005%" y="357" width="0.0595%" height="15" fill="rgb(206,35,45)"/><text x="72.5505%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (6 samples, 0.06%)</title><rect x="72.3005%" y="341" width="0.0595%" height="15" fill="rgb(217,65,33)"/><text x="72.5505%" y="351.50"></text></g><g><title>0x41e00085beb (9 samples, 0.09%)</title><rect x="72.4196%" y="357" width="0.0893%" height="15" fill="rgb(222,158,48)"/><text x="72.6696%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC_Megamorphic (9 samples, 0.09%)</title><rect x="72.4196%" y="341" width="0.0893%" height="15" fill="rgb(254,2,54)"/><text x="72.6696%" y="351.50"></text></g><g><title>0x41e00085d58 (4 samples, 0.04%)</title><rect x="72.5983%" y="357" width="0.0397%" height="15" fill="rgb(250,143,38)"/><text x="72.8483%" y="367.50"></text></g><g><title>dyper_ops`Builtins_KeyedLoadIC_Megamorphic (4 samples, 0.04%)</title><rect x="72.5983%" y="341" width="0.0397%" height="15" fill="rgb(248,25,0)"/><text x="72.8483%" y="351.50"></text></g><g><title>dyper_ops`&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="72.8067%" y="293" width="0.0198%" height="15" fill="rgb(206,152,27)"/><text x="73.0567%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::scope::HandleScope::get_current_context (3 samples, 0.03%)</title><rect x="72.9754%" y="229" width="0.0298%" height="15" fill="rgb(240,77,30)"/><text x="73.2254%" y="239.50"></text></g><g><title>dyper_ops`v8::Isolate::GetCurrentContext (2 samples, 0.02%)</title><rect x="72.9853%" y="213" width="0.0198%" height="15" fill="rgb(231,5,3)"/><text x="73.2353%" y="223.50"></text></g><g><title>dyper_ops`rusty_v8::value::_&lt;impl rusty_v8::data::Value&gt;::integer_value (6 samples, 0.06%)</title><rect x="72.9754%" y="245" width="0.0595%" height="15" fill="rgb(207,226,32)"/><text x="73.2254%" y="255.50"></text></g><g><title>dyper_ops`serde_v8::de::Deserializer::new (2 samples, 0.02%)</title><rect x="73.0349%" y="245" width="0.0198%" height="15" fill="rgb(222,207,47)"/><text x="73.2849%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.03%)</title><rect x="73.0846%" y="213" width="0.0298%" height="15" fill="rgb(229,115,45)"/><text x="73.3346%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="73.2235%" y="181" width="0.0397%" height="15" fill="rgb(224,191,6)"/><text x="73.4735%" y="191.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_async::_{{closure}} (45 samples, 0.45%)</title><rect x="72.9158%" y="261" width="0.4466%" height="15" fill="rgb(230,227,24)"/><text x="73.1658%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (31 samples, 0.31%)</title><rect x="73.0548%" y="245" width="0.3077%" height="15" fill="rgb(228,80,19)"/><text x="73.3048%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (29 samples, 0.29%)</title><rect x="73.0746%" y="229" width="0.2878%" height="15" fill="rgb(247,229,0)"/><text x="73.3246%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.25%)</title><rect x="73.1143%" y="213" width="0.2481%" height="15" fill="rgb(237,194,15)"/><text x="73.3643%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.25%)</title><rect x="73.1143%" y="197" width="0.2481%" height="15" fill="rgb(219,203,20)"/><text x="73.3643%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.09%)</title><rect x="73.2731%" y="181" width="0.0893%" height="15" fill="rgb(234,128,8)"/><text x="73.5231%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.05%)</title><rect x="73.3128%" y="165" width="0.0496%" height="15" fill="rgb(248,202,8)"/><text x="73.5628%" y="175.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (49 samples, 0.49%)</title><rect x="72.8861%" y="277" width="0.4863%" height="15" fill="rgb(206,104,37)"/><text x="73.1361%" y="287.50"></text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (54 samples, 0.54%)</title><rect x="72.8464%" y="293" width="0.5359%" height="15" fill="rgb(223,8,27)"/><text x="73.0964%" y="303.50"></text></g><g><title>dyper_ops`deno_core::shared_queue::SharedQueue::as_u32_slice (5 samples, 0.05%)</title><rect x="73.3823%" y="293" width="0.0496%" height="15" fill="rgb(216,217,28)"/><text x="73.6323%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="73.6205%" y="213" width="0.0397%" height="15" fill="rgb(249,199,1)"/><text x="73.8705%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.28%)</title><rect x="73.5510%" y="261" width="0.2779%" height="15" fill="rgb(240,85,17)"/><text x="73.8010%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.28%)</title><rect x="73.5510%" y="245" width="0.2779%" height="15" fill="rgb(206,108,45)"/><text x="73.8010%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.28%)</title><rect x="73.5510%" y="229" width="0.2779%" height="15" fill="rgb(245,210,41)"/><text x="73.8010%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.17%)</title><rect x="73.6602%" y="213" width="0.1687%" height="15" fill="rgb(206,13,37)"/><text x="73.9102%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.07%)</title><rect x="73.7594%" y="197" width="0.0695%" height="15" fill="rgb(250,61,18)"/><text x="74.0094%" y="207.50"></text></g><g><title>dyper_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (41 samples, 0.41%)</title><rect x="73.4319%" y="293" width="0.4069%" height="15" fill="rgb(235,172,48)"/><text x="73.6819%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (30 samples, 0.30%)</title><rect x="73.5411%" y="277" width="0.2977%" height="15" fill="rgb(249,201,17)"/><text x="73.7911%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::data::_&lt;impl core::convert::TryFrom&lt;rusty_v8::handle::Local&lt;rusty_v8::data::Value&gt;&gt; for rusty_v8::handle::Local&lt;rusty_v8::data::Integer&gt;&gt;::try_from (3 samples, 0.03%)</title><rect x="73.8388%" y="293" width="0.0298%" height="15" fill="rgb(219,208,6)"/><text x="74.0888%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_slot (6 samples, 0.06%)</title><rect x="73.8785%" y="293" width="0.0595%" height="15" fill="rgb(248,31,23)"/><text x="74.1285%" y="303.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__get (2 samples, 0.02%)</title><rect x="73.9381%" y="293" width="0.0198%" height="15" fill="rgb(245,15,42)"/><text x="74.1881%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="73.9778%" y="261" width="0.0198%" height="15" fill="rgb(222,217,39)"/><text x="74.2278%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.03%)</title><rect x="74.1564%" y="229" width="0.0298%" height="15" fill="rgb(210,219,27)"/><text x="74.4064%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (35 samples, 0.35%)</title><rect x="73.9678%" y="293" width="0.3474%" height="15" fill="rgb(252,166,36)"/><text x="74.2178%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.34%)</title><rect x="73.9778%" y="277" width="0.3374%" height="15" fill="rgb(245,132,34)"/><text x="74.2278%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.32%)</title><rect x="73.9976%" y="261" width="0.3176%" height="15" fill="rgb(236,54,3)"/><text x="74.2476%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.31%)</title><rect x="74.0075%" y="245" width="0.3077%" height="15" fill="rgb(241,173,43)"/><text x="74.2575%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.13%)</title><rect x="74.1862%" y="229" width="0.1290%" height="15" fill="rgb(215,190,9)"/><text x="74.4362%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="74.2954%" y="213" width="0.0198%" height="15" fill="rgb(242,101,16)"/><text x="74.5454%" y="223.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (163 samples, 1.62%)</title><rect x="72.7074%" y="309" width="1.6177%" height="15" fill="rgb(223,190,21)"/><text x="72.9574%" y="319.50"></text></g><g><title>dyper_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (4 samples, 0.04%)</title><rect x="74.3251%" y="309" width="0.0397%" height="15" fill="rgb(215,228,25)"/><text x="74.5751%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::function::FunctionCallbackArguments::get (2 samples, 0.02%)</title><rect x="74.3648%" y="309" width="0.0198%" height="15" fill="rgb(225,36,22)"/><text x="74.6148%" y="319.50"></text></g><g><title>dyper_ops`rusty_v8::number::_&lt;impl rusty_v8::data::Integer&gt;::value (3 samples, 0.03%)</title><rect x="74.3847%" y="309" width="0.0298%" height="15" fill="rgb(251,106,46)"/><text x="74.6347%" y="319.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="74.4343%" y="293" width="0.0198%" height="15" fill="rgb(208,90,1)"/><text x="74.6843%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::notify_scope_dropped (4 samples, 0.04%)</title><rect x="74.4244%" y="309" width="0.0397%" height="15" fill="rgb(243,10,4)"/><text x="74.6744%" y="319.50"></text></g><g><title>0x41e00085dab (187 samples, 1.86%)</title><rect x="72.6479%" y="357" width="1.8559%" height="15" fill="rgb(212,137,27)"/><text x="72.8979%" y="367.50">0..</text></g><g><title>dyper_ops`Builtins_CallApiCallback (187 samples, 1.86%)</title><rect x="72.6479%" y="341" width="1.8559%" height="15" fill="rgb(231,220,49)"/><text x="72.8979%" y="351.50">d..</text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (184 samples, 1.83%)</title><rect x="72.6776%" y="325" width="1.8261%" height="15" fill="rgb(237,96,20)"/><text x="72.9276%" y="335.50">d..</text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (6 samples, 0.06%)</title><rect x="74.8611%" y="277" width="0.0595%" height="15" fill="rgb(239,229,30)"/><text x="75.1111%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="74.8809%" y="261" width="0.0397%" height="15" fill="rgb(219,65,33)"/><text x="75.1309%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.04%)</title><rect x="74.8809%" y="245" width="0.0397%" height="15" fill="rgb(243,134,7)"/><text x="75.1309%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="74.8908%" y="229" width="0.0298%" height="15" fill="rgb(216,177,54)"/><text x="75.1408%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="74.8908%" y="213" width="0.0298%" height="15" fill="rgb(211,160,20)"/><text x="75.1408%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="74.9008%" y="197" width="0.0198%" height="15" fill="rgb(239,85,39)"/><text x="75.1508%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::OrderedHashMap&gt; v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap, 2&gt;::Rehash&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (18 samples, 0.18%)</title><rect x="74.7618%" y="293" width="0.1786%" height="15" fill="rgb(232,125,22)"/><text x="75.0118%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Object::GetSimpleHash (2 samples, 0.02%)</title><rect x="74.9206%" y="277" width="0.0198%" height="15" fill="rgb(244,57,34)"/><text x="75.1706%" y="287.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (20 samples, 0.20%)</title><rect x="74.7519%" y="325" width="0.1985%" height="15" fill="rgb(214,203,32)"/><text x="75.0019%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_MapGrow (20 samples, 0.20%)</title><rect x="74.7519%" y="309" width="0.1985%" height="15" fill="rgb(207,58,43)"/><text x="75.0019%" y="319.50"></text></g><g><title>0x41e00085f7e (39 samples, 0.39%)</title><rect x="74.5732%" y="357" width="0.3871%" height="15" fill="rgb(215,193,15)"/><text x="74.8232%" y="367.50"></text></g><g><title>dyper_ops`Builtins_MapPrototypeSet (39 samples, 0.39%)</title><rect x="74.5732%" y="341" width="0.3871%" height="15" fill="rgb(232,15,44)"/><text x="74.8232%" y="351.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.03%)</title><rect x="75.0893%" y="325" width="0.0298%" height="15" fill="rgb(212,3,48)"/><text x="75.3393%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (3 samples, 0.03%)</title><rect x="75.0893%" y="309" width="0.0298%" height="15" fill="rgb(218,128,7)"/><text x="75.3393%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (3 samples, 0.03%)</title><rect x="75.0893%" y="293" width="0.0298%" height="15" fill="rgb(226,216,39)"/><text x="75.3393%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (3 samples, 0.03%)</title><rect x="75.0893%" y="277" width="0.0298%" height="15" fill="rgb(243,47,51)"/><text x="75.3393%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="75.0893%" y="261" width="0.0298%" height="15" fill="rgb(241,183,40)"/><text x="75.3393%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="75.0893%" y="245" width="0.0298%" height="15" fill="rgb(231,217,32)"/><text x="75.3393%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="75.0893%" y="229" width="0.0298%" height="15" fill="rgb(229,61,38)"/><text x="75.3393%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (3 samples, 0.03%)</title><rect x="75.0893%" y="213" width="0.0298%" height="15" fill="rgb(225,210,5)"/><text x="75.3393%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="75.0893%" y="197" width="0.0298%" height="15" fill="rgb(231,79,45)"/><text x="75.3393%" y="207.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitUncaught (18 samples, 0.18%)</title><rect x="74.9702%" y="341" width="0.1786%" height="15" fill="rgb(224,100,7)"/><text x="75.2202%" y="351.50"></text></g><g><title>dyper_ops`Builtins_PerformPromiseThen (3 samples, 0.03%)</title><rect x="75.1191%" y="325" width="0.0298%" height="15" fill="rgb(241,198,18)"/><text x="75.3691%" y="335.50"></text></g><g><title>0x41e00085f97 (19 samples, 0.19%)</title><rect x="74.9702%" y="357" width="0.1886%" height="15" fill="rgb(252,97,53)"/><text x="75.2202%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="75.3672%" y="229" width="0.0298%" height="15" fill="rgb(220,88,7)"/><text x="75.6172%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (3 samples, 0.03%)</title><rect x="75.3672%" y="213" width="0.0298%" height="15" fill="rgb(213,176,14)"/><text x="75.6172%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="75.3672%" y="197" width="0.0298%" height="15" fill="rgb(246,73,7)"/><text x="75.6172%" y="207.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobHandle::Join (2 samples, 0.02%)</title><rect x="75.3771%" y="181" width="0.0198%" height="15" fill="rgb(245,64,36)"/><text x="75.6271%" y="191.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (4 samples, 0.04%)</title><rect x="75.3672%" y="325" width="0.0397%" height="15" fill="rgb(245,80,10)"/><text x="75.6172%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (4 samples, 0.04%)</title><rect x="75.3672%" y="309" width="0.0397%" height="15" fill="rgb(232,107,50)"/><text x="75.6172%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (4 samples, 0.04%)</title><rect x="75.3672%" y="293" width="0.0397%" height="15" fill="rgb(253,3,0)"/><text x="75.6172%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="75.3672%" y="277" width="0.0397%" height="15" fill="rgb(212,99,53)"/><text x="75.6172%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.04%)</title><rect x="75.3672%" y="261" width="0.0397%" height="15" fill="rgb(249,111,54)"/><text x="75.6172%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (4 samples, 0.04%)</title><rect x="75.3672%" y="245" width="0.0397%" height="15" fill="rgb(249,55,30)"/><text x="75.6172%" y="255.50"></text></g><g><title>0x41e000860a6 (26 samples, 0.26%)</title><rect x="75.1687%" y="357" width="0.2580%" height="15" fill="rgb(237,47,42)"/><text x="75.4187%" y="367.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitUncaught (25 samples, 0.25%)</title><rect x="75.1786%" y="341" width="0.2481%" height="15" fill="rgb(211,20,18)"/><text x="75.4286%" y="351.50"></text></g><g><title>dyper_ops`Builtins_PerformPromiseThen (2 samples, 0.02%)</title><rect x="75.4069%" y="325" width="0.0198%" height="15" fill="rgb(231,203,46)"/><text x="75.6569%" y="335.50"></text></g><g><title>0x41e000860c8 (4 samples, 0.04%)</title><rect x="75.4268%" y="357" width="0.0397%" height="15" fill="rgb(237,142,3)"/><text x="75.6768%" y="367.50"></text></g><g><title>0x41e00086278 (3 samples, 0.03%)</title><rect x="75.4863%" y="357" width="0.0298%" height="15" fill="rgb(241,107,1)"/><text x="75.7363%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.03%)</title><rect x="75.4863%" y="341" width="0.0298%" height="15" fill="rgb(229,83,13)"/><text x="75.7363%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (3 samples, 0.03%)</title><rect x="75.4863%" y="325" width="0.0298%" height="15" fill="rgb(241,91,40)"/><text x="75.7363%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (3 samples, 0.03%)</title><rect x="75.4863%" y="309" width="0.0298%" height="15" fill="rgb(225,3,45)"/><text x="75.7363%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (3 samples, 0.03%)</title><rect x="75.4863%" y="293" width="0.0298%" height="15" fill="rgb(244,223,14)"/><text x="75.7363%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="75.4863%" y="277" width="0.0298%" height="15" fill="rgb(224,124,37)"/><text x="75.7363%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="75.4863%" y="261" width="0.0298%" height="15" fill="rgb(251,171,30)"/><text x="75.7363%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (3 samples, 0.03%)</title><rect x="75.4863%" y="245" width="0.0298%" height="15" fill="rgb(236,46,54)"/><text x="75.7363%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (3 samples, 0.03%)</title><rect x="75.4863%" y="229" width="0.0298%" height="15" fill="rgb(245,213,5)"/><text x="75.7363%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (3 samples, 0.03%)</title><rect x="75.4863%" y="213" width="0.0298%" height="15" fill="rgb(230,144,27)"/><text x="75.7363%" y="223.50"></text></g><g><title>0x41e00086292 (2 samples, 0.02%)</title><rect x="75.5161%" y="357" width="0.0198%" height="15" fill="rgb(220,86,6)"/><text x="75.7661%" y="367.50"></text></g><g><title>dyper_ops`v8::base::ConditionVariable::~ConditionVariable (2 samples, 0.02%)</title><rect x="75.5756%" y="165" width="0.0198%" height="15" fill="rgb(240,20,13)"/><text x="75.8256%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.02%)</title><rect x="75.5756%" y="149" width="0.0198%" height="15" fill="rgb(217,89,34)"/><text x="75.8256%" y="159.50"></text></g><g><title>0x41e00086471 (7 samples, 0.07%)</title><rect x="75.5359%" y="357" width="0.0695%" height="15" fill="rgb(229,13,5)"/><text x="75.7859%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (7 samples, 0.07%)</title><rect x="75.5359%" y="341" width="0.0695%" height="15" fill="rgb(244,67,35)"/><text x="75.7859%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_AllocateInYoungGeneration (7 samples, 0.07%)</title><rect x="75.5359%" y="325" width="0.0695%" height="15" fill="rgb(221,40,2)"/><text x="75.7859%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewFillerObject (7 samples, 0.07%)</title><rect x="75.5359%" y="309" width="0.0695%" height="15" fill="rgb(237,157,21)"/><text x="75.7859%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (7 samples, 0.07%)</title><rect x="75.5359%" y="293" width="0.0695%" height="15" fill="rgb(222,94,11)"/><text x="75.7859%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (7 samples, 0.07%)</title><rect x="75.5359%" y="277" width="0.0695%" height="15" fill="rgb(249,113,6)"/><text x="75.7859%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (7 samples, 0.07%)</title><rect x="75.5359%" y="261" width="0.0695%" height="15" fill="rgb(238,137,36)"/><text x="75.7859%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (6 samples, 0.06%)</title><rect x="75.5459%" y="245" width="0.0595%" height="15" fill="rgb(210,102,26)"/><text x="75.7959%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (6 samples, 0.06%)</title><rect x="75.5459%" y="229" width="0.0595%" height="15" fill="rgb(218,30,30)"/><text x="75.7959%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (6 samples, 0.06%)</title><rect x="75.5459%" y="213" width="0.0595%" height="15" fill="rgb(214,67,26)"/><text x="75.7959%" y="223.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobHandle::Join (4 samples, 0.04%)</title><rect x="75.5657%" y="197" width="0.0397%" height="15" fill="rgb(251,9,53)"/><text x="75.8157%" y="207.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobState::~DefaultJobState (3 samples, 0.03%)</title><rect x="75.5756%" y="181" width="0.0298%" height="15" fill="rgb(228,204,25)"/><text x="75.8256%" y="191.50"></text></g><g><title>0x41e000865f3 (2 samples, 0.02%)</title><rect x="75.6054%" y="357" width="0.0198%" height="15" fill="rgb(207,153,8)"/><text x="75.8554%" y="367.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (12 samples, 0.12%)</title><rect x="75.6451%" y="357" width="0.1191%" height="15" fill="rgb(242,9,16)"/><text x="75.8951%" y="367.50"></text></g><g><title>0x41e0008537a (2 samples, 0.02%)</title><rect x="75.7741%" y="341" width="0.0198%" height="15" fill="rgb(217,211,10)"/><text x="76.0241%" y="351.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (2 samples, 0.02%)</title><rect x="75.7741%" y="325" width="0.0198%" height="15" fill="rgb(219,228,52)"/><text x="76.0241%" y="335.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2 samples, 0.02%)</title><rect x="75.7741%" y="309" width="0.0198%" height="15" fill="rgb(231,92,29)"/><text x="76.0241%" y="319.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (2 samples, 0.02%)</title><rect x="75.7741%" y="293" width="0.0198%" height="15" fill="rgb(232,8,23)"/><text x="76.0241%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::PrepareJobWithHandleScope (2 samples, 0.02%)</title><rect x="75.7940%" y="261" width="0.0198%" height="15" fill="rgb(216,211,34)"/><text x="76.0440%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::OptimizedCompilationJob::PrepareJob (2 samples, 0.02%)</title><rect x="75.7940%" y="245" width="0.0198%" height="15" fill="rgb(236,151,0)"/><text x="76.0440%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineCompilationJob::PrepareJobImpl (2 samples, 0.02%)</title><rect x="75.7940%" y="229" width="0.0198%" height="15" fill="rgb(209,168,3)"/><text x="76.0440%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::CreateGraph (2 samples, 0.02%)</title><rect x="75.7940%" y="213" width="0.0198%" height="15" fill="rgb(208,129,28)"/><text x="76.0440%" y="223.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.03%)</title><rect x="75.7940%" y="341" width="0.0298%" height="15" fill="rgb(229,78,22)"/><text x="76.0440%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Runtime_CompileOptimized_Concurrent (3 samples, 0.03%)</title><rect x="75.7940%" y="325" width="0.0298%" height="15" fill="rgb(228,187,13)"/><text x="76.0440%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="75.7940%" y="309" width="0.0298%" height="15" fill="rgb(240,119,24)"/><text x="76.0440%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.03%)</title><rect x="75.7940%" y="293" width="0.0298%" height="15" fill="rgb(209,194,42)"/><text x="76.0440%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::GetOptimizedCode(v8::internal::Handle (3 samples, 0.03%)</title><rect x="75.7940%" y="277" width="0.0298%" height="15" fill="rgb(247,200,46)"/><text x="76.0440%" y="287.50"></text></g><g><title>dyper_ops`&lt;&amp;mut serde_v8::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.02%)</title><rect x="75.8436%" y="213" width="0.0198%" height="15" fill="rgb(218,76,16)"/><text x="76.0936%" y="223.50"></text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (3 samples, 0.03%)</title><rect x="75.8436%" y="261" width="0.0298%" height="15" fill="rgb(225,21,48)"/><text x="76.0936%" y="271.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (3 samples, 0.03%)</title><rect x="75.8436%" y="245" width="0.0298%" height="15" fill="rgb(239,223,50)"/><text x="76.0936%" y="255.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (3 samples, 0.03%)</title><rect x="75.8436%" y="229" width="0.0298%" height="15" fill="rgb(244,45,21)"/><text x="76.0936%" y="239.50"></text></g><g><title>0x41e00085171 (5 samples, 0.05%)</title><rect x="75.8436%" y="325" width="0.0496%" height="15" fill="rgb(232,33,43)"/><text x="76.0936%" y="335.50"></text></g><g><title>dyper_ops`Builtins_CallApiCallback (5 samples, 0.05%)</title><rect x="75.8436%" y="309" width="0.0496%" height="15" fill="rgb(209,8,3)"/><text x="76.0936%" y="319.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (5 samples, 0.05%)</title><rect x="75.8436%" y="293" width="0.0496%" height="15" fill="rgb(214,25,53)"/><text x="76.0936%" y="303.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (5 samples, 0.05%)</title><rect x="75.8436%" y="277" width="0.0496%" height="15" fill="rgb(254,186,54)"/><text x="76.0936%" y="287.50"></text></g><g><title>dyper_ops`serde_v8::ser::to_v8 (2 samples, 0.02%)</title><rect x="75.8734%" y="261" width="0.0198%" height="15" fill="rgb(208,174,49)"/><text x="76.1234%" y="271.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (2 samples, 0.02%)</title><rect x="75.8734%" y="245" width="0.0198%" height="15" fill="rgb(233,191,51)"/><text x="76.1234%" y="255.50"></text></g><g><title>dyper_ops`Builtins_ConstructHandler (3 samples, 0.03%)</title><rect x="75.8932%" y="325" width="0.0298%" height="15" fill="rgb(222,134,10)"/><text x="76.1432%" y="335.50"></text></g><g><title>dyper_ops`Builtins_JSBuiltinsConstructStub (3 samples, 0.03%)</title><rect x="75.8932%" y="309" width="0.0298%" height="15" fill="rgb(230,226,20)"/><text x="76.1432%" y="319.50"></text></g><g><title>dyper_ops`Builtins_PromiseConstructor (3 samples, 0.03%)</title><rect x="75.8932%" y="293" width="0.0298%" height="15" fill="rgb(251,111,25)"/><text x="76.1432%" y="303.50"></text></g><g><title>dyper_ops`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.02%)</title><rect x="75.9329%" y="149" width="0.0198%" height="15" fill="rgb(224,40,46)"/><text x="76.1829%" y="159.50"></text></g><g><title>dyper_ops`&lt;serde_v8::de::SeqAccess as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.02%)</title><rect x="75.9329%" y="133" width="0.0198%" height="15" fill="rgb(236,108,47)"/><text x="76.1829%" y="143.50"></text></g><g><title>dyper_ops`&lt;&amp;mut serde_v8::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.04%)</title><rect x="75.9329%" y="165" width="0.0397%" height="15" fill="rgb(234,93,0)"/><text x="76.1829%" y="175.50"></text></g><g><title>dyper_ops`dyper_ops::op_respond (2 samples, 0.02%)</title><rect x="75.9726%" y="165" width="0.0198%" height="15" fill="rgb(224,213,32)"/><text x="76.2226%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="75.9726%" y="149" width="0.0198%" height="15" fill="rgb(251,11,48)"/><text x="76.2226%" y="159.50"></text></g><g><title>dyper_ops`deno_core::ops::OpTable::route_op (8 samples, 0.08%)</title><rect x="75.9230%" y="213" width="0.0794%" height="15" fill="rgb(236,173,5)"/><text x="76.1730%" y="223.50"></text></g><g><title>dyper_ops`&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (8 samples, 0.08%)</title><rect x="75.9230%" y="197" width="0.0794%" height="15" fill="rgb(230,95,12)"/><text x="76.1730%" y="207.50"></text></g><g><title>dyper_ops`deno_core::ops::json_op_sync::_{{closure}} (8 samples, 0.08%)</title><rect x="75.9230%" y="181" width="0.0794%" height="15" fill="rgb(232,209,1)"/><text x="76.1730%" y="191.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (2 samples, 0.02%)</title><rect x="76.0123%" y="133" width="0.0198%" height="15" fill="rgb(232,6,1)"/><text x="76.2623%" y="143.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (4 samples, 0.04%)</title><rect x="76.0024%" y="181" width="0.0397%" height="15" fill="rgb(210,224,50)"/><text x="76.2524%" y="191.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (3 samples, 0.03%)</title><rect x="76.0123%" y="165" width="0.0298%" height="15" fill="rgb(228,127,35)"/><text x="76.2623%" y="175.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (3 samples, 0.03%)</title><rect x="76.0123%" y="149" width="0.0298%" height="15" fill="rgb(245,102,45)"/><text x="76.2623%" y="159.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (5 samples, 0.05%)</title><rect x="76.0024%" y="197" width="0.0496%" height="15" fill="rgb(214,1,49)"/><text x="76.2524%" y="207.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (14 samples, 0.14%)</title><rect x="75.9230%" y="325" width="0.1389%" height="15" fill="rgb(226,163,40)"/><text x="76.1730%" y="335.50"></text></g><g><title>dyper_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (14 samples, 0.14%)</title><rect x="75.9230%" y="309" width="0.1389%" height="15" fill="rgb(239,212,28)"/><text x="76.1730%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Builtin_Impl_HandleApiCall (14 samples, 0.14%)</title><rect x="75.9230%" y="293" width="0.1389%" height="15" fill="rgb(220,20,13)"/><text x="76.1730%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (14 samples, 0.14%)</title><rect x="75.9230%" y="277" width="0.1389%" height="15" fill="rgb(210,164,35)"/><text x="76.1730%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FunctionCallbackArguments::Call (14 samples, 0.14%)</title><rect x="75.9230%" y="261" width="0.1389%" height="15" fill="rgb(248,109,41)"/><text x="76.1730%" y="271.50"></text></g><g><title>dyper_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (14 samples, 0.14%)</title><rect x="75.9230%" y="245" width="0.1389%" height="15" fill="rgb(238,23,50)"/><text x="76.1730%" y="255.50"></text></g><g><title>dyper_ops`deno_core::bindings::send (14 samples, 0.14%)</title><rect x="75.9230%" y="229" width="0.1389%" height="15" fill="rgb(211,48,49)"/><text x="76.1730%" y="239.50"></text></g><g><title>dyper_ops`serde_v8::ser::to_v8 (6 samples, 0.06%)</title><rect x="76.0024%" y="213" width="0.0595%" height="15" fill="rgb(223,36,21)"/><text x="76.2524%" y="223.50"></text></g><g><title>dyper_ops`Builtins_InvokeIntrinsicHandler (2 samples, 0.02%)</title><rect x="76.0619%" y="325" width="0.0198%" height="15" fill="rgb(207,123,46)"/><text x="76.3119%" y="335.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (26 samples, 0.26%)</title><rect x="75.8436%" y="341" width="0.2580%" height="15" fill="rgb(240,218,32)"/><text x="76.0936%" y="351.50"></text></g><g><title>dyper_ops`Builtins_InvokeIntrinsicHandler (3 samples, 0.03%)</title><rect x="76.1016%" y="341" width="0.0298%" height="15" fill="rgb(252,5,43)"/><text x="76.3516%" y="351.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitUncaught (3 samples, 0.03%)</title><rect x="76.1016%" y="325" width="0.0298%" height="15" fill="rgb(252,84,19)"/><text x="76.3516%" y="335.50"></text></g><g><title>dyper_ops`Builtins_InterpreterEntryTrampoline (41 samples, 0.41%)</title><rect x="75.7642%" y="357" width="0.4069%" height="15" fill="rgb(243,152,39)"/><text x="76.0142%" y="367.50"></text></g><g><title>dyper_ops`Builtins_LoadIC (5 samples, 0.05%)</title><rect x="76.1810%" y="357" width="0.0496%" height="15" fill="rgb(234,160,15)"/><text x="76.4310%" y="367.50"></text></g><g><title>dyper_ops`Builtins_AsyncFunctionAwaitResolveClosure (2,131 samples, 21.15%)</title><rect x="55.1211%" y="373" width="21.1493%" height="15" fill="rgb(237,34,20)"/><text x="55.3711%" y="383.50">dyper_ops`Builtins_AsyncFunctionA..</text></g><g><title>dyper_ops`Builtins_LoadICTrampoline (4 samples, 0.04%)</title><rect x="76.2306%" y="357" width="0.0397%" height="15" fill="rgb(229,97,13)"/><text x="76.4806%" y="367.50"></text></g><g><title>dyper_ops`Builtins_JSRunMicrotasksEntry (2,199 samples, 21.82%)</title><rect x="54.6745%" y="421" width="21.8241%" height="15" fill="rgb(234,71,50)"/><text x="54.9245%" y="431.50">dyper_ops`Builtins_JSRunMicrotasks..</text></g><g><title>dyper_ops`Builtins_RunMicrotasks (2,195 samples, 21.78%)</title><rect x="54.7142%" y="405" width="21.7844%" height="15" fill="rgb(253,155,4)"/><text x="54.9642%" y="415.50">dyper_ops`Builtins_RunMicrotasks</text></g><g><title>dyper_ops`Builtins_PromiseFulfillReactionJob (2,159 samples, 21.43%)</title><rect x="55.0715%" y="389" width="21.4272%" height="15" fill="rgb(222,185,37)"/><text x="55.3215%" y="399.50">dyper_ops`Builtins_PromiseFulfillR..</text></g><g><title>dyper_ops`Builtins_ResumeGeneratorTrampoline (23 samples, 0.23%)</title><rect x="76.2703%" y="373" width="0.2283%" height="15" fill="rgb(251,177,13)"/><text x="76.5203%" y="383.50"></text></g><g><title>dyper_ops`v8_Default_embedded_blob_code_data_ (8 samples, 0.08%)</title><rect x="76.4192%" y="357" width="0.0794%" height="15" fill="rgb(250,179,40)"/><text x="76.6692%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2,207 samples, 21.90%)</title><rect x="54.6149%" y="437" width="21.9035%" height="15" fill="rgb(242,44,2)"/><text x="54.8649%" y="447.50">dyper_ops`v8::internal::(anonymous ..</text></g><g><title>dyper_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2,368 samples, 23.50%)</title><rect x="53.0270%" y="533" width="23.5014%" height="15" fill="rgb(216,177,13)"/><text x="53.2770%" y="543.50">dyper_ops`v8::Function::Call(v8::Loca..</text></g><g><title>dyper_ops`v8::internal::Isolate::FireCallCompletedCallback (2,223 samples, 22.06%)</title><rect x="54.4661%" y="517" width="22.0623%" height="15" fill="rgb(216,106,43)"/><text x="54.7161%" y="527.50">dyper_ops`v8::internal::Isolate::Fi..</text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::PerformCheckpoint (2,223 samples, 22.06%)</title><rect x="54.4661%" y="501" width="22.0623%" height="15" fill="rgb(216,183,2)"/><text x="54.7161%" y="511.50">dyper_ops`v8::internal::MicrotaskQu..</text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::RunMicrotasks (2,219 samples, 22.02%)</title><rect x="54.5058%" y="485" width="22.0226%" height="15" fill="rgb(249,75,3)"/><text x="54.7558%" y="495.50">dyper_ops`v8::internal::MicrotaskQu..</text></g><g><title>dyper_ops`v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*, v8::internal::MaybeHandle (2,213 samples, 21.96%)</title><rect x="54.5653%" y="469" width="21.9631%" height="15" fill="rgb(219,67,39)"/><text x="54.8153%" y="479.50">dyper_ops`v8::internal::Execution::..</text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (2,208 samples, 21.91%)</title><rect x="54.6149%" y="453" width="21.9135%" height="15" fill="rgb(253,228,2)"/><text x="54.8649%" y="463.50">dyper_ops`v8::internal::(anonymous ..</text></g><g><title>dyper_ops`rusty_v8::function::_&lt;impl rusty_v8::data::Function&gt;::call (2,372 samples, 23.54%)</title><rect x="52.9972%" y="549" width="23.5411%" height="15" fill="rgb(235,138,27)"/><text x="53.2472%" y="559.50">dyper_ops`rusty_v8::function::_&lt;impl ..</text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::get_annex (3 samples, 0.03%)</title><rect x="76.5482%" y="549" width="0.0298%" height="15" fill="rgb(236,97,51)"/><text x="76.7982%" y="559.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (3 samples, 0.03%)</title><rect x="76.6078%" y="517" width="0.0298%" height="15" fill="rgb(240,80,30)"/><text x="76.8578%" y="527.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::try_exit_scope (7 samples, 0.07%)</title><rect x="76.5879%" y="533" width="0.0695%" height="15" fill="rgb(230,178,19)"/><text x="76.8379%" y="543.50"></text></g><g><title>dyper_ops`v8__Isolate__SetData (2 samples, 0.02%)</title><rect x="76.6376%" y="517" width="0.0198%" height="15" fill="rgb(210,190,27)"/><text x="76.8876%" y="527.50"></text></g><g><title>dyper_ops`rusty_v8::number::_&lt;impl rusty_v8::data::Integer&gt;::new (8 samples, 0.08%)</title><rect x="76.5879%" y="549" width="0.0794%" height="15" fill="rgb(222,107,31)"/><text x="76.8379%" y="559.50"></text></g><g><title>dyper_ops`v8::Context::Exit (6 samples, 0.06%)</title><rect x="76.7368%" y="485" width="0.0595%" height="15" fill="rgb(216,127,34)"/><text x="76.9868%" y="495.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (9 samples, 0.09%)</title><rect x="76.7368%" y="501" width="0.0893%" height="15" fill="rgb(234,116,52)"/><text x="76.9868%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::HandleScope::DeleteExtensions (3 samples, 0.03%)</title><rect x="76.7963%" y="485" width="0.0298%" height="15" fill="rgb(222,124,15)"/><text x="77.0463%" y="495.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::isolate::OwnedIsolate as rusty_v8::scope::getter::GetScopeData&gt;::get_scope_data_mut (13 samples, 0.13%)</title><rect x="76.7070%" y="533" width="0.1290%" height="15" fill="rgb(231,179,28)"/><text x="76.9570%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::try_exit_scope (11 samples, 0.11%)</title><rect x="76.7269%" y="517" width="0.1092%" height="15" fill="rgb(226,93,45)"/><text x="76.9769%" y="527.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::IsolateHandle::get_isolate_ptr (2 samples, 0.02%)</title><rect x="76.8360%" y="533" width="0.0198%" height="15" fill="rgb(215,8,51)"/><text x="77.0860%" y="543.50"></text></g><g><title>dyper_ops`v8::Context::Enter (3 samples, 0.03%)</title><rect x="76.8757%" y="517" width="0.0298%" height="15" fill="rgb(223,106,5)"/><text x="77.1257%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::HandleScopeImplementer::EnterContext (2 samples, 0.02%)</title><rect x="76.8857%" y="501" width="0.0198%" height="15" fill="rgb(250,191,5)"/><text x="77.1357%" y="511.50"></text></g><g><title>dyper_ops`v8::HandleScope::CreateHandle (2 samples, 0.02%)</title><rect x="76.9055%" y="517" width="0.0198%" height="15" fill="rgb(242,132,44)"/><text x="77.1555%" y="527.50"></text></g><g><title>dyper_ops`v8::internal::HandleScope::Extend (2 samples, 0.02%)</title><rect x="76.9055%" y="501" width="0.0198%" height="15" fill="rgb(251,152,29)"/><text x="77.1555%" y="511.50"></text></g><g><title>dyper_ops`v8::Locker::IsActive (2 samples, 0.02%)</title><rect x="76.9353%" y="517" width="0.0198%" height="15" fill="rgb(218,179,5)"/><text x="77.1853%" y="527.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_handle_scope_data_with_context (11 samples, 0.11%)</title><rect x="76.8559%" y="533" width="0.1092%" height="15" fill="rgb(227,67,19)"/><text x="77.1059%" y="543.50"></text></g><g><title>dyper_ops`v8::HandleScope::HandleScope (2 samples, 0.02%)</title><rect x="76.9750%" y="533" width="0.0198%" height="15" fill="rgb(233,119,31)"/><text x="77.2250%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (6 samples, 0.06%)</title><rect x="77.0048%" y="533" width="0.0595%" height="15" fill="rgb(241,120,22)"/><text x="77.2548%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::scope::HandleScope::with_context (40 samples, 0.40%)</title><rect x="76.6773%" y="549" width="0.3970%" height="15" fill="rgb(224,102,30)"/><text x="76.9273%" y="559.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::try_exit_scope (2 samples, 0.02%)</title><rect x="77.1040%" y="549" width="0.0198%" height="15" fill="rgb(210,164,37)"/><text x="77.3540%" y="559.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (2 samples, 0.02%)</title><rect x="77.2430%" y="533" width="0.0198%" height="15" fill="rgb(226,191,16)"/><text x="77.4930%" y="543.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="77.2628%" y="533" width="0.0198%" height="15" fill="rgb(214,40,45)"/><text x="77.5128%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="77.5705%" y="405" width="0.0198%" height="15" fill="rgb(244,29,26)"/><text x="77.8205%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.22%)</title><rect x="77.4414%" y="469" width="0.2183%" height="15" fill="rgb(216,16,5)"/><text x="77.6914%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (22 samples, 0.22%)</title><rect x="77.4414%" y="453" width="0.2183%" height="15" fill="rgb(249,76,35)"/><text x="77.6914%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.21%)</title><rect x="77.4514%" y="437" width="0.2084%" height="15" fill="rgb(207,11,44)"/><text x="77.7014%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.20%)</title><rect x="77.4613%" y="421" width="0.1985%" height="15" fill="rgb(228,190,49)"/><text x="77.7113%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="77.5903%" y="405" width="0.0695%" height="15" fill="rgb(214,173,12)"/><text x="77.8403%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="77.6300%" y="389" width="0.0298%" height="15" fill="rgb(218,26,35)"/><text x="77.8800%" y="399.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_tuple_struct (26 samples, 0.26%)</title><rect x="77.4117%" y="485" width="0.2580%" height="15" fill="rgb(220,200,19)"/><text x="77.6617%" y="495.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_tuple_struct (27 samples, 0.27%)</title><rect x="77.4117%" y="501" width="0.2680%" height="15" fill="rgb(239,95,49)"/><text x="77.6617%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (6 samples, 0.06%)</title><rect x="77.8781%" y="373" width="0.0595%" height="15" fill="rgb(235,85,53)"/><text x="78.1281%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.05%)</title><rect x="77.8881%" y="357" width="0.0496%" height="15" fill="rgb(233,133,31)"/><text x="78.1381%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="77.9079%" y="341" width="0.0298%" height="15" fill="rgb(218,25,20)"/><text x="78.1579%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (2 samples, 0.02%)</title><rect x="77.9178%" y="325" width="0.0198%" height="15" fill="rgb(252,210,38)"/><text x="78.1678%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="77.9377%" y="373" width="0.0198%" height="15" fill="rgb(242,134,21)"/><text x="78.1877%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (17 samples, 0.17%)</title><rect x="77.8583%" y="405" width="0.1687%" height="15" fill="rgb(213,28,48)"/><text x="78.1083%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (17 samples, 0.17%)</title><rect x="77.8583%" y="389" width="0.1687%" height="15" fill="rgb(250,196,2)"/><text x="78.1083%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (7 samples, 0.07%)</title><rect x="77.9575%" y="373" width="0.0695%" height="15" fill="rgb(227,5,17)"/><text x="78.2075%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (16 samples, 0.16%)</title><rect x="78.0369%" y="405" width="0.1588%" height="15" fill="rgb(221,226,24)"/><text x="78.2869%" y="415.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.05%)</title><rect x="78.1461%" y="389" width="0.0496%" height="15" fill="rgb(211,5,48)"/><text x="78.3961%" y="399.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.05%)</title><rect x="78.1461%" y="373" width="0.0496%" height="15" fill="rgb(219,150,6)"/><text x="78.3961%" y="383.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (4 samples, 0.04%)</title><rect x="78.1560%" y="357" width="0.0397%" height="15" fill="rgb(251,46,16)"/><text x="78.4060%" y="367.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Array&gt;::new_with_elements (45 samples, 0.45%)</title><rect x="77.7690%" y="437" width="0.4466%" height="15" fill="rgb(220,204,40)"/><text x="78.0190%" y="447.50"></text></g><g><title>dyper_ops`v8::Array::New(v8::Isolate*, v8::Local (44 samples, 0.44%)</title><rect x="77.7789%" y="421" width="0.4367%" height="15" fill="rgb(211,85,2)"/><text x="78.0289%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.06%)</title><rect x="78.2156%" y="437" width="0.0595%" height="15" fill="rgb(229,17,7)"/><text x="78.4656%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.05%)</title><rect x="78.2255%" y="421" width="0.0496%" height="15" fill="rgb(239,72,28)"/><text x="78.4755%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.04%)</title><rect x="78.2354%" y="405" width="0.0397%" height="15" fill="rgb(230,47,54)"/><text x="78.4854%" y="415.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::ArraySerializer as serde::ser::SerializeSeq&gt;::end (68 samples, 0.67%)</title><rect x="77.7293%" y="453" width="0.6749%" height="15" fill="rgb(214,50,8)"/><text x="77.9793%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.13%)</title><rect x="78.2751%" y="437" width="0.1290%" height="15" fill="rgb(216,198,43)"/><text x="78.5251%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.08%)</title><rect x="78.3247%" y="421" width="0.0794%" height="15" fill="rgb(234,20,35)"/><text x="78.5747%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="78.3744%" y="405" width="0.0298%" height="15" fill="rgb(254,45,19)"/><text x="78.6244%" y="415.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::ArraySerializer as serde::ser::SerializeTupleStruct&gt;::end (70 samples, 0.69%)</title><rect x="77.7193%" y="469" width="0.6947%" height="15" fill="rgb(219,14,44)"/><text x="77.9693%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.06%)</title><rect x="78.4240%" y="469" width="0.0595%" height="15" fill="rgb(217,220,26)"/><text x="78.6740%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="78.4538%" y="453" width="0.0298%" height="15" fill="rgb(213,158,28)"/><text x="78.7038%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.03%)</title><rect x="78.4538%" y="437" width="0.0298%" height="15" fill="rgb(252,51,52)"/><text x="78.7038%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.21%)</title><rect x="78.4835%" y="469" width="0.2084%" height="15" fill="rgb(246,89,16)"/><text x="78.7335%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.13%)</title><rect x="78.5629%" y="453" width="0.1290%" height="15" fill="rgb(216,158,49)"/><text x="78.8129%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.08%)</title><rect x="78.6125%" y="437" width="0.0794%" height="15" fill="rgb(236,107,19)"/><text x="78.8625%" y="447.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (117 samples, 1.16%)</title><rect x="77.6796%" y="485" width="1.1612%" height="15" fill="rgb(228,185,30)"/><text x="77.9296%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.15%)</title><rect x="78.6919%" y="469" width="0.1489%" height="15" fill="rgb(246,134,8)"/><text x="78.9419%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (14 samples, 0.14%)</title><rect x="78.7019%" y="453" width="0.1389%" height="15" fill="rgb(214,143,50)"/><text x="78.9519%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.13%)</title><rect x="78.7118%" y="437" width="0.1290%" height="15" fill="rgb(228,75,8)"/><text x="78.9618%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.12%)</title><rect x="78.7217%" y="421" width="0.1191%" height="15" fill="rgb(207,175,4)"/><text x="78.9717%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="78.8210%" y="405" width="0.0198%" height="15" fill="rgb(205,108,24)"/><text x="79.0710%" y="415.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::Seq as serde::ser::SerializeSeq&gt;::end (118 samples, 1.17%)</title><rect x="77.6796%" y="501" width="1.1711%" height="15" fill="rgb(244,120,49)"/><text x="77.9296%" y="511.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_tuple_struct (2 samples, 0.02%)</title><rect x="78.8507%" y="501" width="0.0198%" height="15" fill="rgb(223,47,38)"/><text x="79.1007%" y="511.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (4 samples, 0.04%)</title><rect x="78.9599%" y="485" width="0.0397%" height="15" fill="rgb(229,179,11)"/><text x="79.2099%" y="495.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="79.1187%" y="405" width="0.0298%" height="15" fill="rgb(231,122,1)"/><text x="79.3687%" y="415.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_none (7 samples, 0.07%)</title><rect x="79.0988%" y="421" width="0.0695%" height="15" fill="rgb(245,119,9)"/><text x="79.3488%" y="431.50"></text></g><g><title>dyper_ops`rusty_v8::primitives::null (2 samples, 0.02%)</title><rect x="79.1485%" y="405" width="0.0198%" height="15" fill="rgb(241,163,25)"/><text x="79.3985%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (19 samples, 0.19%)</title><rect x="79.2080%" y="405" width="0.1886%" height="15" fill="rgb(217,214,3)"/><text x="79.4580%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.17%)</title><rect x="79.2279%" y="389" width="0.1687%" height="15" fill="rgb(240,86,28)"/><text x="79.4779%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.15%)</title><rect x="79.2477%" y="373" width="0.1489%" height="15" fill="rgb(215,47,9)"/><text x="79.4977%" y="383.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_none (34 samples, 0.34%)</title><rect x="79.0691%" y="453" width="0.3374%" height="15" fill="rgb(252,25,45)"/><text x="79.3191%" y="463.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_none (34 samples, 0.34%)</title><rect x="79.0691%" y="437" width="0.3374%" height="15" fill="rgb(251,164,9)"/><text x="79.3191%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (23 samples, 0.23%)</title><rect x="79.1782%" y="421" width="0.2283%" height="15" fill="rgb(233,194,0)"/><text x="79.4282%" y="431.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.02%)</title><rect x="79.4859%" y="421" width="0.0198%" height="15" fill="rgb(249,111,24)"/><text x="79.7359%" y="431.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (12 samples, 0.12%)</title><rect x="79.7439%" y="293" width="0.1191%" height="15" fill="rgb(250,223,3)"/><text x="79.9939%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.05%)</title><rect x="79.8134%" y="277" width="0.0496%" height="15" fill="rgb(236,178,37)"/><text x="80.0634%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.04%)</title><rect x="79.8233%" y="261" width="0.0397%" height="15" fill="rgb(241,158,50)"/><text x="80.0733%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (3 samples, 0.03%)</title><rect x="79.8333%" y="245" width="0.0298%" height="15" fill="rgb(213,121,41)"/><text x="80.0833%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectBody(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (3 samples, 0.03%)</title><rect x="79.8630%" y="293" width="0.0298%" height="15" fill="rgb(240,92,3)"/><text x="80.1130%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (8 samples, 0.08%)</title><rect x="79.8928%" y="293" width="0.0794%" height="15" fill="rgb(205,123,3)"/><text x="80.1428%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (2 samples, 0.02%)</title><rect x="79.9722%" y="293" width="0.0198%" height="15" fill="rgb(205,97,47)"/><text x="80.2222%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Object&gt;::new (32 samples, 0.32%)</title><rect x="79.7241%" y="341" width="0.3176%" height="15" fill="rgb(247,152,14)"/><text x="79.9741%" y="351.50"></text></g><g><title>dyper_ops`v8::Object::New (31 samples, 0.31%)</title><rect x="79.7340%" y="325" width="0.3077%" height="15" fill="rgb(248,195,53)"/><text x="79.9840%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSObject(v8::internal::Handle (30 samples, 0.30%)</title><rect x="79.7439%" y="309" width="0.2977%" height="15" fill="rgb(226,201,16)"/><text x="79.9939%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JSFunction::EnsureHasInitialMap(v8::internal::Handle (4 samples, 0.04%)</title><rect x="80.0020%" y="293" width="0.0397%" height="15" fill="rgb(205,98,0)"/><text x="80.2520%" y="303.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (36 samples, 0.36%)</title><rect x="79.6943%" y="373" width="0.3573%" height="15" fill="rgb(214,191,48)"/><text x="79.9443%" y="383.50"></text></g><g><title>dyper_ops`serde_v8::ser::ObjectSerializer::new (34 samples, 0.34%)</title><rect x="79.7142%" y="357" width="0.3374%" height="15" fill="rgb(237,112,39)"/><text x="79.9642%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="80.0615%" y="341" width="0.0198%" height="15" fill="rgb(247,203,27)"/><text x="80.3115%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.26%)</title><rect x="80.0615%" y="373" width="0.2580%" height="15" fill="rgb(235,124,28)"/><text x="80.3115%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (26 samples, 0.26%)</title><rect x="80.0615%" y="357" width="0.2580%" height="15" fill="rgb(208,207,46)"/><text x="80.3115%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.24%)</title><rect x="80.0814%" y="341" width="0.2382%" height="15" fill="rgb(234,176,4)"/><text x="80.3314%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.23%)</title><rect x="80.0913%" y="325" width="0.2283%" height="15" fill="rgb(230,133,28)"/><text x="80.3413%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.10%)</title><rect x="80.2203%" y="309" width="0.0992%" height="15" fill="rgb(211,137,40)"/><text x="80.4703%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="80.2898%" y="293" width="0.0298%" height="15" fill="rgb(254,35,13)"/><text x="80.5398%" y="303.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_struct (71 samples, 0.70%)</title><rect x="79.6249%" y="389" width="0.7046%" height="15" fill="rgb(225,49,51)"/><text x="79.8749%" y="399.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (3 samples, 0.03%)</title><rect x="80.3295%" y="389" width="0.0298%" height="15" fill="rgb(251,10,15)"/><text x="80.5795%" y="399.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_struct (76 samples, 0.75%)</title><rect x="79.6249%" y="405" width="0.7543%" height="15" fill="rgb(228,207,15)"/><text x="79.8749%" y="415.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_f64 (5 samples, 0.05%)</title><rect x="80.4089%" y="357" width="0.0496%" height="15" fill="rgb(241,99,19)"/><text x="80.6589%" y="367.50"></text></g><g><title>dyper_ops`rusty_v8::number::_&lt;impl rusty_v8::data::Number&gt;::new (4 samples, 0.04%)</title><rect x="80.4188%" y="341" width="0.0397%" height="15" fill="rgb(207,104,49)"/><text x="80.6688%" y="351.50"></text></g><g><title>dyper_ops`v8::Number::New (3 samples, 0.03%)</title><rect x="80.4287%" y="325" width="0.0298%" height="15" fill="rgb(234,99,18)"/><text x="80.6787%" y="335.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_u64 (12 samples, 0.12%)</title><rect x="80.3791%" y="373" width="0.1191%" height="15" fill="rgb(213,191,49)"/><text x="80.6291%" y="383.50"></text></g><g><title>dyper_ops`rusty_v8::number::_&lt;impl rusty_v8::data::Number&gt;::new (3 samples, 0.03%)</title><rect x="80.4684%" y="357" width="0.0298%" height="15" fill="rgb(210,226,19)"/><text x="80.7184%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.10%)</title><rect x="80.4982%" y="357" width="0.0992%" height="15" fill="rgb(229,97,18)"/><text x="80.7482%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.10%)</title><rect x="80.4982%" y="341" width="0.0992%" height="15" fill="rgb(211,167,15)"/><text x="80.7482%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.09%)</title><rect x="80.5081%" y="325" width="0.0893%" height="15" fill="rgb(210,169,34)"/><text x="80.7581%" y="335.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_u64 (23 samples, 0.23%)</title><rect x="80.3791%" y="389" width="0.2283%" height="15" fill="rgb(241,121,31)"/><text x="80.6291%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.11%)</title><rect x="80.4982%" y="373" width="0.1092%" height="15" fill="rgb(232,40,11)"/><text x="80.7482%" y="383.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_u64 (25 samples, 0.25%)</title><rect x="80.3791%" y="405" width="0.2481%" height="15" fill="rgb(205,86,26)"/><text x="80.6291%" y="415.50"></text></g><g><title>dyper_ops`__rdl_dealloc (3 samples, 0.03%)</title><rect x="80.6570%" y="389" width="0.0298%" height="15" fill="rgb(231,126,28)"/><text x="80.9070%" y="399.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::end (2 samples, 0.02%)</title><rect x="80.7463%" y="373" width="0.0198%" height="15" fill="rgb(219,221,18)"/><text x="80.9963%" y="383.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="80.7463%" y="357" width="0.0198%" height="15" fill="rgb(211,40,0)"/><text x="80.9963%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="80.7761%" y="373" width="0.0198%" height="15" fill="rgb(239,85,43)"/><text x="81.0261%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.09%)</title><rect x="80.7960%" y="373" width="0.0893%" height="15" fill="rgb(231,55,21)"/><text x="81.0460%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.05%)</title><rect x="80.8356%" y="357" width="0.0496%" height="15" fill="rgb(225,184,43)"/><text x="81.0856%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="80.8356%" y="341" width="0.0496%" height="15" fill="rgb(251,158,41)"/><text x="81.0856%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.18%)</title><rect x="80.8853%" y="373" width="0.1786%" height="15" fill="rgb(234,159,37)"/><text x="81.1353%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.12%)</title><rect x="80.9448%" y="357" width="0.1191%" height="15" fill="rgb(216,204,22)"/><text x="81.1948%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="81.0044%" y="341" width="0.0595%" height="15" fill="rgb(214,17,3)"/><text x="81.2544%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="81.0738%" y="341" width="0.0198%" height="15" fill="rgb(212,111,17)"/><text x="81.3238%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.24%)</title><rect x="81.0639%" y="373" width="0.2382%" height="15" fill="rgb(221,157,24)"/><text x="81.3139%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.24%)</title><rect x="81.0639%" y="357" width="0.2382%" height="15" fill="rgb(252,16,13)"/><text x="81.3139%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.21%)</title><rect x="81.0937%" y="341" width="0.2084%" height="15" fill="rgb(221,62,2)"/><text x="81.3437%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.20%)</title><rect x="81.1036%" y="325" width="0.1985%" height="15" fill="rgb(247,87,22)"/><text x="81.3536%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="81.2525%" y="309" width="0.0496%" height="15" fill="rgb(215,73,9)"/><text x="81.5025%" y="319.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (62 samples, 0.62%)</title><rect x="80.6967%" y="389" width="0.6153%" height="15" fill="rgb(207,175,33)"/><text x="80.9467%" y="399.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::Seq as serde::ser::SerializeSeq&gt;::end (70 samples, 0.69%)</title><rect x="80.6272%" y="405" width="0.6947%" height="15" fill="rgb(243,129,54)"/><text x="80.8772%" y="415.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_struct (3 samples, 0.03%)</title><rect x="81.3220%" y="405" width="0.0298%" height="15" fill="rgb(227,119,45)"/><text x="81.5720%" y="415.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::TryCatch&lt;rusty_v8::scope::HandleScope&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="81.4212%" y="389" width="0.0198%" height="15" fill="rgb(205,109,36)"/><text x="81.6712%" y="399.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (2 samples, 0.02%)</title><rect x="81.5800%" y="373" width="0.0198%" height="15" fill="rgb(205,6,39)"/><text x="81.8300%" y="383.50"></text></g><g><title>dyper_ops`&lt;rusty_v8::scope::EscapableHandleScope&lt;()&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.04%)</title><rect x="81.7686%" y="309" width="0.0397%" height="15" fill="rgb(221,32,16)"/><text x="82.0186%" y="319.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="81.8976%" y="293" width="0.0298%" height="15" fill="rgb(228,144,50)"/><text x="82.1476%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (2 samples, 0.02%)</title><rect x="82.1060%" y="229" width="0.0198%" height="15" fill="rgb(229,201,53)"/><text x="82.3560%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (9 samples, 0.09%)</title><rect x="82.1854%" y="197" width="0.0893%" height="15" fill="rgb(249,153,27)"/><text x="82.4354%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (24 samples, 0.24%)</title><rect x="82.0663%" y="245" width="0.2382%" height="15" fill="rgb(227,106,25)"/><text x="82.3163%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (18 samples, 0.18%)</title><rect x="82.1258%" y="229" width="0.1786%" height="15" fill="rgb(230,65,29)"/><text x="82.3758%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (15 samples, 0.15%)</title><rect x="82.1556%" y="213" width="0.1489%" height="15" fill="rgb(221,57,46)"/><text x="82.4056%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="82.2747%" y="197" width="0.0298%" height="15" fill="rgb(229,161,17)"/><text x="82.5247%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (2 samples, 0.02%)</title><rect x="82.2846%" y="181" width="0.0198%" height="15" fill="rgb(222,213,11)"/><text x="82.5346%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="82.2846%" y="165" width="0.0198%" height="15" fill="rgb(235,35,13)"/><text x="82.5346%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.02%)</title><rect x="82.2846%" y="149" width="0.0198%" height="15" fill="rgb(233,158,34)"/><text x="82.5346%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (8 samples, 0.08%)</title><rect x="82.3144%" y="245" width="0.0794%" height="15" fill="rgb(215,151,48)"/><text x="82.5644%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewStringFromUtf8(v8::internal::Vector (56 samples, 0.56%)</title><rect x="82.0067%" y="261" width="0.5558%" height="15" fill="rgb(229,84,14)"/><text x="82.2567%" y="271.50"></text></g><g><title>dyper_ops`void v8::internal::Utf8Decoder::Decode&lt;unsigned char&gt;(unsigned char*, v8::internal::Vector (17 samples, 0.17%)</title><rect x="82.3938%" y="245" width="0.1687%" height="15" fill="rgb(229,68,14)"/><text x="82.6438%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.04%)</title><rect x="82.5228%" y="229" width="0.0397%" height="15" fill="rgb(243,106,26)"/><text x="82.7728%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (3 samples, 0.03%)</title><rect x="82.5625%" y="261" width="0.0298%" height="15" fill="rgb(206,45,38)"/><text x="82.8125%" y="271.50"></text></g><g><title>dyper_ops`v8::String::NewFromUtf8 (67 samples, 0.66%)</title><rect x="81.9373%" y="277" width="0.6649%" height="15" fill="rgb(226,6,15)"/><text x="82.1873%" y="287.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new (69 samples, 0.68%)</title><rect x="81.9274%" y="293" width="0.6848%" height="15" fill="rgb(232,22,54)"/><text x="82.1774%" y="303.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (84 samples, 0.83%)</title><rect x="81.8083%" y="309" width="0.8337%" height="15" fill="rgb(229,222,32)"/><text x="82.0583%" y="319.50"></text></g><g><title>dyper_ops`v8__String__NewFromUtf8 (2 samples, 0.02%)</title><rect x="82.6221%" y="293" width="0.0198%" height="15" fill="rgb(228,62,29)"/><text x="82.8721%" y="303.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new (2 samples, 0.02%)</title><rect x="82.6518%" y="309" width="0.0198%" height="15" fill="rgb(251,103,34)"/><text x="82.9018%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.03%)</title><rect x="82.6915%" y="277" width="0.0298%" height="15" fill="rgb(233,12,30)"/><text x="82.9415%" y="287.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_str (125 samples, 1.24%)</title><rect x="81.7289%" y="341" width="1.2406%" height="15" fill="rgb(238,52,0)"/><text x="81.9789%" y="351.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_str (123 samples, 1.22%)</title><rect x="81.7487%" y="325" width="1.2207%" height="15" fill="rgb(223,98,5)"/><text x="81.9987%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (30 samples, 0.30%)</title><rect x="82.6717%" y="309" width="0.2977%" height="15" fill="rgb(228,75,37)"/><text x="82.9217%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (29 samples, 0.29%)</title><rect x="82.6816%" y="293" width="0.2878%" height="15" fill="rgb(205,115,49)"/><text x="82.9316%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.25%)</title><rect x="82.7213%" y="277" width="0.2481%" height="15" fill="rgb(250,154,43)"/><text x="82.9713%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.24%)</title><rect x="82.7312%" y="261" width="0.2382%" height="15" fill="rgb(226,43,29)"/><text x="82.9812%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="82.9297%" y="245" width="0.0397%" height="15" fill="rgb(249,228,39)"/><text x="83.1797%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.03%)</title><rect x="83.0290%" y="261" width="0.0298%" height="15" fill="rgb(216,79,43)"/><text x="83.2790%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.05%)</title><rect x="83.1580%" y="229" width="0.0496%" height="15" fill="rgb(228,95,12)"/><text x="83.4080%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (30 samples, 0.30%)</title><rect x="83.0290%" y="277" width="0.2977%" height="15" fill="rgb(249,221,15)"/><text x="83.2790%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.27%)</title><rect x="83.0588%" y="261" width="0.2680%" height="15" fill="rgb(233,34,13)"/><text x="83.3088%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.27%)</title><rect x="83.0588%" y="245" width="0.2680%" height="15" fill="rgb(214,103,39)"/><text x="83.3088%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.12%)</title><rect x="83.2076%" y="229" width="0.1191%" height="15" fill="rgb(251,126,39)"/><text x="83.4576%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.09%)</title><rect x="83.2374%" y="213" width="0.0893%" height="15" fill="rgb(214,216,36)"/><text x="83.4874%" y="223.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_seq (35 samples, 0.35%)</title><rect x="82.9893%" y="309" width="0.3474%" height="15" fill="rgb(220,221,8)"/><text x="83.2393%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (32 samples, 0.32%)</title><rect x="83.0191%" y="293" width="0.3176%" height="15" fill="rgb(240,216,3)"/><text x="83.2691%" y="303.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_seq (37 samples, 0.37%)</title><rect x="82.9893%" y="325" width="0.3672%" height="15" fill="rgb(232,218,17)"/><text x="83.2393%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (6 samples, 0.06%)</title><rect x="83.5649%" y="213" width="0.0595%" height="15" fill="rgb(229,163,45)"/><text x="83.8149%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="83.5848%" y="197" width="0.0397%" height="15" fill="rgb(231,110,42)"/><text x="83.8348%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (2 samples, 0.02%)</title><rect x="83.6046%" y="181" width="0.0198%" height="15" fill="rgb(208,170,48)"/><text x="83.8546%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (3 samples, 0.03%)</title><rect x="83.6245%" y="213" width="0.0298%" height="15" fill="rgb(239,116,25)"/><text x="83.8745%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (16 samples, 0.16%)</title><rect x="83.5054%" y="245" width="0.1588%" height="15" fill="rgb(219,200,50)"/><text x="83.7554%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (15 samples, 0.15%)</title><rect x="83.5153%" y="229" width="0.1489%" height="15" fill="rgb(245,200,0)"/><text x="83.7653%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (2 samples, 0.02%)</title><rect x="83.7336%" y="229" width="0.0198%" height="15" fill="rgb(245,119,33)"/><text x="83.9836%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (3 samples, 0.03%)</title><rect x="83.7535%" y="197" width="0.0298%" height="15" fill="rgb(231,125,12)"/><text x="84.0035%" y="207.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Array&gt;::new_with_elements (33 samples, 0.33%)</title><rect x="83.4657%" y="277" width="0.3275%" height="15" fill="rgb(216,96,41)"/><text x="83.7157%" y="287.50"></text></g><g><title>dyper_ops`v8::Array::New(v8::Isolate*, v8::Local (32 samples, 0.32%)</title><rect x="83.4756%" y="261" width="0.3176%" height="15" fill="rgb(248,43,45)"/><text x="83.7256%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (12 samples, 0.12%)</title><rect x="83.6741%" y="245" width="0.1191%" height="15" fill="rgb(217,222,7)"/><text x="83.9241%" y="255.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="83.7535%" y="229" width="0.0397%" height="15" fill="rgb(233,28,6)"/><text x="84.0035%" y="239.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (4 samples, 0.04%)</title><rect x="83.7535%" y="213" width="0.0397%" height="15" fill="rgb(231,218,15)"/><text x="84.0035%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.08%)</title><rect x="83.7932%" y="277" width="0.0794%" height="15" fill="rgb(226,171,48)"/><text x="84.0432%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.06%)</title><rect x="83.8130%" y="261" width="0.0595%" height="15" fill="rgb(235,201,9)"/><text x="84.0630%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.06%)</title><rect x="83.8130%" y="245" width="0.0595%" height="15" fill="rgb(217,80,15)"/><text x="84.0630%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="83.9917%" y="245" width="0.0595%" height="15" fill="rgb(219,152,8)"/><text x="84.2417%" y="255.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::ArraySerializer as serde::ser::SerializeSeq&gt;::end (63 samples, 0.63%)</title><rect x="83.4359%" y="293" width="0.6252%" height="15" fill="rgb(243,107,38)"/><text x="83.6859%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.19%)</title><rect x="83.8726%" y="277" width="0.1886%" height="15" fill="rgb(231,17,5)"/><text x="84.1226%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.13%)</title><rect x="83.9321%" y="261" width="0.1290%" height="15" fill="rgb(209,25,54)"/><text x="84.1821%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.04%)</title><rect x="84.0611%" y="293" width="0.0397%" height="15" fill="rgb(219,0,2)"/><text x="84.3111%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="84.0810%" y="277" width="0.0198%" height="15" fill="rgb(246,9,5)"/><text x="84.3310%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="84.0810%" y="261" width="0.0198%" height="15" fill="rgb(226,159,4)"/><text x="84.3310%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.19%)</title><rect x="84.1008%" y="293" width="0.1886%" height="15" fill="rgb(219,175,34)"/><text x="84.3508%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.15%)</title><rect x="84.1405%" y="277" width="0.1489%" height="15" fill="rgb(236,10,46)"/><text x="84.3905%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="84.2497%" y="261" width="0.0397%" height="15" fill="rgb(240,211,16)"/><text x="84.4997%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="84.2894%" y="277" width="0.0198%" height="15" fill="rgb(205,3,43)"/><text x="84.5394%" y="287.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::Seq as serde::ser::SerializeSeq&gt;::end (113 samples, 1.12%)</title><rect x="83.3565%" y="325" width="1.1215%" height="15" fill="rgb(245,7,22)"/><text x="83.6065%" y="335.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (112 samples, 1.11%)</title><rect x="83.3664%" y="309" width="1.1116%" height="15" fill="rgb(239,132,32)"/><text x="83.6164%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.19%)</title><rect x="84.2894%" y="293" width="0.1886%" height="15" fill="rgb(228,202,34)"/><text x="84.5394%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (17 samples, 0.17%)</title><rect x="84.3092%" y="277" width="0.1687%" height="15" fill="rgb(254,200,22)"/><text x="84.5592%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.14%)</title><rect x="84.3390%" y="261" width="0.1389%" height="15" fill="rgb(219,10,39)"/><text x="84.5890%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.12%)</title><rect x="84.3589%" y="245" width="0.1191%" height="15" fill="rgb(226,210,39)"/><text x="84.6089%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="84.4482%" y="229" width="0.0298%" height="15" fill="rgb(208,219,16)"/><text x="84.6982%" y="239.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_seq (2 samples, 0.02%)</title><rect x="84.4780%" y="325" width="0.0198%" height="15" fill="rgb(216,158,51)"/><text x="84.7280%" y="335.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_tuple (27 samples, 0.27%)</title><rect x="84.6169%" y="277" width="0.2680%" height="15" fill="rgb(233,14,44)"/><text x="84.8669%" y="287.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_tuple (26 samples, 0.26%)</title><rect x="84.6268%" y="261" width="0.2580%" height="15" fill="rgb(237,97,39)"/><text x="84.8768%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.26%)</title><rect x="84.6268%" y="245" width="0.2580%" height="15" fill="rgb(218,198,43)"/><text x="84.8768%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.24%)</title><rect x="84.6467%" y="229" width="0.2382%" height="15" fill="rgb(231,104,20)"/><text x="84.8967%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.24%)</title><rect x="84.6467%" y="213" width="0.2382%" height="15" fill="rgb(254,36,13)"/><text x="84.8967%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.22%)</title><rect x="84.6665%" y="197" width="0.2183%" height="15" fill="rgb(248,14,50)"/><text x="84.9165%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.10%)</title><rect x="84.7856%" y="181" width="0.0992%" height="15" fill="rgb(217,107,29)"/><text x="85.0356%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="84.8253%" y="165" width="0.0595%" height="15" fill="rgb(251,169,33)"/><text x="85.0753%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (2 samples, 0.02%)</title><rect x="85.1231%" y="101" width="0.0198%" height="15" fill="rgb(217,108,32)"/><text x="85.3731%" y="111.50"></text></g><g><title>dyper_ops`v8::internal::GCTracer::Stop (2 samples, 0.02%)</title><rect x="85.1429%" y="85" width="0.0198%" height="15" fill="rgb(219,66,42)"/><text x="85.3929%" y="95.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRawWithAllocationSite(v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::AllocationType, v8::internal::Handle (6 samples, 0.06%)</title><rect x="85.1131%" y="149" width="0.0595%" height="15" fill="rgb(206,180,7)"/><text x="85.3631%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.05%)</title><rect x="85.1231%" y="133" width="0.0496%" height="15" fill="rgb(208,226,31)"/><text x="85.3731%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (5 samples, 0.05%)</title><rect x="85.1231%" y="117" width="0.0496%" height="15" fill="rgb(218,26,49)"/><text x="85.3731%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (3 samples, 0.03%)</title><rect x="85.1429%" y="101" width="0.0298%" height="15" fill="rgb(233,197,48)"/><text x="85.3929%" y="111.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithElements(v8::internal::Handle (13 samples, 0.13%)</title><rect x="85.0635%" y="181" width="0.1290%" height="15" fill="rgb(252,181,51)"/><text x="85.3135%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewJSArrayWithUnverifiedElements(v8::internal::Handle (11 samples, 0.11%)</title><rect x="85.0834%" y="165" width="0.1092%" height="15" fill="rgb(253,90,19)"/><text x="85.3334%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InitializeJSObjectFromMap(v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="85.1727%" y="149" width="0.0198%" height="15" fill="rgb(215,171,30)"/><text x="85.4227%" y="159.50"></text></g><g><title>dyper_ops`v8::internal::Factory::AllocateRaw (2 samples, 0.02%)</title><rect x="85.2124%" y="165" width="0.0198%" height="15" fill="rgb(214,222,9)"/><text x="85.4624%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (7 samples, 0.07%)</title><rect x="85.2025%" y="181" width="0.0695%" height="15" fill="rgb(223,3,22)"/><text x="85.4525%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.04%)</title><rect x="85.2322%" y="165" width="0.0397%" height="15" fill="rgb(225,196,46)"/><text x="85.4822%" y="175.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (3 samples, 0.03%)</title><rect x="85.2422%" y="149" width="0.0298%" height="15" fill="rgb(209,110,37)"/><text x="85.4922%" y="159.50"></text></g><g><title>dyper_ops`v8::Array::New(v8::Isolate*, v8::Local (33 samples, 0.33%)</title><rect x="84.9742%" y="197" width="0.3275%" height="15" fill="rgb(249,89,12)"/><text x="85.2242%" y="207.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::ValidateElements (3 samples, 0.03%)</title><rect x="85.2719%" y="181" width="0.0298%" height="15" fill="rgb(226,27,33)"/><text x="85.5219%" y="191.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Array&gt;::new_with_elements (38 samples, 0.38%)</title><rect x="84.9444%" y="213" width="0.3771%" height="15" fill="rgb(213,82,22)"/><text x="85.1944%" y="223.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArray (2 samples, 0.02%)</title><rect x="85.3017%" y="197" width="0.0198%" height="15" fill="rgb(248,140,0)"/><text x="85.5517%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.12%)</title><rect x="85.3414%" y="213" width="0.1191%" height="15" fill="rgb(228,106,3)"/><text x="85.5914%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.11%)</title><rect x="85.3513%" y="197" width="0.1092%" height="15" fill="rgb(209,23,37)"/><text x="85.6013%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.11%)</title><rect x="85.3513%" y="181" width="0.1092%" height="15" fill="rgb(241,93,50)"/><text x="85.6013%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.05%)</title><rect x="85.5895%" y="181" width="0.0496%" height="15" fill="rgb(253,46,43)"/><text x="85.8395%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.20%)</title><rect x="85.4605%" y="213" width="0.1985%" height="15" fill="rgb(226,206,43)"/><text x="85.7105%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.15%)</title><rect x="85.5101%" y="197" width="0.1489%" height="15" fill="rgb(217,54,7)"/><text x="85.7601%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="85.6391%" y="181" width="0.0198%" height="15" fill="rgb(223,5,52)"/><text x="85.8891%" y="191.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::ArraySerializer as serde::ser::SerializeTuple&gt;::end (75 samples, 0.74%)</title><rect x="84.9246%" y="245" width="0.7443%" height="15" fill="rgb(206,52,46)"/><text x="85.1746%" y="255.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::ArraySerializer as serde::ser::SerializeSeq&gt;::end (74 samples, 0.73%)</title><rect x="84.9345%" y="229" width="0.7344%" height="15" fill="rgb(253,136,11)"/><text x="85.1845%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="85.6689%" y="245" width="0.0198%" height="15" fill="rgb(208,106,33)"/><text x="85.9189%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.04%)</title><rect x="85.6888%" y="245" width="0.0397%" height="15" fill="rgb(206,54,4)"/><text x="85.9388%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.04%)</title><rect x="85.6888%" y="229" width="0.0397%" height="15" fill="rgb(213,3,15)"/><text x="85.9388%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.04%)</title><rect x="85.6888%" y="213" width="0.0397%" height="15" fill="rgb(252,211,39)"/><text x="85.9388%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.21%)</title><rect x="85.7285%" y="245" width="0.2084%" height="15" fill="rgb(223,6,36)"/><text x="85.9785%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.17%)</title><rect x="85.7682%" y="229" width="0.1687%" height="15" fill="rgb(252,169,45)"/><text x="86.0182%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.10%)</title><rect x="85.8376%" y="213" width="0.0992%" height="15" fill="rgb(212,48,26)"/><text x="86.0876%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="85.9369%" y="229" width="0.0198%" height="15" fill="rgb(251,102,48)"/><text x="86.1869%" y="239.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (128 samples, 1.27%)</title><rect x="84.9047%" y="261" width="1.2703%" height="15" fill="rgb(243,208,16)"/><text x="85.1547%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.24%)</title><rect x="85.9369%" y="245" width="0.2382%" height="15" fill="rgb(219,96,24)"/><text x="86.1869%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (22 samples, 0.22%)</title><rect x="85.9567%" y="229" width="0.2183%" height="15" fill="rgb(219,33,29)"/><text x="86.2067%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.22%)</title><rect x="85.9567%" y="213" width="0.2183%" height="15" fill="rgb(223,176,5)"/><text x="86.2067%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.17%)</title><rect x="86.0064%" y="197" width="0.1687%" height="15" fill="rgb(228,140,14)"/><text x="86.2564%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="86.1254%" y="181" width="0.0496%" height="15" fill="rgb(217,179,31)"/><text x="86.3754%" y="191.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::Seq as serde::ser::SerializeSeq&gt;::end (132 samples, 1.31%)</title><rect x="84.8849%" y="277" width="1.3100%" height="15" fill="rgb(230,9,30)"/><text x="85.1349%" y="287.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_tuple (2 samples, 0.02%)</title><rect x="86.1949%" y="277" width="0.0198%" height="15" fill="rgb(230,136,20)"/><text x="86.4449%" y="287.50"></text></g><g><title>dyper_ops`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="86.3537%" y="181" width="0.0298%" height="15" fill="rgb(215,210,22)"/><text x="86.6037%" y="191.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRaw (6 samples, 0.06%)</title><rect x="86.5224%" y="85" width="0.0595%" height="15" fill="rgb(218,43,5)"/><text x="86.7724%" y="95.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (13 samples, 0.13%)</title><rect x="86.4728%" y="133" width="0.1290%" height="15" fill="rgb(216,11,5)"/><text x="86.7228%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.08%)</title><rect x="86.5224%" y="117" width="0.0794%" height="15" fill="rgb(209,82,29)"/><text x="86.7724%" y="127.50"></text></g><g><title>dyper_ops`v8::internal::Heap::AllocateRawWithLightRetrySlowPath (8 samples, 0.08%)</title><rect x="86.5224%" y="101" width="0.0794%" height="15" fill="rgb(244,115,12)"/><text x="86.7724%" y="111.50"></text></g><g><title>dyper_ops`v8::internal::Heap::CollectGarbage (2 samples, 0.02%)</title><rect x="86.5820%" y="85" width="0.0198%" height="15" fill="rgb(222,82,18)"/><text x="86.8320%" y="95.50"></text></g><g><title>dyper_ops`v8::internal::Heap::PerformGarbageCollection (2 samples, 0.02%)</title><rect x="86.5820%" y="69" width="0.0198%" height="15" fill="rgb(249,227,8)"/><text x="86.8320%" y="79.50"></text></g><g><title>dyper_ops`v8::internal::Heap::Scavenge (2 samples, 0.02%)</title><rect x="86.5820%" y="53" width="0.0198%" height="15" fill="rgb(253,141,45)"/><text x="86.8320%" y="63.50"></text></g><g><title>dyper_ops`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.02%)</title><rect x="86.5820%" y="37" width="0.0198%" height="15" fill="rgb(234,184,4)"/><text x="86.8320%" y="47.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (7 samples, 0.07%)</title><rect x="86.6018%" y="133" width="0.0695%" height="15" fill="rgb(218,194,23)"/><text x="86.8518%" y="143.50"></text></g><g><title>dyper_ops`v8::internal::Factory::NewStringFromUtf8(v8::internal::Vector (37 samples, 0.37%)</title><rect x="86.4430%" y="149" width="0.3672%" height="15" fill="rgb(235,66,41)"/><text x="86.6930%" y="159.50"></text></g><g><title>dyper_ops`void v8::internal::Utf8Decoder::Decode&lt;unsigned char&gt;(unsigned char*, v8::internal::Vector (14 samples, 0.14%)</title><rect x="86.6713%" y="133" width="0.1389%" height="15" fill="rgb(245,217,1)"/><text x="86.9213%" y="143.50"></text></g><g><title>dyper_ops`v8::String::NewFromUtf8 (41 samples, 0.41%)</title><rect x="86.4133%" y="165" width="0.4069%" height="15" fill="rgb(229,91,1)"/><text x="86.6633%" y="175.50"></text></g><g><title>dyper_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (53 samples, 0.53%)</title><rect x="86.3041%" y="197" width="0.5260%" height="15" fill="rgb(207,101,30)"/><text x="86.5541%" y="207.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new (44 samples, 0.44%)</title><rect x="86.3934%" y="181" width="0.4367%" height="15" fill="rgb(223,82,49)"/><text x="86.6434%" y="191.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new (3 samples, 0.03%)</title><rect x="86.8400%" y="197" width="0.0298%" height="15" fill="rgb(218,167,17)"/><text x="87.0900%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="86.9095%" y="165" width="0.0198%" height="15" fill="rgb(208,103,14)"/><text x="87.1595%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.34%)</title><rect x="86.8698%" y="197" width="0.3374%" height="15" fill="rgb(238,20,8)"/><text x="87.1198%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (32 samples, 0.32%)</title><rect x="86.8896%" y="181" width="0.3176%" height="15" fill="rgb(218,80,54)"/><text x="87.1396%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.28%)</title><rect x="86.9293%" y="165" width="0.2779%" height="15" fill="rgb(240,144,17)"/><text x="87.1793%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.26%)</title><rect x="86.9492%" y="149" width="0.2580%" height="15" fill="rgb(245,27,50)"/><text x="87.1992%" y="159.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_str (94 samples, 0.93%)</title><rect x="86.2842%" y="213" width="0.9329%" height="15" fill="rgb(251,51,7)"/><text x="86.5342%" y="223.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (96 samples, 0.95%)</title><rect x="86.2743%" y="245" width="0.9528%" height="15" fill="rgb(245,217,29)"/><text x="86.5243%" y="255.50"></text></g><g><title>dyper_ops`&lt;&amp;mut dyn erased_serde::ser::Serializer+core::marker::Send as serde::ser::Serializer&gt;::serialize_str (96 samples, 0.95%)</title><rect x="86.2743%" y="229" width="0.9528%" height="15" fill="rgb(221,176,29)"/><text x="86.5243%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="87.2965%" y="229" width="0.0298%" height="15" fill="rgb(212,180,24)"/><text x="87.5465%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="87.3065%" y="213" width="0.0198%" height="15" fill="rgb(254,24,2)"/><text x="87.5565%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.10%)</title><rect x="87.2370%" y="245" width="0.0992%" height="15" fill="rgb(230,100,2)"/><text x="87.4870%" y="255.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (125 samples, 1.24%)</title><rect x="86.2346%" y="261" width="1.2406%" height="15" fill="rgb(219,142,25)"/><text x="86.4846%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.14%)</title><rect x="87.3362%" y="245" width="0.1389%" height="15" fill="rgb(240,73,43)"/><text x="87.5862%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="87.5347%" y="197" width="0.0198%" height="15" fill="rgb(214,114,15)"/><text x="87.7847%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.28%)</title><rect x="87.5248%" y="213" width="0.2779%" height="15" fill="rgb(207,130,4)"/><text x="87.7748%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.25%)</title><rect x="87.5546%" y="197" width="0.2481%" height="15" fill="rgb(221,25,40)"/><text x="87.8046%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.24%)</title><rect x="87.5645%" y="181" width="0.2382%" height="15" fill="rgb(241,184,7)"/><text x="87.8145%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.11%)</title><rect x="87.6935%" y="165" width="0.1092%" height="15" fill="rgb(235,159,4)"/><text x="87.9435%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="87.7630%" y="149" width="0.0397%" height="15" fill="rgb(214,87,48)"/><text x="88.0130%" y="159.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.34%)</title><rect x="87.4752%" y="261" width="0.3374%" height="15" fill="rgb(246,198,24)"/><text x="87.7252%" y="271.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (31 samples, 0.31%)</title><rect x="87.5050%" y="245" width="0.3077%" height="15" fill="rgb(209,66,40)"/><text x="87.7550%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (31 samples, 0.31%)</title><rect x="87.5050%" y="229" width="0.3077%" height="15" fill="rgb(233,147,39)"/><text x="87.7550%" y="239.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (329 samples, 3.27%)</title><rect x="84.5574%" y="293" width="3.2652%" height="15" fill="rgb(231,145,52)"/><text x="84.8074%" y="303.50">dyp..</text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (162 samples, 1.61%)</title><rect x="86.2148%" y="277" width="1.6078%" height="15" fill="rgb(206,20,26)"/><text x="86.4648%" y="287.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::Seq as serde::ser::SerializeSeq&gt;::end (2 samples, 0.02%)</title><rect x="87.8225%" y="293" width="0.0198%" height="15" fill="rgb(238,220,4)"/><text x="88.0725%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.07%)</title><rect x="87.8523%" y="293" width="0.0695%" height="15" fill="rgb(252,195,42)"/><text x="88.1023%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.04%)</title><rect x="87.8821%" y="277" width="0.0397%" height="15" fill="rgb(209,10,6)"/><text x="88.1321%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.03%)</title><rect x="87.8920%" y="261" width="0.0298%" height="15" fill="rgb(229,3,52)"/><text x="88.1420%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.06%)</title><rect x="88.1600%" y="261" width="0.0595%" height="15" fill="rgb(253,49,37)"/><text x="88.4100%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.34%)</title><rect x="87.9218%" y="293" width="0.3374%" height="15" fill="rgb(240,103,49)"/><text x="88.1718%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.21%)</title><rect x="88.0508%" y="277" width="0.2084%" height="15" fill="rgb(250,182,30)"/><text x="88.3008%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.04%)</title><rect x="88.2195%" y="261" width="0.0397%" height="15" fill="rgb(248,8,30)"/><text x="88.4695%" y="271.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (377 samples, 3.74%)</title><rect x="84.5276%" y="309" width="3.7416%" height="15" fill="rgb(237,120,30)"/><text x="84.7776%" y="319.50">dype..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.04%)</title><rect x="88.4081%" y="213" width="0.0397%" height="15" fill="rgb(221,146,34)"/><text x="88.6581%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.25%)</title><rect x="88.3188%" y="245" width="0.2481%" height="15" fill="rgb(242,55,13)"/><text x="88.5688%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.24%)</title><rect x="88.3287%" y="229" width="0.2382%" height="15" fill="rgb(242,112,31)"/><text x="88.5787%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.12%)</title><rect x="88.4478%" y="213" width="0.1191%" height="15" fill="rgb(249,192,27)"/><text x="88.6978%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="88.5371%" y="197" width="0.0298%" height="15" fill="rgb(208,204,44)"/><text x="88.7871%" y="207.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.31%)</title><rect x="88.2692%" y="309" width="0.3077%" height="15" fill="rgb(208,93,54)"/><text x="88.5192%" y="319.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (29 samples, 0.29%)</title><rect x="88.2890%" y="293" width="0.2878%" height="15" fill="rgb(242,1,31)"/><text x="88.5390%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (28 samples, 0.28%)</title><rect x="88.2989%" y="277" width="0.2779%" height="15" fill="rgb(241,83,25)"/><text x="88.5489%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.28%)</title><rect x="88.2989%" y="261" width="0.2779%" height="15" fill="rgb(205,169,50)"/><text x="88.5489%" y="271.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (697 samples, 6.92%)</title><rect x="81.6991%" y="357" width="6.9174%" height="15" fill="rgb(239,186,37)"/><text x="81.9491%" y="367.50">dyper_ops..</text></g><g><title>dyper_ops`serde::ser::Serializer::collect_seq (569 samples, 5.65%)</title><rect x="82.9694%" y="341" width="5.6471%" height="15" fill="rgb(205,221,10)"/><text x="83.2194%" y="351.50">dyper_o..</text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (415 samples, 4.12%)</title><rect x="84.4978%" y="325" width="4.1187%" height="15" fill="rgb(218,196,15)"/><text x="84.7478%" y="335.50">dype..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="88.5967%" y="309" width="0.0198%" height="15" fill="rgb(218,196,35)"/><text x="88.8467%" y="319.50"></text></g><g><title>dyper_ops`core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.02%)</title><rect x="88.6165%" y="357" width="0.0198%" height="15" fill="rgb(233,63,24)"/><text x="88.8665%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.04%)</title><rect x="88.6364%" y="357" width="0.0397%" height="15" fill="rgb(225,8,4)"/><text x="88.8864%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.16%)</title><rect x="88.7455%" y="341" width="0.1588%" height="15" fill="rgb(234,105,35)"/><text x="88.9955%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.16%)</title><rect x="88.7455%" y="325" width="0.1588%" height="15" fill="rgb(236,21,32)"/><text x="88.9955%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.24%)</title><rect x="88.6761%" y="357" width="0.2382%" height="15" fill="rgb(228,109,6)"/><text x="88.9261%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.12%)</title><rect x="89.1127%" y="325" width="0.1191%" height="15" fill="rgb(229,215,31)"/><text x="89.3627%" y="335.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (775 samples, 7.69%)</title><rect x="81.5998%" y="373" width="7.6915%" height="15" fill="rgb(221,52,54)"/><text x="81.8498%" y="383.50">dyper_ops`&lt;..</text></g><g><title>libsystem_malloc.dylib`free_tiny (38 samples, 0.38%)</title><rect x="88.9143%" y="357" width="0.3771%" height="15" fill="rgb(252,129,43)"/><text x="89.1643%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.29%)</title><rect x="89.0036%" y="341" width="0.2878%" height="15" fill="rgb(248,183,27)"/><text x="89.2536%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.06%)</title><rect x="89.2318%" y="325" width="0.0595%" height="15" fill="rgb(250,0,22)"/><text x="89.4818%" y="335.50"></text></g><g><title>dyper_ops`rusty_v8::object::_&lt;impl rusty_v8::data::Object&gt;::set (4 samples, 0.04%)</title><rect x="89.3112%" y="373" width="0.0397%" height="15" fill="rgb(213,166,10)"/><text x="89.5612%" y="383.50"></text></g><g><title>dyper_ops`unsigned int v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (14 samples, 0.14%)</title><rect x="89.6288%" y="293" width="0.1389%" height="15" fill="rgb(207,163,36)"/><text x="89.8788%" y="303.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector (3 samples, 0.03%)</title><rect x="89.8670%" y="277" width="0.0298%" height="15" fill="rgb(208,122,22)"/><text x="90.1170%" y="287.50"></text></g><g><title>dyper_ops`unsigned char v8::internal::StringShape::DispatchToSpecificTypeWithoutCast&lt;unsigned char v8::internal::StringShape::DispatchToSpecificType&lt;bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector&lt;unsigned char const&gt;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;) const::IsEqualToDispatcher, bool, unsigned char const*, unsigned long&amp;, v8::internal::CombinationAssertScope&lt;v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)0, false&gt;, v8::internal::PerThreadAssertScopeDebugOnly&lt;(v8::internal::PerThreadAssertType)1, false&gt; &gt;&amp;, v8::internal::SharedStringAccessGuardIfNeeded const&amp;&gt;(v8::internal::String, bool v8::internal::String::IsEqualToImpl&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::internal::Vector (6 samples, 0.06%)</title><rect x="90.1449%" y="261" width="0.0595%" height="15" fill="rgb(207,104,49)"/><text x="90.3949%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString(v8::internal::Vector (67 samples, 0.66%)</title><rect x="89.5494%" y="309" width="0.6649%" height="15" fill="rgb(248,211,50)"/><text x="89.7994%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (45 samples, 0.45%)</title><rect x="89.7678%" y="293" width="0.4466%" height="15" fill="rgb(217,13,45)"/><text x="90.0178%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (32 samples, 0.32%)</title><rect x="89.8968%" y="277" width="0.3176%" height="15" fill="rgb(211,216,49)"/><text x="90.1468%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InternalizeUtf8String(v8::internal::Vector (83 samples, 0.82%)</title><rect x="89.4502%" y="325" width="0.8237%" height="15" fill="rgb(221,58,53)"/><text x="89.7002%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (6 samples, 0.06%)</title><rect x="90.2144%" y="309" width="0.0595%" height="15" fill="rgb(220,112,41)"/><text x="90.4644%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString(v8::internal::Vector (2 samples, 0.02%)</title><rect x="90.2739%" y="325" width="0.0198%" height="15" fill="rgb(236,38,28)"/><text x="90.5239%" y="335.50"></text></g><g><title>dyper_ops`v8::String::NewFromUtf8 (93 samples, 0.92%)</title><rect x="89.3906%" y="341" width="0.9230%" height="15" fill="rgb(227,195,22)"/><text x="89.6406%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Utf8Decoder::Utf8Decoder(v8::internal::Vector (2 samples, 0.02%)</title><rect x="90.2938%" y="325" width="0.0198%" height="15" fill="rgb(214,55,33)"/><text x="90.5438%" y="335.50"></text></g><g><title>dyper_ops`rusty_v8::string::_&lt;impl rusty_v8::data::String&gt;::new_from_utf8 (99 samples, 0.98%)</title><rect x="89.3807%" y="357" width="0.9825%" height="15" fill="rgb(248,80,13)"/><text x="89.6307%" y="367.50"></text></g><g><title>dyper_ops`v8::internal::Factory::InternalizeUtf8String(v8::internal::Vector (5 samples, 0.05%)</title><rect x="90.3136%" y="341" width="0.0496%" height="15" fill="rgb(238,52,6)"/><text x="90.5636%" y="351.50"></text></g><g><title>dyper_ops`serde_v8::ser::v8_struct_key (103 samples, 1.02%)</title><rect x="89.3509%" y="373" width="1.0222%" height="15" fill="rgb(224,198,47)"/><text x="89.6009%" y="383.50"></text></g><g><title>dyper_ops`v8::Object::Set(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, v8::Local (2 samples, 0.02%)</title><rect x="90.3732%" y="373" width="0.0198%" height="15" fill="rgb(233,171,20)"/><text x="90.6232%" y="383.50"></text></g><g><title>dyper_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (8 samples, 0.08%)</title><rect x="90.4923%" y="341" width="0.0794%" height="15" fill="rgb(241,30,25)"/><text x="90.7423%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::Heap::ClearKeptObjects (2 samples, 0.02%)</title><rect x="90.5717%" y="341" width="0.0198%" height="15" fill="rgb(207,171,38)"/><text x="90.8217%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::PerformCheckpoint (19 samples, 0.19%)</title><rect x="90.6808%" y="325" width="0.1886%" height="15" fill="rgb(234,70,1)"/><text x="90.9308%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::RunMicrotasks (16 samples, 0.16%)</title><rect x="90.7106%" y="309" width="0.1588%" height="15" fill="rgb(232,178,18)"/><text x="90.9606%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Isolate::FireCallCompletedCallback (30 samples, 0.30%)</title><rect x="90.6014%" y="341" width="0.2977%" height="15" fill="rgb(241,78,40)"/><text x="90.8514%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::RunMicrotasks (3 samples, 0.03%)</title><rect x="90.8694%" y="325" width="0.0298%" height="15" fill="rgb(222,35,25)"/><text x="91.1194%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="90.8992%" y="341" width="0.0198%" height="15" fill="rgb(207,92,16)"/><text x="91.1492%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (3 samples, 0.03%)</title><rect x="90.9190%" y="341" width="0.0298%" height="15" fill="rgb(216,59,51)"/><text x="91.1690%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::MicrotaskQueue::PerformCheckpoint (3 samples, 0.03%)</title><rect x="90.9488%" y="341" width="0.0298%" height="15" fill="rgb(213,80,28)"/><text x="91.1988%" y="351.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::Key::Key(v8::internal::Isolate*, v8::internal::Handle (14 samples, 0.14%)</title><rect x="91.0877%" y="325" width="0.1389%" height="15" fill="rgb(220,93,7)"/><text x="91.3377%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (7 samples, 0.07%)</title><rect x="91.2267%" y="325" width="0.0695%" height="15" fill="rgb(225,24,44)"/><text x="91.4767%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::ApplyTransitionToDataProperty(v8::internal::Handle (37 samples, 0.37%)</title><rect x="91.4748%" y="309" width="0.3672%" height="15" fill="rgb(243,74,40)"/><text x="91.7248%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::MigrateToMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (26 samples, 0.26%)</title><rect x="91.5840%" y="293" width="0.2580%" height="15" fill="rgb(228,39,7)"/><text x="91.8340%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::UpdateDescriptorForValue(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::InternalIndex, v8::internal::PropertyConstness, v8::internal::Handle (4 samples, 0.04%)</title><rect x="92.0405%" y="293" width="0.0397%" height="15" fill="rgb(227,79,8)"/><text x="92.2905%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::(anonymous namespace)::UpdateDescriptorForValue(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::InternalIndex, v8::internal::PropertyConstness, v8::internal::Handle (16 samples, 0.16%)</title><rect x="92.3680%" y="277" width="0.1588%" height="15" fill="rgb(236,58,11)"/><text x="92.6180%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::FieldType::NowContains (3 samples, 0.03%)</title><rect x="92.4970%" y="261" width="0.0298%" height="15" fill="rgb(249,63,35)"/><text x="92.7470%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::TransitionArray::SearchAndGetTarget (2 samples, 0.02%)</title><rect x="92.6757%" y="261" width="0.0198%" height="15" fill="rgb(252,114,16)"/><text x="92.9257%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::Map::TransitionToDataProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (72 samples, 0.71%)</title><rect x="92.0802%" y="293" width="0.7146%" height="15" fill="rgb(254,151,24)"/><text x="92.3302%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::SearchTransition (26 samples, 0.26%)</title><rect x="92.5367%" y="277" width="0.2580%" height="15" fill="rgb(253,54,39)"/><text x="92.7867%" y="287.50"></text></g><g><title>dyper_ops`v8::internal::TransitionArray::SearchDetailsAndGetTarget (10 samples, 0.10%)</title><rect x="92.6955%" y="261" width="0.0992%" height="15" fill="rgb(243,25,45)"/><text x="92.9455%" y="271.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::PrepareTransitionToDataProperty(v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (104 samples, 1.03%)</title><rect x="91.8420%" y="309" width="1.0322%" height="15" fill="rgb(234,134,9)"/><text x="92.0920%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::TransitionsAccessor::SearchTransition (8 samples, 0.08%)</title><rect x="92.7948%" y="293" width="0.0794%" height="15" fill="rgb(227,166,31)"/><text x="93.0448%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::WriteDataValue(v8::internal::Handle (29 samples, 0.29%)</title><rect x="92.8742%" y="309" width="0.2878%" height="15" fill="rgb(245,143,41)"/><text x="93.1242%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::JSObject::WriteToField (16 samples, 0.16%)</title><rect x="93.0032%" y="293" width="0.1588%" height="15" fill="rgb(238,181,32)"/><text x="93.2532%" y="303.50"></text></g><g><title>dyper_ops`v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (187 samples, 1.86%)</title><rect x="91.3259%" y="325" width="1.8559%" height="15" fill="rgb(224,113,18)"/><text x="91.5759%" y="335.50">d..</text></g><g><title>dyper_ops`v8::internal::Map::TransitionToDataProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="93.1620%" y="309" width="0.0198%" height="15" fill="rgb(240,229,28)"/><text x="93.4120%" y="319.50"></text></g><g><title>dyper_ops`v8::internal::Object::SetProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (5 samples, 0.05%)</title><rect x="93.1818%" y="325" width="0.0496%" height="15" fill="rgb(250,185,3)"/><text x="93.4318%" y="335.50"></text></g><g><title>dyper_ops`void v8::internal::LookupIterator::NextInternal&lt;false&gt; (17 samples, 0.17%)</title><rect x="93.2314%" y="325" width="0.1687%" height="15" fill="rgb(212,59,25)"/><text x="93.4814%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (5 samples, 0.05%)</title><rect x="93.3505%" y="309" width="0.0496%" height="15" fill="rgb(221,87,20)"/><text x="93.6005%" y="319.50"></text></g><g><title>dyper_ops`v8::Object::Set(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, v8::Local (317 samples, 3.15%)</title><rect x="90.4129%" y="357" width="3.1461%" height="15" fill="rgb(213,74,28)"/><text x="90.6629%" y="367.50">dyp..</text></g><g><title>dyper_ops`v8::internal::Runtime::SetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::StoreOrigin, v8::Maybe (259 samples, 2.57%)</title><rect x="90.9885%" y="341" width="2.5705%" height="15" fill="rgb(224,132,34)"/><text x="91.2385%" y="351.50">dy..</text></g><g><title>dyper_ops`void v8::internal::LookupIterator::Start&lt;false&gt; (16 samples, 0.16%)</title><rect x="93.4002%" y="325" width="0.1588%" height="15" fill="rgb(222,101,24)"/><text x="93.6502%" y="335.50"></text></g><g><title>dyper_ops`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (8 samples, 0.08%)</title><rect x="93.4796%" y="309" width="0.0794%" height="15" fill="rgb(254,142,4)"/><text x="93.7296%" y="319.50"></text></g><g><title>dyper_ops`v8__Object__Set (320 samples, 3.18%)</title><rect x="90.3930%" y="373" width="3.1759%" height="15" fill="rgb(230,229,49)"/><text x="90.6430%" y="383.50">dyp..</text></g><g><title>dyper_ops`&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::serialize_field (1,225 samples, 12.16%)</title><rect x="81.4410%" y="389" width="12.1576%" height="15" fill="rgb(238,70,47)"/><text x="81.6910%" y="399.50">dyper_ops`&lt;serde_v..</text></g><g><title>dyper_ops`serde_v8::ser::v8_struct_key (2 samples, 0.02%)</title><rect x="93.6185%" y="389" width="0.0198%" height="15" fill="rgb(231,160,17)"/><text x="93.8685%" y="399.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (1,427 samples, 14.16%)</title><rect x="79.5058%" y="421" width="14.1624%" height="15" fill="rgb(218,68,53)"/><text x="79.7558%" y="431.50">dyper_ops`&lt;T as erased..</text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (1,239 samples, 12.30%)</title><rect x="81.3716%" y="405" width="12.2965%" height="15" fill="rgb(236,111,10)"/><text x="81.6216%" y="415.50">dyper_ops`core::op..</text></g><g><title>dyper_ops`v8__Object__Set (3 samples, 0.03%)</title><rect x="93.6383%" y="389" width="0.0298%" height="15" fill="rgb(224,34,41)"/><text x="93.8883%" y="399.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (3 samples, 0.03%)</title><rect x="93.6681%" y="421" width="0.0298%" height="15" fill="rgb(241,118,19)"/><text x="93.9181%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.03%)</title><rect x="93.7078%" y="421" width="0.0298%" height="15" fill="rgb(238,129,25)"/><text x="93.9578%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.07%)</title><rect x="93.7376%" y="421" width="0.0695%" height="15" fill="rgb(238,22,31)"/><text x="93.9876%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.06%)</title><rect x="93.7475%" y="405" width="0.0595%" height="15" fill="rgb(222,174,48)"/><text x="93.9975%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.04%)</title><rect x="93.7674%" y="389" width="0.0397%" height="15" fill="rgb(206,152,40)"/><text x="94.0174%" y="399.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (1,470 samples, 14.59%)</title><rect x="79.4561%" y="437" width="14.5891%" height="15" fill="rgb(218,99,54)"/><text x="79.7061%" y="447.50">dyper_ops`&lt;dyn erased_..</text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.24%)</title><rect x="93.8071%" y="421" width="0.2382%" height="15" fill="rgb(220,174,26)"/><text x="94.0571%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.11%)</title><rect x="93.9361%" y="405" width="0.1092%" height="15" fill="rgb(245,116,9)"/><text x="94.1861%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.08%)</title><rect x="93.9659%" y="389" width="0.0794%" height="15" fill="rgb(209,72,35)"/><text x="94.2159%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (27 samples, 0.27%)</title><rect x="94.0850%" y="421" width="0.2680%" height="15" fill="rgb(226,126,21)"/><text x="94.3350%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.24%)</title><rect x="94.1147%" y="405" width="0.2382%" height="15" fill="rgb(227,192,1)"/><text x="94.3647%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.22%)</title><rect x="94.1346%" y="389" width="0.2183%" height="15" fill="rgb(237,180,29)"/><text x="94.3846%" y="399.50"></text></g><g><title>dyper_ops`&lt;erased_serde::ser::erase::Serializer&lt;T&gt; as erased_serde::ser::Serializer&gt;::erased_serialize_some (1,507 samples, 14.96%)</title><rect x="79.4065%" y="453" width="14.9563%" height="15" fill="rgb(230,197,35)"/><text x="79.6565%" y="463.50">dyper_ops`&lt;erased_serde..</text></g><g><title>libsystem_malloc.dylib`malloc (30 samples, 0.30%)</title><rect x="94.0651%" y="437" width="0.2977%" height="15" fill="rgb(246,193,31)"/><text x="94.3151%" y="447.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (1,549 samples, 15.37%)</title><rect x="79.0195%" y="469" width="15.3732%" height="15" fill="rgb(241,36,4)"/><text x="79.2695%" y="479.50">dyper_ops`&lt;T as erased_s..</text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="94.3728%" y="453" width="0.0198%" height="15" fill="rgb(241,130,17)"/><text x="94.6228%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.03%)</title><rect x="94.4025%" y="469" width="0.0298%" height="15" fill="rgb(206,137,32)"/><text x="94.6525%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.12%)</title><rect x="94.4323%" y="469" width="0.1191%" height="15" fill="rgb(237,228,51)"/><text x="94.6823%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="94.5216%" y="453" width="0.0298%" height="15" fill="rgb(243,6,42)"/><text x="94.7716%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.03%)</title><rect x="94.5216%" y="437" width="0.0298%" height="15" fill="rgb(251,74,28)"/><text x="94.7716%" y="447.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (1,592 samples, 15.80%)</title><rect x="78.9996%" y="485" width="15.7999%" height="15" fill="rgb(218,20,49)"/><text x="79.2496%" y="495.50">dyper_ops`&lt;dyn erased_se..</text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.25%)</title><rect x="94.5514%" y="469" width="0.2481%" height="15" fill="rgb(238,28,14)"/><text x="94.8014%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.20%)</title><rect x="94.8591%" y="437" width="0.1985%" height="15" fill="rgb(229,40,46)"/><text x="95.1091%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.17%)</title><rect x="94.8888%" y="421" width="0.1687%" height="15" fill="rgb(244,195,20)"/><text x="95.1388%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.17%)</title><rect x="94.8888%" y="405" width="0.1687%" height="15" fill="rgb(253,56,35)"/><text x="95.1388%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.07%)</title><rect x="94.9881%" y="389" width="0.0695%" height="15" fill="rgb(210,149,44)"/><text x="95.2381%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="95.0377%" y="373" width="0.0198%" height="15" fill="rgb(240,135,12)"/><text x="95.2877%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.22%)</title><rect x="94.8491%" y="453" width="0.2183%" height="15" fill="rgb(251,24,50)"/><text x="95.0991%" y="463.50"></text></g><g><title>dyper_ops`alloc::raw_vec::finish_grow (24 samples, 0.24%)</title><rect x="94.8392%" y="469" width="0.2382%" height="15" fill="rgb(243,200,47)"/><text x="95.0892%" y="479.50"></text></g><g><title>dyper_ops`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.28%)</title><rect x="94.8094%" y="485" width="0.2779%" height="15" fill="rgb(224,166,26)"/><text x="95.0594%" y="495.50"></text></g><g><title>dyper_ops`serde_v8::ser::Serializer::new (2 samples, 0.02%)</title><rect x="95.0873%" y="485" width="0.0198%" height="15" fill="rgb(233,0,47)"/><text x="95.3373%" y="495.50"></text></g><g><title>dyper_ops`&lt;T as erased_serde::ser::Serialize&gt;::erased_serialize (1,793 samples, 17.79%)</title><rect x="77.3521%" y="517" width="17.7948%" height="15" fill="rgb(253,80,5)"/><text x="77.6021%" y="527.50">dyper_ops`&lt;T as erased_serde..</text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (1,640 samples, 16.28%)</title><rect x="78.8706%" y="501" width="16.2763%" height="15" fill="rgb(214,133,25)"/><text x="79.1206%" y="511.50">dyper_ops`core::ops::func..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.03%)</title><rect x="95.1171%" y="485" width="0.0298%" height="15" fill="rgb(209,27,14)"/><text x="95.3671%" y="495.50"></text></g><g><title>dyper_ops`core::ops::function::FnOnce::call_once (4 samples, 0.04%)</title><rect x="95.1469%" y="517" width="0.0397%" height="15" fill="rgb(219,102,51)"/><text x="95.3969%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.03%)</title><rect x="95.2064%" y="501" width="0.0298%" height="15" fill="rgb(237,18,16)"/><text x="95.4564%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.03%)</title><rect x="95.2064%" y="485" width="0.0298%" height="15" fill="rgb(241,85,17)"/><text x="95.4564%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.06%)</title><rect x="95.1866%" y="517" width="0.0595%" height="15" fill="rgb(236,90,42)"/><text x="95.4366%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="95.4049%" y="485" width="0.0298%" height="15" fill="rgb(249,57,21)"/><text x="95.6549%" y="495.50"></text></g><g><title>dyper_ops`&lt;dyn erased_serde::ser::Serialize as serde::ser::Serialize&gt;::serialize (1,831 samples, 18.17%)</title><rect x="77.2827%" y="533" width="18.1719%" height="15" fill="rgb(243,12,36)"/><text x="77.5327%" y="543.50">dyper_ops`&lt;dyn erased_serde:..</text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.21%)</title><rect x="95.2461%" y="517" width="0.2084%" height="15" fill="rgb(253,128,47)"/><text x="95.4961%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.10%)</title><rect x="95.3553%" y="501" width="0.0992%" height="15" fill="rgb(207,33,20)"/><text x="95.6053%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="95.4347%" y="485" width="0.0198%" height="15" fill="rgb(233,215,35)"/><text x="95.6847%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.04%)</title><rect x="95.5042%" y="501" width="0.0397%" height="15" fill="rgb(249,188,52)"/><text x="95.7542%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (15 samples, 0.15%)</title><rect x="95.6729%" y="485" width="0.1489%" height="15" fill="rgb(225,12,32)"/><text x="95.9229%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.13%)</title><rect x="95.6927%" y="469" width="0.1290%" height="15" fill="rgb(247,98,14)"/><text x="95.9427%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.30%)</title><rect x="95.5439%" y="501" width="0.2977%" height="15" fill="rgb(247,219,48)"/><text x="95.7939%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="95.8218%" y="485" width="0.0198%" height="15" fill="rgb(253,60,48)"/><text x="96.0718%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="96.1393%" y="485" width="0.0198%" height="15" fill="rgb(245,15,52)"/><text x="96.3893%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.23%)</title><rect x="96.4272%" y="469" width="0.2283%" height="15" fill="rgb(220,133,28)"/><text x="96.6772%" y="479.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (133 samples, 1.32%)</title><rect x="95.4645%" y="517" width="1.3200%" height="15" fill="rgb(217,180,4)"/><text x="95.7145%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (95 samples, 0.94%)</title><rect x="95.8416%" y="501" width="0.9428%" height="15" fill="rgb(251,24,1)"/><text x="96.0916%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (63 samples, 0.63%)</title><rect x="96.1592%" y="485" width="0.6252%" height="15" fill="rgb(212,185,49)"/><text x="96.4092%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.13%)</title><rect x="96.6554%" y="469" width="0.1290%" height="15" fill="rgb(215,175,22)"/><text x="96.9054%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="96.7844%" y="517" width="0.0198%" height="15" fill="rgb(250,205,14)"/><text x="97.0344%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.08%)</title><rect x="96.8043%" y="517" width="0.0794%" height="15" fill="rgb(225,211,22)"/><text x="97.0543%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="96.8638%" y="501" width="0.0198%" height="15" fill="rgb(251,179,42)"/><text x="97.1138%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="96.8638%" y="485" width="0.0198%" height="15" fill="rgb(208,216,51)"/><text x="97.1138%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.05%)</title><rect x="96.9929%" y="485" width="0.0496%" height="15" fill="rgb(235,36,11)"/><text x="97.2429%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.24%)</title><rect x="96.8837%" y="517" width="0.2382%" height="15" fill="rgb(213,189,28)"/><text x="97.1337%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.20%)</title><rect x="96.9234%" y="501" width="0.1985%" height="15" fill="rgb(227,203,42)"/><text x="97.1734%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.08%)</title><rect x="97.0425%" y="485" width="0.0794%" height="15" fill="rgb(244,72,36)"/><text x="97.2925%" y="495.50"></text></g><g><title>dyper_ops`core::ptr::drop_in_place (171 samples, 1.70%)</title><rect x="95.4545%" y="533" width="1.6971%" height="15" fill="rgb(213,53,17)"/><text x="95.7045%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.03%)</title><rect x="97.1219%" y="517" width="0.0298%" height="15" fill="rgb(207,167,3)"/><text x="97.3719%" y="527.50"></text></g><g><title>dyper_ops`rusty_v8::scope::EscapableHandleScope&lt;C&gt;::escape (2 samples, 0.02%)</title><rect x="97.1516%" y="533" width="0.0198%" height="15" fill="rgb(216,98,30)"/><text x="97.4016%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::get_escape_slot_mut (3 samples, 0.03%)</title><rect x="97.1715%" y="533" width="0.0298%" height="15" fill="rgb(236,123,15)"/><text x="97.4215%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_escapable_handle_scope_data (6 samples, 0.06%)</title><rect x="97.2013%" y="533" width="0.0595%" height="15" fill="rgb(248,81,50)"/><text x="97.4513%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.15%)</title><rect x="97.2906%" y="533" width="0.1489%" height="15" fill="rgb(214,120,4)"/><text x="97.5406%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.10%)</title><rect x="97.3402%" y="517" width="0.0992%" height="15" fill="rgb(208,179,34)"/><text x="97.5902%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.10%)</title><rect x="97.3402%" y="501" width="0.0992%" height="15" fill="rgb(227,140,7)"/><text x="97.5902%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.11%)</title><rect x="97.7074%" y="501" width="0.1092%" height="15" fill="rgb(214,22,6)"/><text x="97.9574%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.40%)</title><rect x="97.4395%" y="533" width="0.3970%" height="15" fill="rgb(207,137,27)"/><text x="97.6895%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.23%)</title><rect x="97.6082%" y="517" width="0.2283%" height="15" fill="rgb(210,8,46)"/><text x="97.8582%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="97.8166%" y="501" width="0.0198%" height="15" fill="rgb(240,16,54)"/><text x="98.0666%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc (21 samples, 0.21%)</title><rect x="97.8364%" y="533" width="0.2084%" height="15" fill="rgb(211,209,29)"/><text x="98.0864%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.20%)</title><rect x="97.8464%" y="517" width="0.1985%" height="15" fill="rgb(226,228,24)"/><text x="98.0964%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.20%)</title><rect x="97.8464%" y="501" width="0.1985%" height="15" fill="rgb(222,84,9)"/><text x="98.0964%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.18%)</title><rect x="97.8662%" y="485" width="0.1786%" height="15" fill="rgb(234,203,30)"/><text x="98.1162%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="97.9952%" y="469" width="0.0496%" height="15" fill="rgb(238,109,14)"/><text x="98.2452%" y="479.50"></text></g><g><title>dyper_ops`serde_v8::ser::to_v8 (2,111 samples, 20.95%)</title><rect x="77.1239%" y="549" width="20.9508%" height="15" fill="rgb(233,206,34)"/><text x="77.3739%" y="559.50">dyper_ops`serde_v8::ser::to_v8</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="98.0548%" y="533" width="0.0198%" height="15" fill="rgb(220,167,47)"/><text x="98.3048%" y="543.50"></text></g><g><title>dyper_ops`std__shared_ptr__v8__BackingStore__get (2 samples, 0.02%)</title><rect x="98.0746%" y="549" width="0.0198%" height="15" fill="rgb(238,105,10)"/><text x="98.3246%" y="559.50"></text></g><g><title>dyper_ops`tokio::util::wake::wake_arc_raw (108 samples, 1.07%)</title><rect x="98.0945%" y="549" width="1.0719%" height="15" fill="rgb(213,227,17)"/><text x="98.3445%" y="559.50"></text></g><g><title>dyper_ops`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (107 samples, 1.06%)</title><rect x="98.1044%" y="533" width="1.0619%" height="15" fill="rgb(217,132,38)"/><text x="98.3544%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`kevent (103 samples, 1.02%)</title><rect x="98.1441%" y="517" width="1.0222%" height="15" fill="rgb(242,146,4)"/><text x="98.3941%" y="527.50"></text></g><g><title>dyper_ops`v8::TryCatch::TryCatch (3 samples, 0.03%)</title><rect x="99.1961%" y="549" width="0.0298%" height="15" fill="rgb(212,61,9)"/><text x="99.4461%" y="559.50"></text></g><g><title>dyper_ops`v8__Global__New (5 samples, 0.05%)</title><rect x="99.2656%" y="549" width="0.0496%" height="15" fill="rgb(247,126,22)"/><text x="99.5156%" y="559.50"></text></g><g><title>dyper_ops`v8::V8::GlobalizeReference (5 samples, 0.05%)</title><rect x="99.2656%" y="533" width="0.0496%" height="15" fill="rgb(220,196,2)"/><text x="99.5156%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::GlobalHandles::Create (2 samples, 0.02%)</title><rect x="99.2954%" y="517" width="0.0198%" height="15" fill="rgb(208,46,4)"/><text x="99.5454%" y="527.50"></text></g><g><title>dyper_ops`v8__Isolate__GetData (2 samples, 0.02%)</title><rect x="99.3251%" y="549" width="0.0198%" height="15" fill="rgb(252,104,46)"/><text x="99.5751%" y="559.50"></text></g><g><title>dyper_ops`v8__TryCatch__CONSTRUCT (2 samples, 0.02%)</title><rect x="99.3450%" y="549" width="0.0198%" height="15" fill="rgb(237,152,48)"/><text x="99.5950%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="99.3648%" y="549" width="0.0198%" height="15" fill="rgb(221,59,37)"/><text x="99.6148%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="99.3847%" y="549" width="0.0198%" height="15" fill="rgb(209,202,51)"/><text x="99.6347%" y="559.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::poll_event_loop (9,551 samples, 94.79%)</title><rect x="4.6943%" y="565" width="94.7896%" height="15" fill="rgb(228,81,30)"/><text x="4.9443%" y="575.50">dyper_ops`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.08%)</title><rect x="99.4045%" y="549" width="0.0794%" height="15" fill="rgb(227,42,39)"/><text x="99.6545%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.07%)</title><rect x="99.4145%" y="533" width="0.0695%" height="15" fill="rgb(221,26,2)"/><text x="99.6645%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.07%)</title><rect x="99.4145%" y="517" width="0.0695%" height="15" fill="rgb(254,61,31)"/><text x="99.6645%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.06%)</title><rect x="99.4244%" y="501" width="0.0595%" height="15" fill="rgb(222,173,38)"/><text x="99.6744%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.05%)</title><rect x="99.4343%" y="485" width="0.0496%" height="15" fill="rgb(218,50,12)"/><text x="99.6843%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="99.4541%" y="469" width="0.0298%" height="15" fill="rgb(223,88,40)"/><text x="99.7041%" y="479.50"></text></g><g><title>dyper_ops`deno_core::bindings::initialize_context (2 samples, 0.02%)</title><rect x="99.4938%" y="533" width="0.0198%" height="15" fill="rgb(237,54,19)"/><text x="99.7438%" y="543.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::execute (2 samples, 0.02%)</title><rect x="99.5137%" y="533" width="0.0198%" height="15" fill="rgb(251,129,25)"/><text x="99.7637%" y="543.50"></text></g><g><title>dyper_ops`rusty_v8::isolate::Isolate::new (2 samples, 0.02%)</title><rect x="99.5335%" y="533" width="0.0198%" height="15" fill="rgb(238,97,19)"/><text x="99.7835%" y="543.50"></text></g><g><title>dyper_ops`v8::Isolate::New (2 samples, 0.02%)</title><rect x="99.5335%" y="517" width="0.0198%" height="15" fill="rgb(240,169,18)"/><text x="99.7835%" y="527.50"></text></g><g><title>dyper_ops`v8::Isolate::Initialize (2 samples, 0.02%)</title><rect x="99.5335%" y="501" width="0.0198%" height="15" fill="rgb(230,187,49)"/><text x="99.7835%" y="511.50"></text></g><g><title>dyper_ops`v8::internal::Snapshot::Initialize (2 samples, 0.02%)</title><rect x="99.5335%" y="485" width="0.0198%" height="15" fill="rgb(209,44,26)"/><text x="99.7835%" y="495.50"></text></g><g><title>dyper_ops`dyper_ops::create_js_runtime (7 samples, 0.07%)</title><rect x="99.4938%" y="565" width="0.0695%" height="15" fill="rgb(244,0,6)"/><text x="99.7438%" y="575.50"></text></g><g><title>dyper_ops`deno_core::runtime::JsRuntime::new (7 samples, 0.07%)</title><rect x="99.4938%" y="549" width="0.0695%" height="15" fill="rgb(248,18,21)"/><text x="99.7438%" y="559.50"></text></g><g><title>dyper_ops`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (2 samples, 0.02%)</title><rect x="99.5633%" y="565" width="0.0198%" height="15" fill="rgb(245,180,19)"/><text x="99.8133%" y="575.50"></text></g><g><title>dyper_ops`rusty_v8::context::_&lt;impl rusty_v8::data::Context&gt;::global (2 samples, 0.02%)</title><rect x="99.5832%" y="565" width="0.0198%" height="15" fill="rgb(252,118,36)"/><text x="99.8332%" y="575.50"></text></g><g><title>dyper_ops`rusty_v8::scope::HandleScope::get_current_context (2 samples, 0.02%)</title><rect x="99.6427%" y="565" width="0.0198%" height="15" fill="rgb(210,224,19)"/><text x="99.8927%" y="575.50"></text></g><g><title>dyper_ops`rusty_v8::scope::data::ScopeData::new_try_catch_data (2 samples, 0.02%)</title><rect x="99.6725%" y="565" width="0.0198%" height="15" fill="rgb(218,30,24)"/><text x="99.9225%" y="575.50"></text></g><g><title>dyper_ops`serde_v8::ser::to_v8 (2 samples, 0.02%)</title><rect x="99.7023%" y="565" width="0.0198%" height="15" fill="rgb(219,75,50)"/><text x="99.9523%" y="575.50"></text></g><g><title>dyper_ops`std::thread::local::LocalKey&lt;T&gt;::with (9,607 samples, 95.35%)</title><rect x="4.4065%" y="597" width="95.3454%" height="15" fill="rgb(234,72,50)"/><text x="4.6565%" y="607.50">dyper_ops`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,606 samples, 95.34%)</title><rect x="4.4164%" y="581" width="95.3355%" height="15" fill="rgb(219,100,48)"/><text x="4.6664%" y="591.50">dyper_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>dyper_ops`v8::internal::GlobalHandles::Destroy (2 samples, 0.02%)</title><rect x="99.7320%" y="565" width="0.0198%" height="15" fill="rgb(253,5,41)"/><text x="99.9820%" y="575.50"></text></g><g><title>dyper_ops`tokio::runtime::basic_scheduler::Spawner::pop (3 samples, 0.03%)</title><rect x="99.7618%" y="597" width="0.0298%" height="15" fill="rgb(247,181,11)"/><text x="100.0118%" y="607.50"></text></g><g><title>dyper_ops`0x1 (10,056 samples, 99.80%)</title><rect x="0.0000%" y="741" width="99.8015%" height="15" fill="rgb(222,223,25)"/><text x="0.2500%" y="751.50">dyper_ops`0x1</text></g><g><title>libdyld.dylib`start (10,056 samples, 99.80%)</title><rect x="0.0000%" y="725" width="99.8015%" height="15" fill="rgb(214,198,28)"/><text x="0.2500%" y="735.50">libdyld.dylib`start</text></g><g><title>dyper_ops`main (10,056 samples, 99.80%)</title><rect x="0.0000%" y="709" width="99.8015%" height="15" fill="rgb(230,46,43)"/><text x="0.2500%" y="719.50">dyper_ops`main</text></g><g><title>dyper_ops`std::rt::lang_start_internal (10,056 samples, 99.80%)</title><rect x="0.0000%" y="693" width="99.8015%" height="15" fill="rgb(233,65,53)"/><text x="0.2500%" y="703.50">dyper_ops`std::rt::lang_start_internal</text></g><g><title>dyper_ops`std::rt::lang_start::_{{closure}} (10,056 samples, 99.80%)</title><rect x="0.0000%" y="677" width="99.8015%" height="15" fill="rgb(221,121,27)"/><text x="0.2500%" y="687.50">dyper_ops`std::rt::lang_start::_{{closure}}</text></g><g><title>dyper_ops`std::sys_common::backtrace::__rust_begin_short_backtrace (10,056 samples, 99.80%)</title><rect x="0.0000%" y="661" width="99.8015%" height="15" fill="rgb(247,70,47)"/><text x="0.2500%" y="671.50">dyper_ops`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dyper_ops`dyper_ops::main (10,056 samples, 99.80%)</title><rect x="0.0000%" y="645" width="99.8015%" height="15" fill="rgb(228,85,35)"/><text x="0.2500%" y="655.50">dyper_ops`dyper_ops::main</text></g><g><title>dyper_ops`tokio::runtime::Runtime::block_on (10,056 samples, 99.80%)</title><rect x="0.0000%" y="629" width="99.8015%" height="15" fill="rgb(209,50,18)"/><text x="0.2500%" y="639.50">dyper_ops`tokio::runtime::Runtime::block_on</text></g><g><title>dyper_ops`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (10,054 samples, 99.78%)</title><rect x="0.0198%" y="613" width="99.7817%" height="15" fill="rgb(250,19,35)"/><text x="0.2698%" y="623.50">dyper_ops`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on</text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (2 samples, 0.02%)</title><rect x="99.8214%" y="581" width="0.0198%" height="15" fill="rgb(253,107,29)"/><text x="100.0714%" y="591.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::SelectInstructions (4 samples, 0.04%)</title><rect x="99.8214%" y="597" width="0.0397%" height="15" fill="rgb(252,179,29)"/><text x="100.0714%" y="607.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InstructionSelectionPhase, v8::internal::compiler::Linkage*&amp;&gt; (2 samples, 0.02%)</title><rect x="99.8412%" y="581" width="0.0198%" height="15" fill="rgb(238,194,6)"/><text x="100.0912%" y="591.50"></text></g><g><title>dyper_ops`v8::internal::compiler::InstructionSelectionPhase::Run (2 samples, 0.02%)</title><rect x="99.8412%" y="565" width="0.0198%" height="15" fill="rgb(238,164,29)"/><text x="100.0912%" y="575.50"></text></g><g><title>dyper_ops`v8::internal::compiler::InstructionSelector::SelectInstructions (2 samples, 0.02%)</title><rect x="99.8412%" y="549" width="0.0198%" height="15" fill="rgb(224,25,9)"/><text x="100.0912%" y="559.50"></text></g><g><title>dyper_ops`v8::internal::compiler::InstructionSelector::VisitBlock (2 samples, 0.02%)</title><rect x="99.8412%" y="533" width="0.0198%" height="15" fill="rgb(244,153,23)"/><text x="100.0912%" y="543.50"></text></g><g><title>dyper_ops`v8::internal::compiler::EffectGraphReducer::ReduceFrom (2 samples, 0.02%)</title><rect x="99.8908%" y="565" width="0.0198%" height="15" fill="rgb(212,203,14)"/><text x="100.1408%" y="575.50"></text></g><g><title>dyper_ops`void v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (3 samples, 0.03%)</title><rect x="99.8908%" y="597" width="0.0298%" height="15" fill="rgb(220,164,20)"/><text x="100.1408%" y="607.50"></text></g><g><title>dyper_ops`v8::internal::compiler::EscapeAnalysisPhase::Run (3 samples, 0.03%)</title><rect x="99.8908%" y="581" width="0.0298%" height="15" fill="rgb(222,203,48)"/><text x="100.1408%" y="591.50"></text></g><g><title>dyper_ops`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (15 samples, 0.15%)</title><rect x="99.8114%" y="677" width="0.1489%" height="15" fill="rgb(215,159,22)"/><text x="100.0614%" y="687.50"></text></g><g><title>dyper_ops`v8::internal::OptimizingCompileDispatcher::CompileNext (15 samples, 0.15%)</title><rect x="99.8114%" y="661" width="0.1489%" height="15" fill="rgb(216,183,47)"/><text x="100.0614%" y="671.50"></text></g><g><title>dyper_ops`v8::internal::OptimizedCompilationJob::ExecuteJob (15 samples, 0.15%)</title><rect x="99.8114%" y="645" width="0.1489%" height="15" fill="rgb(229,195,25)"/><text x="100.0614%" y="655.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (15 samples, 0.15%)</title><rect x="99.8114%" y="629" width="0.1489%" height="15" fill="rgb(224,132,51)"/><text x="100.0614%" y="639.50"></text></g><g><title>dyper_ops`v8::internal::compiler::PipelineImpl::OptimizeGraph (14 samples, 0.14%)</title><rect x="99.8214%" y="613" width="0.1389%" height="15" fill="rgb(240,63,7)"/><text x="100.0714%" y="623.50"></text></g><g><title>dyper_ops`v8::platform::DefaultJobWorker::Run (2 samples, 0.02%)</title><rect x="99.9603%" y="677" width="0.0198%" height="15" fill="rgb(249,182,41)"/><text x="100.2103%" y="687.50"></text></g><g><title>all (10,076 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(243,47,26)"/><text x="0.2500%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (20 samples, 0.20%)</title><rect x="99.8015%" y="741" width="0.1985%" height="15" fill="rgb(233,48,2)"/><text x="100.0515%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (20 samples, 0.20%)</title><rect x="99.8015%" y="725" width="0.1985%" height="15" fill="rgb(244,165,34)"/><text x="100.0515%" y="735.50"></text></g><g><title>dyper_ops`v8::base::ThreadEntry (20 samples, 0.20%)</title><rect x="99.8015%" y="709" width="0.1985%" height="15" fill="rgb(207,89,7)"/><text x="100.0515%" y="719.50"></text></g><g><title>dyper_ops`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (20 samples, 0.20%)</title><rect x="99.8015%" y="693" width="0.1985%" height="15" fill="rgb(244,117,36)"/><text x="100.0515%" y="703.50"></text></g><g><title>dyper_ops`v8::platform::DelayedTaskQueue::GetNext (2 samples, 0.02%)</title><rect x="99.9802%" y="677" width="0.0198%" height="15" fill="rgb(226,144,34)"/><text x="100.2302%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.02%)</title><rect x="99.9802%" y="661" width="0.0198%" height="15" fill="rgb(213,23,19)"/><text x="100.2302%" y="671.50"></text></g></svg></svg>